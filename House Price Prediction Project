{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":5407,"databundleVersionId":868283,"sourceType":"competition"}],"dockerImageVersionId":30786,"isInternetEnabled":false,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"## **Project Overview**  \nThis project aims to predict house prices using machine learning models. The dataset consists of numerical and categorical features that influence housing prices. The workflow includes data preprocessing, feature engineering, model training, and evaluation to determine the best-performing model.  \n\n## **Steps Followed**  \n\n### **1Ô∏è‚É£ Data Preparation**  \n- Imported essential libraries (`numpy`, `pandas`, `matplotlib`, `seaborn`, `sklearn`).  \n- Loaded the dataset and examined its structure.  \n- Identified feature types (numerical, categorical) and handled missing values.  \n\n### **2Ô∏è‚É£ Exploratory Data Analysis (EDA)**  \n- Plotted scatterplots to identify trends and outliers.  \n- Generated a correlation heatmap to find the most important features.  \n- Analyzed the `SalePrice` distribution to check for skewness.  \n\n### **3Ô∏è‚É£ Feature Engineering**  \nCreated new features to enhance model performance:  \n- **`HouseAge`** = `YrSold` - `YearBuilt` (Age of house since built)  \n- **`HouseRemodelAge`** = `YrSold` - `YearRemodAdd` (Years since last remodel)  \n- **`TotalSF`** = `1stFlrSF` + `2ndFlrSF` + `BsmtFinSF1` + `BsmtFinSF2` (Total square footage)  \n- **`TotalArea`** = `GrLivArea` + `TotalBsmtSF` (Total living + basement area)  \n- **`TotalBaths`** = `BsmtFullBath` + `FullBath` + `0.5 * (BsmtHalfBath + HalfBath)` (Total bathrooms, where half baths count as 0.5)  \n- **`TotalPorchSF`** = `OpenPorchSF` + `3SsnPorch` + `EnclosedPorch` + `ScreenPorch` + `WoodDeckSF` (Total porch and deck space)  \n- Dropped irrelevant or highly correlated features.  \n\n### **4Ô∏è‚É£ Data Preprocessing**  \n- **Categorical Features**  \n  - Ordinal features ‚Üí Encoded using `OrdinalEncoder`.  \n  - Nominal features ‚Üí Applied `OneHotEncoding`.  \n- **Numerical Features**  \n  - Handled missing values.  \n  - Standardized using `StandardScaler`.  \n- Combined all transformations using `ColumnTransformer`.  \n\n### **5Ô∏è‚É£ Target Variable Transformation**  \n- Applied log transformation: `np.log1p(SalePrice)` to normalize the target variable.  \n\n### **6Ô∏è‚É£ Model Training & Evaluation**  \nSplit data into **80% training / 20% testing** and trained multiple models:  \n‚úÖ **Linear Regression**  \n‚úÖ **Random Forest Regressor** (with `GridSearchCV` for hyperparameter tuning)  \n‚úÖ **XGBoost**  \n‚úÖ **Ridge Regression**  \n‚úÖ **Gradient Boosting Regressor**  \n‚úÖ **LGBM Regressor** (with Cross Validation)  \n‚úÖ **CatBoost Regressor**  \n\n**Evaluation Metric:** Root Mean Squared Error (RMSE)  \n\n### **7Ô∏è‚É£ Stacking Model for Final Prediction**  \n- Combined multiple models using **Stacking Regressor** to improve performance.  \n- Generated final predictions on the test set.  \n\n### **8Ô∏è‚É£ Submission**  \n- Converted predictions back to the original scale using `np.exp()`.  \n- Created a submission file (`CSV`) containing the predicted `SalePrice`.  \n\n## **üìÇ Technologies Used**  \n- **Python** (`pandas`, `numpy`, `matplotlib`, `seaborn`)  \n- **Scikit-learn** (`LinearRegression`, `RandomForestRegressor`, `GradientBoostingRegressor`, `GridSearchCV`)  \n- **XGBoost, CatBoost, LGBM**  \n- **Feature Engineering & Data Preprocessing** (`ColumnTransformer`, `OneHotEncoding`, `StandardScaler`)  \n","metadata":{}},{"cell_type":"code","source":"import pandas as pd\nimport numpy as np\nfrom scipy import stats\nfrom sklearn.metrics import mean_squared_error\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.compose import make_column_transformer, ColumnTransformer\nfrom sklearn.pipeline import Pipeline, make_pipeline\nfrom sklearn.impute import SimpleImputer\nfrom sklearn.preprocessing import OrdinalEncoder, StandardScaler, OneHotEncoder\nfrom sklearn.metrics import r2_score, mean_absolute_percentage_error\nfrom sklearn.linear_model import LinearRegression, Ridge, ElasticNet, Lasso\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost import XGBRegressor\nfrom catboost import CatBoostClassifier\nfrom sklearn.kernel_ridge import KernelRidge","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:27.925441Z","iopub.execute_input":"2025-03-19T06:17:27.925862Z","iopub.status.idle":"2025-03-19T06:17:30.276519Z","shell.execute_reply.started":"2025-03-19T06:17:27.925823Z","shell.execute_reply":"2025-03-19T06:17:30.275471Z"}},"outputs":[],"execution_count":1},{"cell_type":"code","source":"train_df = pd.read_csv('/kaggle/input/house-prices-advanced-regression-techniques/train.csv')\ntest_df = pd.read_csv('/kaggle/input/house-prices-advanced-regression-techniques/test.csv')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:30.278522Z","iopub.execute_input":"2025-03-19T06:17:30.279065Z","iopub.status.idle":"2025-03-19T06:17:30.402100Z","shell.execute_reply.started":"2025-03-19T06:17:30.279027Z","shell.execute_reply":"2025-03-19T06:17:30.400619Z"}},"outputs":[],"execution_count":2},{"cell_type":"code","source":"train_df.shape","metadata":{"execution":{"iopub.status.busy":"2025-03-19T06:17:30.403692Z","iopub.execute_input":"2025-03-19T06:17:30.404158Z","iopub.status.idle":"2025-03-19T06:17:30.412710Z","shell.execute_reply.started":"2025-03-19T06:17:30.404108Z","shell.execute_reply":"2025-03-19T06:17:30.411419Z"},"trusted":true},"outputs":[{"execution_count":3,"output_type":"execute_result","data":{"text/plain":"(1460, 81)"},"metadata":{}}],"execution_count":3},{"cell_type":"markdown","source":"1460 samples (rows): These represent the number of observations or data points in your dataset.\n81 features (columns): These are the attributes, variables, or characteristics for each sample.","metadata":{}},{"cell_type":"code","source":"train_df.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:30.416051Z","iopub.execute_input":"2025-03-19T06:17:30.416373Z","iopub.status.idle":"2025-03-19T06:17:30.461890Z","shell.execute_reply.started":"2025-03-19T06:17:30.416345Z","shell.execute_reply":"2025-03-19T06:17:30.460686Z"}},"outputs":[{"execution_count":4,"output_type":"execute_result","data":{"text/plain":"   Id  MSSubClass MSZoning  LotFrontage  LotArea Street Alley LotShape  \\\n0   1          60       RL         65.0     8450   Pave   NaN      Reg   \n1   2          20       RL         80.0     9600   Pave   NaN      Reg   \n2   3          60       RL         68.0    11250   Pave   NaN      IR1   \n3   4          70       RL         60.0     9550   Pave   NaN      IR1   \n4   5          60       RL         84.0    14260   Pave   NaN      IR1   \n\n  LandContour Utilities  ... PoolArea PoolQC Fence MiscFeature MiscVal MoSold  \\\n0         Lvl    AllPub  ...        0    NaN   NaN         NaN       0      2   \n1         Lvl    AllPub  ...        0    NaN   NaN         NaN       0      5   \n2         Lvl    AllPub  ...        0    NaN   NaN         NaN       0      9   \n3         Lvl    AllPub  ...        0    NaN   NaN         NaN       0      2   \n4         Lvl    AllPub  ...        0    NaN   NaN         NaN       0     12   \n\n  YrSold  SaleType  SaleCondition  SalePrice  \n0   2008        WD         Normal     208500  \n1   2007        WD         Normal     181500  \n2   2008        WD         Normal     223500  \n3   2006        WD        Abnorml     140000  \n4   2008        WD         Normal     250000  \n\n[5 rows x 81 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Id</th>\n      <th>MSSubClass</th>\n      <th>MSZoning</th>\n      <th>LotFrontage</th>\n      <th>LotArea</th>\n      <th>Street</th>\n      <th>Alley</th>\n      <th>LotShape</th>\n      <th>LandContour</th>\n      <th>Utilities</th>\n      <th>...</th>\n      <th>PoolArea</th>\n      <th>PoolQC</th>\n      <th>Fence</th>\n      <th>MiscFeature</th>\n      <th>MiscVal</th>\n      <th>MoSold</th>\n      <th>YrSold</th>\n      <th>SaleType</th>\n      <th>SaleCondition</th>\n      <th>SalePrice</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>60</td>\n      <td>RL</td>\n      <td>65.0</td>\n      <td>8450</td>\n      <td>Pave</td>\n      <td>NaN</td>\n      <td>Reg</td>\n      <td>Lvl</td>\n      <td>AllPub</td>\n      <td>...</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>2</td>\n      <td>2008</td>\n      <td>WD</td>\n      <td>Normal</td>\n      <td>208500</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>20</td>\n      <td>RL</td>\n      <td>80.0</td>\n      <td>9600</td>\n      <td>Pave</td>\n      <td>NaN</td>\n      <td>Reg</td>\n      <td>Lvl</td>\n      <td>AllPub</td>\n      <td>...</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>5</td>\n      <td>2007</td>\n      <td>WD</td>\n      <td>Normal</td>\n      <td>181500</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>60</td>\n      <td>RL</td>\n      <td>68.0</td>\n      <td>11250</td>\n      <td>Pave</td>\n      <td>NaN</td>\n      <td>IR1</td>\n      <td>Lvl</td>\n      <td>AllPub</td>\n      <td>...</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>9</td>\n      <td>2008</td>\n      <td>WD</td>\n      <td>Normal</td>\n      <td>223500</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>70</td>\n      <td>RL</td>\n      <td>60.0</td>\n      <td>9550</td>\n      <td>Pave</td>\n      <td>NaN</td>\n      <td>IR1</td>\n      <td>Lvl</td>\n      <td>AllPub</td>\n      <td>...</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>2</td>\n      <td>2006</td>\n      <td>WD</td>\n      <td>Abnorml</td>\n      <td>140000</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>60</td>\n      <td>RL</td>\n      <td>84.0</td>\n      <td>14260</td>\n      <td>Pave</td>\n      <td>NaN</td>\n      <td>IR1</td>\n      <td>Lvl</td>\n      <td>AllPub</td>\n      <td>...</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>12</td>\n      <td>2008</td>\n      <td>WD</td>\n      <td>Normal</td>\n      <td>250000</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows √ó 81 columns</p>\n</div>"},"metadata":{}}],"execution_count":4},{"cell_type":"code","source":"train_df.describe()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:30.463302Z","iopub.execute_input":"2025-03-19T06:17:30.463700Z","iopub.status.idle":"2025-03-19T06:17:30.563421Z","shell.execute_reply.started":"2025-03-19T06:17:30.463655Z","shell.execute_reply":"2025-03-19T06:17:30.562254Z"}},"outputs":[{"execution_count":5,"output_type":"execute_result","data":{"text/plain":"                Id   MSSubClass  LotFrontage        LotArea  OverallQual  \\\ncount  1460.000000  1460.000000  1201.000000    1460.000000  1460.000000   \nmean    730.500000    56.897260    70.049958   10516.828082     6.099315   \nstd     421.610009    42.300571    24.284752    9981.264932     1.382997   \nmin       1.000000    20.000000    21.000000    1300.000000     1.000000   \n25%     365.750000    20.000000    59.000000    7553.500000     5.000000   \n50%     730.500000    50.000000    69.000000    9478.500000     6.000000   \n75%    1095.250000    70.000000    80.000000   11601.500000     7.000000   \nmax    1460.000000   190.000000   313.000000  215245.000000    10.000000   \n\n       OverallCond    YearBuilt  YearRemodAdd   MasVnrArea   BsmtFinSF1  ...  \\\ncount  1460.000000  1460.000000   1460.000000  1452.000000  1460.000000  ...   \nmean      5.575342  1971.267808   1984.865753   103.685262   443.639726  ...   \nstd       1.112799    30.202904     20.645407   181.066207   456.098091  ...   \nmin       1.000000  1872.000000   1950.000000     0.000000     0.000000  ...   \n25%       5.000000  1954.000000   1967.000000     0.000000     0.000000  ...   \n50%       5.000000  1973.000000   1994.000000     0.000000   383.500000  ...   \n75%       6.000000  2000.000000   2004.000000   166.000000   712.250000  ...   \nmax       9.000000  2010.000000   2010.000000  1600.000000  5644.000000  ...   \n\n        WoodDeckSF  OpenPorchSF  EnclosedPorch    3SsnPorch  ScreenPorch  \\\ncount  1460.000000  1460.000000    1460.000000  1460.000000  1460.000000   \nmean     94.244521    46.660274      21.954110     3.409589    15.060959   \nstd     125.338794    66.256028      61.119149    29.317331    55.757415   \nmin       0.000000     0.000000       0.000000     0.000000     0.000000   \n25%       0.000000     0.000000       0.000000     0.000000     0.000000   \n50%       0.000000    25.000000       0.000000     0.000000     0.000000   \n75%     168.000000    68.000000       0.000000     0.000000     0.000000   \nmax     857.000000   547.000000     552.000000   508.000000   480.000000   \n\n          PoolArea       MiscVal       MoSold       YrSold      SalePrice  \ncount  1460.000000   1460.000000  1460.000000  1460.000000    1460.000000  \nmean      2.758904     43.489041     6.321918  2007.815753  180921.195890  \nstd      40.177307    496.123024     2.703626     1.328095   79442.502883  \nmin       0.000000      0.000000     1.000000  2006.000000   34900.000000  \n25%       0.000000      0.000000     5.000000  2007.000000  129975.000000  \n50%       0.000000      0.000000     6.000000  2008.000000  163000.000000  \n75%       0.000000      0.000000     8.000000  2009.000000  214000.000000  \nmax     738.000000  15500.000000    12.000000  2010.000000  755000.000000  \n\n[8 rows x 38 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Id</th>\n      <th>MSSubClass</th>\n      <th>LotFrontage</th>\n      <th>LotArea</th>\n      <th>OverallQual</th>\n      <th>OverallCond</th>\n      <th>YearBuilt</th>\n      <th>YearRemodAdd</th>\n      <th>MasVnrArea</th>\n      <th>BsmtFinSF1</th>\n      <th>...</th>\n      <th>WoodDeckSF</th>\n      <th>OpenPorchSF</th>\n      <th>EnclosedPorch</th>\n      <th>3SsnPorch</th>\n      <th>ScreenPorch</th>\n      <th>PoolArea</th>\n      <th>MiscVal</th>\n      <th>MoSold</th>\n      <th>YrSold</th>\n      <th>SalePrice</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>1460.000000</td>\n      <td>1460.000000</td>\n      <td>1201.000000</td>\n      <td>1460.000000</td>\n      <td>1460.000000</td>\n      <td>1460.000000</td>\n      <td>1460.000000</td>\n      <td>1460.000000</td>\n      <td>1452.000000</td>\n      <td>1460.000000</td>\n      <td>...</td>\n      <td>1460.000000</td>\n      <td>1460.000000</td>\n      <td>1460.000000</td>\n      <td>1460.000000</td>\n      <td>1460.000000</td>\n      <td>1460.000000</td>\n      <td>1460.000000</td>\n      <td>1460.000000</td>\n      <td>1460.000000</td>\n      <td>1460.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>730.500000</td>\n      <td>56.897260</td>\n      <td>70.049958</td>\n      <td>10516.828082</td>\n      <td>6.099315</td>\n      <td>5.575342</td>\n      <td>1971.267808</td>\n      <td>1984.865753</td>\n      <td>103.685262</td>\n      <td>443.639726</td>\n      <td>...</td>\n      <td>94.244521</td>\n      <td>46.660274</td>\n      <td>21.954110</td>\n      <td>3.409589</td>\n      <td>15.060959</td>\n      <td>2.758904</td>\n      <td>43.489041</td>\n      <td>6.321918</td>\n      <td>2007.815753</td>\n      <td>180921.195890</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>421.610009</td>\n      <td>42.300571</td>\n      <td>24.284752</td>\n      <td>9981.264932</td>\n      <td>1.382997</td>\n      <td>1.112799</td>\n      <td>30.202904</td>\n      <td>20.645407</td>\n      <td>181.066207</td>\n      <td>456.098091</td>\n      <td>...</td>\n      <td>125.338794</td>\n      <td>66.256028</td>\n      <td>61.119149</td>\n      <td>29.317331</td>\n      <td>55.757415</td>\n      <td>40.177307</td>\n      <td>496.123024</td>\n      <td>2.703626</td>\n      <td>1.328095</td>\n      <td>79442.502883</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>1.000000</td>\n      <td>20.000000</td>\n      <td>21.000000</td>\n      <td>1300.000000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>1872.000000</td>\n      <td>1950.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>...</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>1.000000</td>\n      <td>2006.000000</td>\n      <td>34900.000000</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>365.750000</td>\n      <td>20.000000</td>\n      <td>59.000000</td>\n      <td>7553.500000</td>\n      <td>5.000000</td>\n      <td>5.000000</td>\n      <td>1954.000000</td>\n      <td>1967.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>...</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>5.000000</td>\n      <td>2007.000000</td>\n      <td>129975.000000</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>730.500000</td>\n      <td>50.000000</td>\n      <td>69.000000</td>\n      <td>9478.500000</td>\n      <td>6.000000</td>\n      <td>5.000000</td>\n      <td>1973.000000</td>\n      <td>1994.000000</td>\n      <td>0.000000</td>\n      <td>383.500000</td>\n      <td>...</td>\n      <td>0.000000</td>\n      <td>25.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>6.000000</td>\n      <td>2008.000000</td>\n      <td>163000.000000</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>1095.250000</td>\n      <td>70.000000</td>\n      <td>80.000000</td>\n      <td>11601.500000</td>\n      <td>7.000000</td>\n      <td>6.000000</td>\n      <td>2000.000000</td>\n      <td>2004.000000</td>\n      <td>166.000000</td>\n      <td>712.250000</td>\n      <td>...</td>\n      <td>168.000000</td>\n      <td>68.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>8.000000</td>\n      <td>2009.000000</td>\n      <td>214000.000000</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>1460.000000</td>\n      <td>190.000000</td>\n      <td>313.000000</td>\n      <td>215245.000000</td>\n      <td>10.000000</td>\n      <td>9.000000</td>\n      <td>2010.000000</td>\n      <td>2010.000000</td>\n      <td>1600.000000</td>\n      <td>5644.000000</td>\n      <td>...</td>\n      <td>857.000000</td>\n      <td>547.000000</td>\n      <td>552.000000</td>\n      <td>508.000000</td>\n      <td>480.000000</td>\n      <td>738.000000</td>\n      <td>15500.000000</td>\n      <td>12.000000</td>\n      <td>2010.000000</td>\n      <td>755000.000000</td>\n    </tr>\n  </tbody>\n</table>\n<p>8 rows √ó 38 columns</p>\n</div>"},"metadata":{}}],"execution_count":5},{"cell_type":"code","source":"train_df.info()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:30.565045Z","iopub.execute_input":"2025-03-19T06:17:30.565512Z","iopub.status.idle":"2025-03-19T06:17:30.600811Z","shell.execute_reply.started":"2025-03-19T06:17:30.565464Z","shell.execute_reply":"2025-03-19T06:17:30.599366Z"}},"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 1460 entries, 0 to 1459\nData columns (total 81 columns):\n #   Column         Non-Null Count  Dtype  \n---  ------         --------------  -----  \n 0   Id             1460 non-null   int64  \n 1   MSSubClass     1460 non-null   int64  \n 2   MSZoning       1460 non-null   object \n 3   LotFrontage    1201 non-null   float64\n 4   LotArea        1460 non-null   int64  \n 5   Street         1460 non-null   object \n 6   Alley          91 non-null     object \n 7   LotShape       1460 non-null   object \n 8   LandContour    1460 non-null   object \n 9   Utilities      1460 non-null   object \n 10  LotConfig      1460 non-null   object \n 11  LandSlope      1460 non-null   object \n 12  Neighborhood   1460 non-null   object \n 13  Condition1     1460 non-null   object \n 14  Condition2     1460 non-null   object \n 15  BldgType       1460 non-null   object \n 16  HouseStyle     1460 non-null   object \n 17  OverallQual    1460 non-null   int64  \n 18  OverallCond    1460 non-null   int64  \n 19  YearBuilt      1460 non-null   int64  \n 20  YearRemodAdd   1460 non-null   int64  \n 21  RoofStyle      1460 non-null   object \n 22  RoofMatl       1460 non-null   object \n 23  Exterior1st    1460 non-null   object \n 24  Exterior2nd    1460 non-null   object \n 25  MasVnrType     588 non-null    object \n 26  MasVnrArea     1452 non-null   float64\n 27  ExterQual      1460 non-null   object \n 28  ExterCond      1460 non-null   object \n 29  Foundation     1460 non-null   object \n 30  BsmtQual       1423 non-null   object \n 31  BsmtCond       1423 non-null   object \n 32  BsmtExposure   1422 non-null   object \n 33  BsmtFinType1   1423 non-null   object \n 34  BsmtFinSF1     1460 non-null   int64  \n 35  BsmtFinType2   1422 non-null   object \n 36  BsmtFinSF2     1460 non-null   int64  \n 37  BsmtUnfSF      1460 non-null   int64  \n 38  TotalBsmtSF    1460 non-null   int64  \n 39  Heating        1460 non-null   object \n 40  HeatingQC      1460 non-null   object \n 41  CentralAir     1460 non-null   object \n 42  Electrical     1459 non-null   object \n 43  1stFlrSF       1460 non-null   int64  \n 44  2ndFlrSF       1460 non-null   int64  \n 45  LowQualFinSF   1460 non-null   int64  \n 46  GrLivArea      1460 non-null   int64  \n 47  BsmtFullBath   1460 non-null   int64  \n 48  BsmtHalfBath   1460 non-null   int64  \n 49  FullBath       1460 non-null   int64  \n 50  HalfBath       1460 non-null   int64  \n 51  BedroomAbvGr   1460 non-null   int64  \n 52  KitchenAbvGr   1460 non-null   int64  \n 53  KitchenQual    1460 non-null   object \n 54  TotRmsAbvGrd   1460 non-null   int64  \n 55  Functional     1460 non-null   object \n 56  Fireplaces     1460 non-null   int64  \n 57  FireplaceQu    770 non-null    object \n 58  GarageType     1379 non-null   object \n 59  GarageYrBlt    1379 non-null   float64\n 60  GarageFinish   1379 non-null   object \n 61  GarageCars     1460 non-null   int64  \n 62  GarageArea     1460 non-null   int64  \n 63  GarageQual     1379 non-null   object \n 64  GarageCond     1379 non-null   object \n 65  PavedDrive     1460 non-null   object \n 66  WoodDeckSF     1460 non-null   int64  \n 67  OpenPorchSF    1460 non-null   int64  \n 68  EnclosedPorch  1460 non-null   int64  \n 69  3SsnPorch      1460 non-null   int64  \n 70  ScreenPorch    1460 non-null   int64  \n 71  PoolArea       1460 non-null   int64  \n 72  PoolQC         7 non-null      object \n 73  Fence          281 non-null    object \n 74  MiscFeature    54 non-null     object \n 75  MiscVal        1460 non-null   int64  \n 76  MoSold         1460 non-null   int64  \n 77  YrSold         1460 non-null   int64  \n 78  SaleType       1460 non-null   object \n 79  SaleCondition  1460 non-null   object \n 80  SalePrice      1460 non-null   int64  \ndtypes: float64(3), int64(35), object(43)\nmemory usage: 924.0+ KB\n","output_type":"stream"}],"execution_count":6},{"cell_type":"code","source":"train_df.dtypes[train_df.dtypes != 'object']","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:30.602270Z","iopub.execute_input":"2025-03-19T06:17:30.602730Z","iopub.status.idle":"2025-03-19T06:17:30.616732Z","shell.execute_reply.started":"2025-03-19T06:17:30.602692Z","shell.execute_reply":"2025-03-19T06:17:30.615513Z"}},"outputs":[{"execution_count":7,"output_type":"execute_result","data":{"text/plain":"Id                 int64\nMSSubClass         int64\nLotFrontage      float64\nLotArea            int64\nOverallQual        int64\nOverallCond        int64\nYearBuilt          int64\nYearRemodAdd       int64\nMasVnrArea       float64\nBsmtFinSF1         int64\nBsmtFinSF2         int64\nBsmtUnfSF          int64\nTotalBsmtSF        int64\n1stFlrSF           int64\n2ndFlrSF           int64\nLowQualFinSF       int64\nGrLivArea          int64\nBsmtFullBath       int64\nBsmtHalfBath       int64\nFullBath           int64\nHalfBath           int64\nBedroomAbvGr       int64\nKitchenAbvGr       int64\nTotRmsAbvGrd       int64\nFireplaces         int64\nGarageYrBlt      float64\nGarageCars         int64\nGarageArea         int64\nWoodDeckSF         int64\nOpenPorchSF        int64\nEnclosedPorch      int64\n3SsnPorch          int64\nScreenPorch        int64\nPoolArea           int64\nMiscVal            int64\nMoSold             int64\nYrSold             int64\nSalePrice          int64\ndtype: object"},"metadata":{}}],"execution_count":7},{"cell_type":"markdown","source":"## Plot relationship between input features and 'SalePrice'\n- query the outlier\n  ","metadata":{}},{"cell_type":"code","source":"plt.scatter(x='MSSubClass',y='SalePrice', data=train_df)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:30.618216Z","iopub.execute_input":"2025-03-19T06:17:30.618705Z","iopub.status.idle":"2025-03-19T06:17:30.899431Z","shell.execute_reply.started":"2025-03-19T06:17:30.618657Z","shell.execute_reply":"2025-03-19T06:17:30.898216Z"}},"outputs":[{"execution_count":8,"output_type":"execute_result","data":{"text/plain":"<matplotlib.collections.PathCollection at 0x7ea04fe59c30>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}],"execution_count":8},{"cell_type":"code","source":"plt.scatter(x='LotFrontage',y='SalePrice', data=train_df)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:30.900900Z","iopub.execute_input":"2025-03-19T06:17:30.901222Z","iopub.status.idle":"2025-03-19T06:17:31.182379Z","shell.execute_reply.started":"2025-03-19T06:17:30.901191Z","shell.execute_reply":"2025-03-19T06:17:31.181167Z"}},"outputs":[{"execution_count":9,"output_type":"execute_result","data":{"text/plain":"<matplotlib.collections.PathCollection at 0x7ea04ddae9e0>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}],"execution_count":9},{"cell_type":"code","source":"train_df.query('LotFrontage > 300')\n# outlier: id 935 and 1299 > 300","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:31.187081Z","iopub.execute_input":"2025-03-19T06:17:31.187460Z","iopub.status.idle":"2025-03-19T06:17:31.227811Z","shell.execute_reply.started":"2025-03-19T06:17:31.187424Z","shell.execute_reply":"2025-03-19T06:17:31.226573Z"}},"outputs":[{"execution_count":10,"output_type":"execute_result","data":{"text/plain":"        Id  MSSubClass MSZoning  LotFrontage  LotArea Street Alley LotShape  \\\n934    935          20       RL        313.0    27650   Pave   NaN      IR2   \n1298  1299          60       RL        313.0    63887   Pave   NaN      IR3   \n\n     LandContour Utilities  ... PoolArea PoolQC Fence MiscFeature MiscVal  \\\n934          HLS    AllPub  ...        0    NaN   NaN         NaN       0   \n1298         Bnk    AllPub  ...      480     Gd   NaN         NaN       0   \n\n     MoSold YrSold  SaleType  SaleCondition  SalePrice  \n934      11   2008        WD         Normal     242000  \n1298      1   2008       New        Partial     160000  \n\n[2 rows x 81 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Id</th>\n      <th>MSSubClass</th>\n      <th>MSZoning</th>\n      <th>LotFrontage</th>\n      <th>LotArea</th>\n      <th>Street</th>\n      <th>Alley</th>\n      <th>LotShape</th>\n      <th>LandContour</th>\n      <th>Utilities</th>\n      <th>...</th>\n      <th>PoolArea</th>\n      <th>PoolQC</th>\n      <th>Fence</th>\n      <th>MiscFeature</th>\n      <th>MiscVal</th>\n      <th>MoSold</th>\n      <th>YrSold</th>\n      <th>SaleType</th>\n      <th>SaleCondition</th>\n      <th>SalePrice</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>934</th>\n      <td>935</td>\n      <td>20</td>\n      <td>RL</td>\n      <td>313.0</td>\n      <td>27650</td>\n      <td>Pave</td>\n      <td>NaN</td>\n      <td>IR2</td>\n      <td>HLS</td>\n      <td>AllPub</td>\n      <td>...</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>11</td>\n      <td>2008</td>\n      <td>WD</td>\n      <td>Normal</td>\n      <td>242000</td>\n    </tr>\n    <tr>\n      <th>1298</th>\n      <td>1299</td>\n      <td>60</td>\n      <td>RL</td>\n      <td>313.0</td>\n      <td>63887</td>\n      <td>Pave</td>\n      <td>NaN</td>\n      <td>IR3</td>\n      <td>Bnk</td>\n      <td>AllPub</td>\n      <td>...</td>\n      <td>480</td>\n      <td>Gd</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>1</td>\n      <td>2008</td>\n      <td>New</td>\n      <td>Partial</td>\n      <td>160000</td>\n    </tr>\n  </tbody>\n</table>\n<p>2 rows √ó 81 columns</p>\n</div>"},"metadata":{}}],"execution_count":10},{"cell_type":"code","source":"plt.scatter(x='LotArea',y='SalePrice', data=train_df)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:31.229062Z","iopub.execute_input":"2025-03-19T06:17:31.229387Z","iopub.status.idle":"2025-03-19T06:17:31.447200Z","shell.execute_reply.started":"2025-03-19T06:17:31.229356Z","shell.execute_reply":"2025-03-19T06:17:31.445921Z"}},"outputs":[{"execution_count":11,"output_type":"execute_result","data":{"text/plain":"<matplotlib.collections.PathCollection at 0x7ea04dc406d0>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}],"execution_count":11},{"cell_type":"code","source":"train_df.query('LotArea > 55000')\n# id 250, 314,336, 707  maybe 57200","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:31.448689Z","iopub.execute_input":"2025-03-19T06:17:31.449125Z","iopub.status.idle":"2025-03-19T06:17:31.493211Z","shell.execute_reply.started":"2025-03-19T06:17:31.449088Z","shell.execute_reply":"2025-03-19T06:17:31.491805Z"}},"outputs":[{"execution_count":12,"output_type":"execute_result","data":{"text/plain":"        Id  MSSubClass MSZoning  LotFrontage  LotArea Street Alley LotShape  \\\n249    250          50       RL          NaN   159000   Pave   NaN      IR2   \n313    314          20       RL        150.0   215245   Pave   NaN      IR3   \n335    336         190       RL          NaN   164660   Grvl   NaN      IR1   \n451    452          20       RL         62.0    70761   Pave   NaN      IR1   \n706    707          20       RL          NaN   115149   Pave   NaN      IR2   \n1298  1299          60       RL        313.0    63887   Pave   NaN      IR3   \n1396  1397          20       RL          NaN    57200   Pave   NaN      IR1   \n\n     LandContour Utilities  ... PoolArea PoolQC Fence MiscFeature MiscVal  \\\n249          Low    AllPub  ...        0    NaN   NaN        Shed     500   \n313          Low    AllPub  ...        0    NaN   NaN         NaN       0   \n335          HLS    AllPub  ...        0    NaN   NaN        Shed     700   \n451          Low    AllPub  ...        0    NaN   NaN         NaN       0   \n706          Low    AllPub  ...        0    NaN   NaN         NaN       0   \n1298         Bnk    AllPub  ...      480     Gd   NaN         NaN       0   \n1396         Bnk    AllPub  ...        0    NaN   NaN         NaN       0   \n\n     MoSold YrSold  SaleType  SaleCondition  SalePrice  \n249       6   2007        WD         Normal     277000  \n313       6   2009        WD         Normal     375000  \n335       8   2008        WD         Normal     228950  \n451      12   2006        WD         Normal     280000  \n706       6   2007        WD         Normal     302000  \n1298      1   2008       New        Partial     160000  \n1396      6   2010        WD         Normal     160000  \n\n[7 rows x 81 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Id</th>\n      <th>MSSubClass</th>\n      <th>MSZoning</th>\n      <th>LotFrontage</th>\n      <th>LotArea</th>\n      <th>Street</th>\n      <th>Alley</th>\n      <th>LotShape</th>\n      <th>LandContour</th>\n      <th>Utilities</th>\n      <th>...</th>\n      <th>PoolArea</th>\n      <th>PoolQC</th>\n      <th>Fence</th>\n      <th>MiscFeature</th>\n      <th>MiscVal</th>\n      <th>MoSold</th>\n      <th>YrSold</th>\n      <th>SaleType</th>\n      <th>SaleCondition</th>\n      <th>SalePrice</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>249</th>\n      <td>250</td>\n      <td>50</td>\n      <td>RL</td>\n      <td>NaN</td>\n      <td>159000</td>\n      <td>Pave</td>\n      <td>NaN</td>\n      <td>IR2</td>\n      <td>Low</td>\n      <td>AllPub</td>\n      <td>...</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Shed</td>\n      <td>500</td>\n      <td>6</td>\n      <td>2007</td>\n      <td>WD</td>\n      <td>Normal</td>\n      <td>277000</td>\n    </tr>\n    <tr>\n      <th>313</th>\n      <td>314</td>\n      <td>20</td>\n      <td>RL</td>\n      <td>150.0</td>\n      <td>215245</td>\n      <td>Pave</td>\n      <td>NaN</td>\n      <td>IR3</td>\n      <td>Low</td>\n      <td>AllPub</td>\n      <td>...</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>6</td>\n      <td>2009</td>\n      <td>WD</td>\n      <td>Normal</td>\n      <td>375000</td>\n    </tr>\n    <tr>\n      <th>335</th>\n      <td>336</td>\n      <td>190</td>\n      <td>RL</td>\n      <td>NaN</td>\n      <td>164660</td>\n      <td>Grvl</td>\n      <td>NaN</td>\n      <td>IR1</td>\n      <td>HLS</td>\n      <td>AllPub</td>\n      <td>...</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Shed</td>\n      <td>700</td>\n      <td>8</td>\n      <td>2008</td>\n      <td>WD</td>\n      <td>Normal</td>\n      <td>228950</td>\n    </tr>\n    <tr>\n      <th>451</th>\n      <td>452</td>\n      <td>20</td>\n      <td>RL</td>\n      <td>62.0</td>\n      <td>70761</td>\n      <td>Pave</td>\n      <td>NaN</td>\n      <td>IR1</td>\n      <td>Low</td>\n      <td>AllPub</td>\n      <td>...</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>12</td>\n      <td>2006</td>\n      <td>WD</td>\n      <td>Normal</td>\n      <td>280000</td>\n    </tr>\n    <tr>\n      <th>706</th>\n      <td>707</td>\n      <td>20</td>\n      <td>RL</td>\n      <td>NaN</td>\n      <td>115149</td>\n      <td>Pave</td>\n      <td>NaN</td>\n      <td>IR2</td>\n      <td>Low</td>\n      <td>AllPub</td>\n      <td>...</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>6</td>\n      <td>2007</td>\n      <td>WD</td>\n      <td>Normal</td>\n      <td>302000</td>\n    </tr>\n    <tr>\n      <th>1298</th>\n      <td>1299</td>\n      <td>60</td>\n      <td>RL</td>\n      <td>313.0</td>\n      <td>63887</td>\n      <td>Pave</td>\n      <td>NaN</td>\n      <td>IR3</td>\n      <td>Bnk</td>\n      <td>AllPub</td>\n      <td>...</td>\n      <td>480</td>\n      <td>Gd</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>1</td>\n      <td>2008</td>\n      <td>New</td>\n      <td>Partial</td>\n      <td>160000</td>\n    </tr>\n    <tr>\n      <th>1396</th>\n      <td>1397</td>\n      <td>20</td>\n      <td>RL</td>\n      <td>NaN</td>\n      <td>57200</td>\n      <td>Pave</td>\n      <td>NaN</td>\n      <td>IR1</td>\n      <td>Bnk</td>\n      <td>AllPub</td>\n      <td>...</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>6</td>\n      <td>2010</td>\n      <td>WD</td>\n      <td>Normal</td>\n      <td>160000</td>\n    </tr>\n  </tbody>\n</table>\n<p>7 rows √ó 81 columns</p>\n</div>"},"metadata":{}}],"execution_count":12},{"cell_type":"code","source":"stats.zscore(train_df['LotArea']). sort_values().tail(10)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:31.494695Z","iopub.execute_input":"2025-03-19T06:17:31.495068Z","iopub.status.idle":"2025-03-19T06:17:31.511265Z","shell.execute_reply.started":"2025-03-19T06:17:31.495033Z","shell.execute_reply":"2025-03-19T06:17:31.509932Z"}},"outputs":[{"execution_count":13,"output_type":"execute_result","data":{"text/plain":"384      4.268474\n457      4.280500\n769      4.308262\n1396     4.678682\n1298     5.348867\n451      6.037793\n706     10.486449\n249     14.881285\n335     15.448542\n313     20.518273\nName: LotArea, dtype: float64"},"metadata":{}}],"execution_count":13},{"cell_type":"markdown","source":"Skewness: 1.8809\n\nA skewness value of 1.88 indicates the distribution is positively skewed (right-skewed).\nRule of thumb:\nSkewness between -0.5 to 0.5: Approximately symmetric.\nSkewness between 0.5 to 1 or -0.5 to -1: Moderately skewed.\nSkewness > 1 or < -1: Highly skewed.\nSince the value is above 1, it confirms significant right skewness.\n\nKurtosis: 6.5098\n\nKurtosis measures the \"tailedness\" of the distribution.\nRule of thumb:\nKurtosis = 3: Normal distribution (mesokurtic).\nKurtosis > 3: Heavy tails or sharp peak (leptokurtic).\nKurtosis < 3: Light tails or flat peak (platykurtic).\nA kurtosis of 6.51 indicates the distribution has heavier tails and a sharper peak than a normal distribution. This is common in skewed datasets like housing prices, incomes, etc.\n\n","metadata":{}},{"cell_type":"code","source":"plt.scatter(x='OverallQual',y='SalePrice', data=train_df)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:31.512926Z","iopub.execute_input":"2025-03-19T06:17:31.513353Z","iopub.status.idle":"2025-03-19T06:17:31.730806Z","shell.execute_reply.started":"2025-03-19T06:17:31.513303Z","shell.execute_reply":"2025-03-19T06:17:31.729559Z"}},"outputs":[{"execution_count":14,"output_type":"execute_result","data":{"text/plain":"<matplotlib.collections.PathCollection at 0x7ea04dc6ace0>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}],"execution_count":14},{"cell_type":"code","source":"train_df.query('OverallQual == 10')\n#maybe 524","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:31.732931Z","iopub.execute_input":"2025-03-19T06:17:31.733258Z","iopub.status.idle":"2025-03-19T06:17:31.778271Z","shell.execute_reply.started":"2025-03-19T06:17:31.733227Z","shell.execute_reply":"2025-03-19T06:17:31.777081Z"}},"outputs":[{"execution_count":15,"output_type":"execute_result","data":{"text/plain":"        Id  MSSubClass MSZoning  LotFrontage  LotArea Street Alley LotShape  \\\n58      59          60       RL         66.0    13682   Pave   NaN      IR2   \n185    186          75       RM         90.0    22950   Pave   NaN      IR2   \n224    225          20       RL        103.0    13472   Pave   NaN      Reg   \n389    390          60       RL         96.0    12474   Pave   NaN      Reg   \n440    441          20       RL        105.0    15431   Pave   NaN      Reg   \n515    516          20       RL         94.0    12220   Pave   NaN      Reg   \n523    524          60       RL        130.0    40094   Pave   NaN      IR1   \n583    584          75       RM         75.0    13500   Pave   NaN      Reg   \n591    592          60       RL         97.0    13478   Pave   NaN      IR1   \n691    692          60       RL        104.0    21535   Pave   NaN      IR1   \n825    826          20       RL        114.0    14803   Pave   NaN      Reg   \n994    995          20       RL         96.0    12456   Pave   NaN      Reg   \n1169  1170          60       RL        118.0    35760   Pave   NaN      IR1   \n1182  1183          60       RL        160.0    15623   Pave   NaN      IR1   \n1243  1244          20       RL        107.0    13891   Pave   NaN      Reg   \n1298  1299          60       RL        313.0    63887   Pave   NaN      IR3   \n1373  1374          20       RL          NaN    11400   Pave   NaN      Reg   \n1442  1443          60       FV         85.0    11003   Pave   NaN      Reg   \n\n     LandContour Utilities  ... PoolArea PoolQC  Fence MiscFeature MiscVal  \\\n58           HLS    AllPub  ...        0    NaN    NaN         NaN       0   \n185          Lvl    AllPub  ...        0    NaN  GdPrv         NaN       0   \n224          Lvl    AllPub  ...        0    NaN    NaN         NaN       0   \n389          Lvl    AllPub  ...        0    NaN    NaN         NaN       0   \n440          Lvl    AllPub  ...        0    NaN    NaN         NaN       0   \n515          Lvl    AllPub  ...        0    NaN    NaN         NaN       0   \n523          Bnk    AllPub  ...        0    NaN    NaN         NaN       0   \n583          Lvl    AllPub  ...        0    NaN    NaN         NaN       0   \n591          Lvl    AllPub  ...        0    NaN    NaN         NaN       0   \n691          Lvl    AllPub  ...        0    NaN    NaN         NaN       0   \n825          Lvl    AllPub  ...        0    NaN    NaN         NaN       0   \n994          Lvl    AllPub  ...        0    NaN    NaN         NaN       0   \n1169         Lvl    AllPub  ...        0    NaN    NaN         NaN       0   \n1182         Lvl    AllPub  ...      555     Ex  MnPrv         NaN       0   \n1243         Lvl    AllPub  ...        0    NaN    NaN         NaN       0   \n1298         Bnk    AllPub  ...      480     Gd    NaN         NaN       0   \n1373         Lvl    AllPub  ...        0    NaN    NaN         NaN       0   \n1442         Lvl    AllPub  ...        0    NaN    NaN         NaN       0   \n\n     MoSold YrSold  SaleType  SaleCondition  SalePrice  \n58       10   2006       New        Partial     438780  \n185       6   2006        WD         Normal     475000  \n224       6   2009        WD         Normal     386250  \n389       8   2008       New        Partial     426000  \n440       4   2009        WD         Normal     555000  \n515       9   2009       New        Partial     402861  \n523      10   2007       New        Partial     184750  \n583       7   2008        WD         Normal     325000  \n591       6   2009     ConLI         Normal     451950  \n691       1   2007        WD         Normal     755000  \n825       6   2008       New        Partial     385000  \n994       7   2009        WD         Normal     337500  \n1169      7   2006        WD         Normal     625000  \n1182      7   2007        WD        Abnorml     745000  \n1243      9   2006       New        Partial     465000  \n1298      1   2008       New        Partial     160000  \n1373      3   2007        WD         Normal     466500  \n1442      4   2009        WD         Normal     310000  \n\n[18 rows x 81 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Id</th>\n      <th>MSSubClass</th>\n      <th>MSZoning</th>\n      <th>LotFrontage</th>\n      <th>LotArea</th>\n      <th>Street</th>\n      <th>Alley</th>\n      <th>LotShape</th>\n      <th>LandContour</th>\n      <th>Utilities</th>\n      <th>...</th>\n      <th>PoolArea</th>\n      <th>PoolQC</th>\n      <th>Fence</th>\n      <th>MiscFeature</th>\n      <th>MiscVal</th>\n      <th>MoSold</th>\n      <th>YrSold</th>\n      <th>SaleType</th>\n      <th>SaleCondition</th>\n      <th>SalePrice</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>58</th>\n      <td>59</td>\n      <td>60</td>\n      <td>RL</td>\n      <td>66.0</td>\n      <td>13682</td>\n      <td>Pave</td>\n      <td>NaN</td>\n      <td>IR2</td>\n      <td>HLS</td>\n      <td>AllPub</td>\n      <td>...</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>10</td>\n      <td>2006</td>\n      <td>New</td>\n      <td>Partial</td>\n      <td>438780</td>\n    </tr>\n    <tr>\n      <th>185</th>\n      <td>186</td>\n      <td>75</td>\n      <td>RM</td>\n      <td>90.0</td>\n      <td>22950</td>\n      <td>Pave</td>\n      <td>NaN</td>\n      <td>IR2</td>\n      <td>Lvl</td>\n      <td>AllPub</td>\n      <td>...</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>GdPrv</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>6</td>\n      <td>2006</td>\n      <td>WD</td>\n      <td>Normal</td>\n      <td>475000</td>\n    </tr>\n    <tr>\n      <th>224</th>\n      <td>225</td>\n      <td>20</td>\n      <td>RL</td>\n      <td>103.0</td>\n      <td>13472</td>\n      <td>Pave</td>\n      <td>NaN</td>\n      <td>Reg</td>\n      <td>Lvl</td>\n      <td>AllPub</td>\n      <td>...</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>6</td>\n      <td>2009</td>\n      <td>WD</td>\n      <td>Normal</td>\n      <td>386250</td>\n    </tr>\n    <tr>\n      <th>389</th>\n      <td>390</td>\n      <td>60</td>\n      <td>RL</td>\n      <td>96.0</td>\n      <td>12474</td>\n      <td>Pave</td>\n      <td>NaN</td>\n      <td>Reg</td>\n      <td>Lvl</td>\n      <td>AllPub</td>\n      <td>...</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>8</td>\n      <td>2008</td>\n      <td>New</td>\n      <td>Partial</td>\n      <td>426000</td>\n    </tr>\n    <tr>\n      <th>440</th>\n      <td>441</td>\n      <td>20</td>\n      <td>RL</td>\n      <td>105.0</td>\n      <td>15431</td>\n      <td>Pave</td>\n      <td>NaN</td>\n      <td>Reg</td>\n      <td>Lvl</td>\n      <td>AllPub</td>\n      <td>...</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>4</td>\n      <td>2009</td>\n      <td>WD</td>\n      <td>Normal</td>\n      <td>555000</td>\n    </tr>\n    <tr>\n      <th>515</th>\n      <td>516</td>\n      <td>20</td>\n      <td>RL</td>\n      <td>94.0</td>\n      <td>12220</td>\n      <td>Pave</td>\n      <td>NaN</td>\n      <td>Reg</td>\n      <td>Lvl</td>\n      <td>AllPub</td>\n      <td>...</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>9</td>\n      <td>2009</td>\n      <td>New</td>\n      <td>Partial</td>\n      <td>402861</td>\n    </tr>\n    <tr>\n      <th>523</th>\n      <td>524</td>\n      <td>60</td>\n      <td>RL</td>\n      <td>130.0</td>\n      <td>40094</td>\n      <td>Pave</td>\n      <td>NaN</td>\n      <td>IR1</td>\n      <td>Bnk</td>\n      <td>AllPub</td>\n      <td>...</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>10</td>\n      <td>2007</td>\n      <td>New</td>\n      <td>Partial</td>\n      <td>184750</td>\n    </tr>\n    <tr>\n      <th>583</th>\n      <td>584</td>\n      <td>75</td>\n      <td>RM</td>\n      <td>75.0</td>\n      <td>13500</td>\n      <td>Pave</td>\n      <td>NaN</td>\n      <td>Reg</td>\n      <td>Lvl</td>\n      <td>AllPub</td>\n      <td>...</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>7</td>\n      <td>2008</td>\n      <td>WD</td>\n      <td>Normal</td>\n      <td>325000</td>\n    </tr>\n    <tr>\n      <th>591</th>\n      <td>592</td>\n      <td>60</td>\n      <td>RL</td>\n      <td>97.0</td>\n      <td>13478</td>\n      <td>Pave</td>\n      <td>NaN</td>\n      <td>IR1</td>\n      <td>Lvl</td>\n      <td>AllPub</td>\n      <td>...</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>6</td>\n      <td>2009</td>\n      <td>ConLI</td>\n      <td>Normal</td>\n      <td>451950</td>\n    </tr>\n    <tr>\n      <th>691</th>\n      <td>692</td>\n      <td>60</td>\n      <td>RL</td>\n      <td>104.0</td>\n      <td>21535</td>\n      <td>Pave</td>\n      <td>NaN</td>\n      <td>IR1</td>\n      <td>Lvl</td>\n      <td>AllPub</td>\n      <td>...</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>1</td>\n      <td>2007</td>\n      <td>WD</td>\n      <td>Normal</td>\n      <td>755000</td>\n    </tr>\n    <tr>\n      <th>825</th>\n      <td>826</td>\n      <td>20</td>\n      <td>RL</td>\n      <td>114.0</td>\n      <td>14803</td>\n      <td>Pave</td>\n      <td>NaN</td>\n      <td>Reg</td>\n      <td>Lvl</td>\n      <td>AllPub</td>\n      <td>...</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>6</td>\n      <td>2008</td>\n      <td>New</td>\n      <td>Partial</td>\n      <td>385000</td>\n    </tr>\n    <tr>\n      <th>994</th>\n      <td>995</td>\n      <td>20</td>\n      <td>RL</td>\n      <td>96.0</td>\n      <td>12456</td>\n      <td>Pave</td>\n      <td>NaN</td>\n      <td>Reg</td>\n      <td>Lvl</td>\n      <td>AllPub</td>\n      <td>...</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>7</td>\n      <td>2009</td>\n      <td>WD</td>\n      <td>Normal</td>\n      <td>337500</td>\n    </tr>\n    <tr>\n      <th>1169</th>\n      <td>1170</td>\n      <td>60</td>\n      <td>RL</td>\n      <td>118.0</td>\n      <td>35760</td>\n      <td>Pave</td>\n      <td>NaN</td>\n      <td>IR1</td>\n      <td>Lvl</td>\n      <td>AllPub</td>\n      <td>...</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>7</td>\n      <td>2006</td>\n      <td>WD</td>\n      <td>Normal</td>\n      <td>625000</td>\n    </tr>\n    <tr>\n      <th>1182</th>\n      <td>1183</td>\n      <td>60</td>\n      <td>RL</td>\n      <td>160.0</td>\n      <td>15623</td>\n      <td>Pave</td>\n      <td>NaN</td>\n      <td>IR1</td>\n      <td>Lvl</td>\n      <td>AllPub</td>\n      <td>...</td>\n      <td>555</td>\n      <td>Ex</td>\n      <td>MnPrv</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>7</td>\n      <td>2007</td>\n      <td>WD</td>\n      <td>Abnorml</td>\n      <td>745000</td>\n    </tr>\n    <tr>\n      <th>1243</th>\n      <td>1244</td>\n      <td>20</td>\n      <td>RL</td>\n      <td>107.0</td>\n      <td>13891</td>\n      <td>Pave</td>\n      <td>NaN</td>\n      <td>Reg</td>\n      <td>Lvl</td>\n      <td>AllPub</td>\n      <td>...</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>9</td>\n      <td>2006</td>\n      <td>New</td>\n      <td>Partial</td>\n      <td>465000</td>\n    </tr>\n    <tr>\n      <th>1298</th>\n      <td>1299</td>\n      <td>60</td>\n      <td>RL</td>\n      <td>313.0</td>\n      <td>63887</td>\n      <td>Pave</td>\n      <td>NaN</td>\n      <td>IR3</td>\n      <td>Bnk</td>\n      <td>AllPub</td>\n      <td>...</td>\n      <td>480</td>\n      <td>Gd</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>1</td>\n      <td>2008</td>\n      <td>New</td>\n      <td>Partial</td>\n      <td>160000</td>\n    </tr>\n    <tr>\n      <th>1373</th>\n      <td>1374</td>\n      <td>20</td>\n      <td>RL</td>\n      <td>NaN</td>\n      <td>11400</td>\n      <td>Pave</td>\n      <td>NaN</td>\n      <td>Reg</td>\n      <td>Lvl</td>\n      <td>AllPub</td>\n      <td>...</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>3</td>\n      <td>2007</td>\n      <td>WD</td>\n      <td>Normal</td>\n      <td>466500</td>\n    </tr>\n    <tr>\n      <th>1442</th>\n      <td>1443</td>\n      <td>60</td>\n      <td>FV</td>\n      <td>85.0</td>\n      <td>11003</td>\n      <td>Pave</td>\n      <td>NaN</td>\n      <td>Reg</td>\n      <td>Lvl</td>\n      <td>AllPub</td>\n      <td>...</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>4</td>\n      <td>2009</td>\n      <td>WD</td>\n      <td>Normal</td>\n      <td>310000</td>\n    </tr>\n  </tbody>\n</table>\n<p>18 rows √ó 81 columns</p>\n</div>"},"metadata":{}}],"execution_count":15},{"cell_type":"code","source":"plt.scatter(x='OverallCond',y='SalePrice', data=train_df)\n ","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:31.779861Z","iopub.execute_input":"2025-03-19T06:17:31.780323Z","iopub.status.idle":"2025-03-19T06:17:32.083500Z","shell.execute_reply.started":"2025-03-19T06:17:31.780277Z","shell.execute_reply":"2025-03-19T06:17:32.082335Z"}},"outputs":[{"execution_count":16,"output_type":"execute_result","data":{"text/plain":"<matplotlib.collections.PathCollection at 0x7ea04dced780>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}],"execution_count":16},{"cell_type":"code","source":"train_df.query('OverallCond == 2')\n#379","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:32.085021Z","iopub.execute_input":"2025-03-19T06:17:32.085971Z","iopub.status.idle":"2025-03-19T06:17:32.125361Z","shell.execute_reply.started":"2025-03-19T06:17:32.085932Z","shell.execute_reply":"2025-03-19T06:17:32.124213Z"}},"outputs":[{"execution_count":17,"output_type":"execute_result","data":{"text/plain":"      Id  MSSubClass MSZoning  LotFrontage  LotArea Street Alley LotShape  \\\n88    89          50  C (all)        105.0     8470   Pave   NaN      IR1   \n250  251          30       RL         55.0     5350   Pave   NaN      IR1   \n378  379          20       RL         88.0    11394   Pave   NaN      Reg   \n398  399          30       RM         60.0     8967   Pave   NaN      Reg   \n676  677          70       RM         60.0     9600   Pave  Grvl      Reg   \n\n    LandContour Utilities  ... PoolArea PoolQC  Fence MiscFeature MiscVal  \\\n88          Lvl    AllPub  ...        0    NaN  MnPrv         NaN       0   \n250         Lvl    AllPub  ...        0    NaN   GdWo        Shed     450   \n378         Lvl    AllPub  ...        0    NaN    NaN         NaN       0   \n398         Lvl    AllPub  ...        0    NaN    NaN         NaN       0   \n676         Lvl    AllPub  ...        0    NaN    NaN         NaN       0   \n\n    MoSold YrSold  SaleType  SaleCondition  SalePrice  \n88      10   2009     ConLD        Abnorml      85000  \n250      5   2010        WD         Normal      76500  \n378      6   2010       New        Partial     394432  \n398     11   2007        WD        Abnorml      67000  \n676      5   2006        WD         Normal      87000  \n\n[5 rows x 81 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Id</th>\n      <th>MSSubClass</th>\n      <th>MSZoning</th>\n      <th>LotFrontage</th>\n      <th>LotArea</th>\n      <th>Street</th>\n      <th>Alley</th>\n      <th>LotShape</th>\n      <th>LandContour</th>\n      <th>Utilities</th>\n      <th>...</th>\n      <th>PoolArea</th>\n      <th>PoolQC</th>\n      <th>Fence</th>\n      <th>MiscFeature</th>\n      <th>MiscVal</th>\n      <th>MoSold</th>\n      <th>YrSold</th>\n      <th>SaleType</th>\n      <th>SaleCondition</th>\n      <th>SalePrice</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>88</th>\n      <td>89</td>\n      <td>50</td>\n      <td>C (all)</td>\n      <td>105.0</td>\n      <td>8470</td>\n      <td>Pave</td>\n      <td>NaN</td>\n      <td>IR1</td>\n      <td>Lvl</td>\n      <td>AllPub</td>\n      <td>...</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>MnPrv</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>10</td>\n      <td>2009</td>\n      <td>ConLD</td>\n      <td>Abnorml</td>\n      <td>85000</td>\n    </tr>\n    <tr>\n      <th>250</th>\n      <td>251</td>\n      <td>30</td>\n      <td>RL</td>\n      <td>55.0</td>\n      <td>5350</td>\n      <td>Pave</td>\n      <td>NaN</td>\n      <td>IR1</td>\n      <td>Lvl</td>\n      <td>AllPub</td>\n      <td>...</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>GdWo</td>\n      <td>Shed</td>\n      <td>450</td>\n      <td>5</td>\n      <td>2010</td>\n      <td>WD</td>\n      <td>Normal</td>\n      <td>76500</td>\n    </tr>\n    <tr>\n      <th>378</th>\n      <td>379</td>\n      <td>20</td>\n      <td>RL</td>\n      <td>88.0</td>\n      <td>11394</td>\n      <td>Pave</td>\n      <td>NaN</td>\n      <td>Reg</td>\n      <td>Lvl</td>\n      <td>AllPub</td>\n      <td>...</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>6</td>\n      <td>2010</td>\n      <td>New</td>\n      <td>Partial</td>\n      <td>394432</td>\n    </tr>\n    <tr>\n      <th>398</th>\n      <td>399</td>\n      <td>30</td>\n      <td>RM</td>\n      <td>60.0</td>\n      <td>8967</td>\n      <td>Pave</td>\n      <td>NaN</td>\n      <td>Reg</td>\n      <td>Lvl</td>\n      <td>AllPub</td>\n      <td>...</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>11</td>\n      <td>2007</td>\n      <td>WD</td>\n      <td>Abnorml</td>\n      <td>67000</td>\n    </tr>\n    <tr>\n      <th>676</th>\n      <td>677</td>\n      <td>70</td>\n      <td>RM</td>\n      <td>60.0</td>\n      <td>9600</td>\n      <td>Pave</td>\n      <td>Grvl</td>\n      <td>Reg</td>\n      <td>Lvl</td>\n      <td>AllPub</td>\n      <td>...</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>5</td>\n      <td>2006</td>\n      <td>WD</td>\n      <td>Normal</td>\n      <td>87000</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows √ó 81 columns</p>\n</div>"},"metadata":{}}],"execution_count":17},{"cell_type":"code","source":"train_df.query('OverallCond == 5 & SalePrice > 700000')\n#`1183","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:32.126712Z","iopub.execute_input":"2025-03-19T06:17:32.127062Z","iopub.status.idle":"2025-03-19T06:17:32.163673Z","shell.execute_reply.started":"2025-03-19T06:17:32.127030Z","shell.execute_reply":"2025-03-19T06:17:32.162488Z"}},"outputs":[{"execution_count":18,"output_type":"execute_result","data":{"text/plain":"        Id  MSSubClass MSZoning  LotFrontage  LotArea Street Alley LotShape  \\\n1182  1183          60       RL        160.0    15623   Pave   NaN      IR1   \n\n     LandContour Utilities  ... PoolArea PoolQC  Fence MiscFeature MiscVal  \\\n1182         Lvl    AllPub  ...      555     Ex  MnPrv         NaN       0   \n\n     MoSold YrSold  SaleType  SaleCondition  SalePrice  \n1182      7   2007        WD        Abnorml     745000  \n\n[1 rows x 81 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Id</th>\n      <th>MSSubClass</th>\n      <th>MSZoning</th>\n      <th>LotFrontage</th>\n      <th>LotArea</th>\n      <th>Street</th>\n      <th>Alley</th>\n      <th>LotShape</th>\n      <th>LandContour</th>\n      <th>Utilities</th>\n      <th>...</th>\n      <th>PoolArea</th>\n      <th>PoolQC</th>\n      <th>Fence</th>\n      <th>MiscFeature</th>\n      <th>MiscVal</th>\n      <th>MoSold</th>\n      <th>YrSold</th>\n      <th>SaleType</th>\n      <th>SaleCondition</th>\n      <th>SalePrice</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1182</th>\n      <td>1183</td>\n      <td>60</td>\n      <td>RL</td>\n      <td>160.0</td>\n      <td>15623</td>\n      <td>Pave</td>\n      <td>NaN</td>\n      <td>IR1</td>\n      <td>Lvl</td>\n      <td>AllPub</td>\n      <td>...</td>\n      <td>555</td>\n      <td>Ex</td>\n      <td>MnPrv</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>7</td>\n      <td>2007</td>\n      <td>WD</td>\n      <td>Abnorml</td>\n      <td>745000</td>\n    </tr>\n  </tbody>\n</table>\n<p>1 rows √ó 81 columns</p>\n</div>"},"metadata":{}}],"execution_count":18},{"cell_type":"code","source":"train_df.query('OverallCond == 6 & SalePrice > 700000')\n#`692","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:32.165168Z","iopub.execute_input":"2025-03-19T06:17:32.165678Z","iopub.status.idle":"2025-03-19T06:17:32.207268Z","shell.execute_reply.started":"2025-03-19T06:17:32.165618Z","shell.execute_reply":"2025-03-19T06:17:32.206013Z"}},"outputs":[{"execution_count":19,"output_type":"execute_result","data":{"text/plain":"      Id  MSSubClass MSZoning  LotFrontage  LotArea Street Alley LotShape  \\\n691  692          60       RL        104.0    21535   Pave   NaN      IR1   \n\n    LandContour Utilities  ... PoolArea PoolQC Fence MiscFeature MiscVal  \\\n691         Lvl    AllPub  ...        0    NaN   NaN         NaN       0   \n\n    MoSold YrSold  SaleType  SaleCondition  SalePrice  \n691      1   2007        WD         Normal     755000  \n\n[1 rows x 81 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Id</th>\n      <th>MSSubClass</th>\n      <th>MSZoning</th>\n      <th>LotFrontage</th>\n      <th>LotArea</th>\n      <th>Street</th>\n      <th>Alley</th>\n      <th>LotShape</th>\n      <th>LandContour</th>\n      <th>Utilities</th>\n      <th>...</th>\n      <th>PoolArea</th>\n      <th>PoolQC</th>\n      <th>Fence</th>\n      <th>MiscFeature</th>\n      <th>MiscVal</th>\n      <th>MoSold</th>\n      <th>YrSold</th>\n      <th>SaleType</th>\n      <th>SaleCondition</th>\n      <th>SalePrice</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>691</th>\n      <td>692</td>\n      <td>60</td>\n      <td>RL</td>\n      <td>104.0</td>\n      <td>21535</td>\n      <td>Pave</td>\n      <td>NaN</td>\n      <td>IR1</td>\n      <td>Lvl</td>\n      <td>AllPub</td>\n      <td>...</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>1</td>\n      <td>2007</td>\n      <td>WD</td>\n      <td>Normal</td>\n      <td>755000</td>\n    </tr>\n  </tbody>\n</table>\n<p>1 rows √ó 81 columns</p>\n</div>"},"metadata":{}}],"execution_count":19},{"cell_type":"code","source":"plt.scatter(x='YearBuilt',y='SalePrice', data=train_df)\n ","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:32.208997Z","iopub.execute_input":"2025-03-19T06:17:32.209330Z","iopub.status.idle":"2025-03-19T06:17:32.503766Z","shell.execute_reply.started":"2025-03-19T06:17:32.209299Z","shell.execute_reply":"2025-03-19T06:17:32.502599Z"}},"outputs":[{"execution_count":20,"output_type":"execute_result","data":{"text/plain":"<matplotlib.collections.PathCollection at 0x7ea04dbd6cb0>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":"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LlwQcnJyhFGjRgmVlZVCSUmJ0KVLF2H27NlSm0OHDgnJycnCI488Iuzdu1dYvHixEBsbK5SUlEht3n//fUGv1wtLly4V9uzZIzzwwANCamqqw2o0b32Rg6vGiIiIwo+S67fiQOjLL78UAAj79+9vd1tDQ4Pw+9//XujUqZOQnJws3HbbbUJNTY1Dm8OHDwujR48WkpKShPT0dOGPf/yj0NLS4tBm7dq1wsCBA4WEhATh0ksvFd566612j/W3v/1N6Nmzp5CQkCAMGTJE2LJli+K+eMNAiIiIKPwouX7rBEEQQjokpWFWqxVGoxEWiwUGgyHU3SEiIiIZlFy/udcYERERRS0GQkRERBS1GAgRERFR1GIgRERERFGLgRARERFFLQZCREREFLUYCBEREVHUYiBEREREUYuBEBEREUUtBkJEREQUtRgIERERUdRiIERERERRi4EQERERRS0GQkRERBS1GAgRERFR1GIgRERERFGLgRARERFFLQZCREREFLUYCBEREVHUYiBEREREUYuBEBEREUUtBkJEREQUtRgIERERUdSKC3UHiIiISJlWm4Bt1XU4fqYRXTsmYkhWGmJjdKHuVlhiIERERBRGSqpqMH/lHtRYGqXfZRoTMfembBTlZIawZ+GJU2NERERhoqSqBlOW7XAIggDAbGnElGU7UFJVE6KehS8GQkRERGGg1SZg/so9EFzcJv5u/so9aLW5akHuMBAiIiIKA9uq69qNBNkTANRYGrGtui54nYoADISIiIjCwPEz7oMgX9pRGyZLExERhYGuHRNVbRcKWlztxkCIiIgoDAzJSkOmMRFmS6PLPCEdAJOxLbjQIq2uduPUGBERURiIjdFh7k3ZANqCHnviv+felB3yERZXtLzajYEQERFRmCjKycSrdw+Gyeg4/WUyJuLVuwdrso6Q1le7cWqMiIgojBTlZOLGbJPmcm3cUbLaLf+yzsHr2E8YCBEREYWZ2BhdSIIGX2h9tRunxoiIiChgtL7aTXEg9OOPP+Luu+9G586dkZSUhP79++Prr7+WbhcEAXPmzEFmZiaSkpJQUFCAAwcOOByjrq4O48ePh8FgQGpqKiZNmoSzZ886tPn2229x/fXXIzExET169MBzzz3Xri/Lly9H3759kZiYiP79++Pzzz93uF1OX4iIiChwxNVu7ibudGhbPRaq1W6KAqHT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"},"metadata":{}}],"execution_count":20},{"cell_type":"code","source":"train_df.query('YearBuilt<1900 & SalePrice >400000')\n#186","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:32.505261Z","iopub.execute_input":"2025-03-19T06:17:32.505756Z","iopub.status.idle":"2025-03-19T06:17:32.541808Z","shell.execute_reply.started":"2025-03-19T06:17:32.505695Z","shell.execute_reply":"2025-03-19T06:17:32.540602Z"}},"outputs":[{"execution_count":21,"output_type":"execute_result","data":{"text/plain":"      Id  MSSubClass MSZoning  LotFrontage  LotArea Street Alley LotShape  \\\n185  186          75       RM         90.0    22950   Pave   NaN      IR2   \n\n    LandContour Utilities  ... PoolArea PoolQC  Fence MiscFeature MiscVal  \\\n185         Lvl    AllPub  ...        0    NaN  GdPrv         NaN       0   \n\n    MoSold YrSold  SaleType  SaleCondition  SalePrice  \n185      6   2006        WD         Normal     475000  \n\n[1 rows x 81 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Id</th>\n      <th>MSSubClass</th>\n      <th>MSZoning</th>\n      <th>LotFrontage</th>\n      <th>LotArea</th>\n      <th>Street</th>\n      <th>Alley</th>\n      <th>LotShape</th>\n      <th>LandContour</th>\n      <th>Utilities</th>\n      <th>...</th>\n      <th>PoolArea</th>\n      <th>PoolQC</th>\n      <th>Fence</th>\n      <th>MiscFeature</th>\n      <th>MiscVal</th>\n      <th>MoSold</th>\n      <th>YrSold</th>\n      <th>SaleType</th>\n      <th>SaleCondition</th>\n      <th>SalePrice</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>185</th>\n      <td>186</td>\n      <td>75</td>\n      <td>RM</td>\n      <td>90.0</td>\n      <td>22950</td>\n      <td>Pave</td>\n      <td>NaN</td>\n      <td>IR2</td>\n      <td>Lvl</td>\n      <td>AllPub</td>\n      <td>...</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>GdPrv</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>6</td>\n      <td>2006</td>\n      <td>WD</td>\n      <td>Normal</td>\n      <td>475000</td>\n    </tr>\n  </tbody>\n</table>\n<p>1 rows √ó 81 columns</p>\n</div>"},"metadata":{}}],"execution_count":21},{"cell_type":"code","source":"train_df.query('YearBuilt < 2000 & SalePrice > 700000')\n#692, 1183","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:32.543203Z","iopub.execute_input":"2025-03-19T06:17:32.543565Z","iopub.status.idle":"2025-03-19T06:17:32.584110Z","shell.execute_reply.started":"2025-03-19T06:17:32.543532Z","shell.execute_reply":"2025-03-19T06:17:32.582898Z"}},"outputs":[{"execution_count":22,"output_type":"execute_result","data":{"text/plain":"        Id  MSSubClass MSZoning  LotFrontage  LotArea Street Alley LotShape  \\\n691    692          60       RL        104.0    21535   Pave   NaN      IR1   \n1182  1183          60       RL        160.0    15623   Pave   NaN      IR1   \n\n     LandContour Utilities  ... PoolArea PoolQC  Fence MiscFeature MiscVal  \\\n691          Lvl    AllPub  ...        0    NaN    NaN         NaN       0   \n1182         Lvl    AllPub  ...      555     Ex  MnPrv         NaN       0   \n\n     MoSold YrSold  SaleType  SaleCondition  SalePrice  \n691       1   2007        WD         Normal     755000  \n1182      7   2007        WD        Abnorml     745000  \n\n[2 rows x 81 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Id</th>\n      <th>MSSubClass</th>\n      <th>MSZoning</th>\n      <th>LotFrontage</th>\n      <th>LotArea</th>\n      <th>Street</th>\n      <th>Alley</th>\n      <th>LotShape</th>\n      <th>LandContour</th>\n      <th>Utilities</th>\n      <th>...</th>\n      <th>PoolArea</th>\n      <th>PoolQC</th>\n      <th>Fence</th>\n      <th>MiscFeature</th>\n      <th>MiscVal</th>\n      <th>MoSold</th>\n      <th>YrSold</th>\n      <th>SaleType</th>\n      <th>SaleCondition</th>\n      <th>SalePrice</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>691</th>\n      <td>692</td>\n      <td>60</td>\n      <td>RL</td>\n      <td>104.0</td>\n      <td>21535</td>\n      <td>Pave</td>\n      <td>NaN</td>\n      <td>IR1</td>\n      <td>Lvl</td>\n      <td>AllPub</td>\n      <td>...</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>1</td>\n      <td>2007</td>\n      <td>WD</td>\n      <td>Normal</td>\n      <td>755000</td>\n    </tr>\n    <tr>\n      <th>1182</th>\n      <td>1183</td>\n      <td>60</td>\n      <td>RL</td>\n      <td>160.0</td>\n      <td>15623</td>\n      <td>Pave</td>\n      <td>NaN</td>\n      <td>IR1</td>\n      <td>Lvl</td>\n      <td>AllPub</td>\n      <td>...</td>\n      <td>555</td>\n      <td>Ex</td>\n      <td>MnPrv</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>7</td>\n      <td>2007</td>\n      <td>WD</td>\n      <td>Abnorml</td>\n      <td>745000</td>\n    </tr>\n  </tbody>\n</table>\n<p>2 rows √ó 81 columns</p>\n</div>"},"metadata":{}}],"execution_count":22},{"cell_type":"code","source":"plt.scatter(x='YearRemodAdd',y='SalePrice', data=train_df)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:32.585567Z","iopub.execute_input":"2025-03-19T06:17:32.586026Z","iopub.status.idle":"2025-03-19T06:17:32.880129Z","shell.execute_reply.started":"2025-03-19T06:17:32.585991Z","shell.execute_reply":"2025-03-19T06:17:32.878903Z"}},"outputs":[{"execution_count":23,"output_type":"execute_result","data":{"text/plain":"<matplotlib.collections.PathCollection at 0x7ea04da539d0>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}],"execution_count":23},{"cell_type":"code","source":"train_df.query('YearRemodAdd < 1970  & SalePrice > 300000')\n#314","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:32.881376Z","iopub.execute_input":"2025-03-19T06:17:32.881766Z","iopub.status.idle":"2025-03-19T06:17:32.917385Z","shell.execute_reply.started":"2025-03-19T06:17:32.881731Z","shell.execute_reply":"2025-03-19T06:17:32.916172Z"}},"outputs":[{"execution_count":24,"output_type":"execute_result","data":{"text/plain":"      Id  MSSubClass MSZoning  LotFrontage  LotArea Street Alley LotShape  \\\n313  314          20       RL        150.0   215245   Pave   NaN      IR3   \n\n    LandContour Utilities  ... PoolArea PoolQC Fence MiscFeature MiscVal  \\\n313         Low    AllPub  ...        0    NaN   NaN         NaN       0   \n\n    MoSold YrSold  SaleType  SaleCondition  SalePrice  \n313      6   2009        WD         Normal     375000  \n\n[1 rows x 81 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Id</th>\n      <th>MSSubClass</th>\n      <th>MSZoning</th>\n      <th>LotFrontage</th>\n      <th>LotArea</th>\n      <th>Street</th>\n      <th>Alley</th>\n      <th>LotShape</th>\n      <th>LandContour</th>\n      <th>Utilities</th>\n      <th>...</th>\n      <th>PoolArea</th>\n      <th>PoolQC</th>\n      <th>Fence</th>\n      <th>MiscFeature</th>\n      <th>MiscVal</th>\n      <th>MoSold</th>\n      <th>YrSold</th>\n      <th>SaleType</th>\n      <th>SaleCondition</th>\n      <th>SalePrice</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>313</th>\n      <td>314</td>\n      <td>20</td>\n      <td>RL</td>\n      <td>150.0</td>\n      <td>215245</td>\n      <td>Pave</td>\n      <td>NaN</td>\n      <td>IR3</td>\n      <td>Low</td>\n      <td>AllPub</td>\n      <td>...</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>6</td>\n      <td>2009</td>\n      <td>WD</td>\n      <td>Normal</td>\n      <td>375000</td>\n    </tr>\n  </tbody>\n</table>\n<p>1 rows √ó 81 columns</p>\n</div>"},"metadata":{}}],"execution_count":24},{"cell_type":"code","source":"plt.scatter(x='MasVnrArea',y='SalePrice', data=train_df)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:32.918581Z","iopub.execute_input":"2025-03-19T06:17:32.919005Z","iopub.status.idle":"2025-03-19T06:17:33.319807Z","shell.execute_reply.started":"2025-03-19T06:17:32.918971Z","shell.execute_reply":"2025-03-19T06:17:33.318531Z"}},"outputs":[{"execution_count":25,"output_type":"execute_result","data":{"text/plain":"<matplotlib.collections.PathCollection at 0x7ea04d9504f0>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}],"execution_count":25},{"cell_type":"code","source":"train_df.query('MasVnrArea > 100 & SalePrice > 700000')\n#298, \n#1183, 692","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:33.321547Z","iopub.execute_input":"2025-03-19T06:17:33.322035Z","iopub.status.idle":"2025-03-19T06:17:33.359907Z","shell.execute_reply.started":"2025-03-19T06:17:33.321986Z","shell.execute_reply":"2025-03-19T06:17:33.358758Z"}},"outputs":[{"execution_count":26,"output_type":"execute_result","data":{"text/plain":"      Id  MSSubClass MSZoning  LotFrontage  LotArea Street Alley LotShape  \\\n691  692          60       RL        104.0    21535   Pave   NaN      IR1   \n\n    LandContour Utilities  ... PoolArea PoolQC Fence MiscFeature MiscVal  \\\n691         Lvl    AllPub  ...        0    NaN   NaN         NaN       0   \n\n    MoSold YrSold  SaleType  SaleCondition  SalePrice  \n691      1   2007        WD         Normal     755000  \n\n[1 rows x 81 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Id</th>\n      <th>MSSubClass</th>\n      <th>MSZoning</th>\n      <th>LotFrontage</th>\n      <th>LotArea</th>\n      <th>Street</th>\n      <th>Alley</th>\n      <th>LotShape</th>\n      <th>LandContour</th>\n      <th>Utilities</th>\n      <th>...</th>\n      <th>PoolArea</th>\n      <th>PoolQC</th>\n      <th>Fence</th>\n      <th>MiscFeature</th>\n      <th>MiscVal</th>\n      <th>MoSold</th>\n      <th>YrSold</th>\n      <th>SaleType</th>\n      <th>SaleCondition</th>\n      <th>SalePrice</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>691</th>\n      <td>692</td>\n      <td>60</td>\n      <td>RL</td>\n      <td>104.0</td>\n      <td>21535</td>\n      <td>Pave</td>\n      <td>NaN</td>\n      <td>IR1</td>\n      <td>Lvl</td>\n      <td>AllPub</td>\n      <td>...</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>1</td>\n      <td>2007</td>\n      <td>WD</td>\n      <td>Normal</td>\n      <td>755000</td>\n    </tr>\n  </tbody>\n</table>\n<p>1 rows √ó 81 columns</p>\n</div>"},"metadata":{}}],"execution_count":26},{"cell_type":"code","source":"plt.scatter(x='BsmtFinSF1',y='SalePrice', data=train_df)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:33.361338Z","iopub.execute_input":"2025-03-19T06:17:33.361724Z","iopub.status.idle":"2025-03-19T06:17:33.581837Z","shell.execute_reply.started":"2025-03-19T06:17:33.361690Z","shell.execute_reply":"2025-03-19T06:17:33.580546Z"}},"outputs":[{"execution_count":27,"output_type":"execute_result","data":{"text/plain":"<matplotlib.collections.PathCollection at 0x7ea04da06d70>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}],"execution_count":27},{"cell_type":"code","source":"train_df.query('BsmtFinSF1 > 5000')\n#1299","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:33.590680Z","iopub.execute_input":"2025-03-19T06:17:33.591088Z","iopub.status.idle":"2025-03-19T06:17:33.629223Z","shell.execute_reply.started":"2025-03-19T06:17:33.591053Z","shell.execute_reply":"2025-03-19T06:17:33.628007Z"}},"outputs":[{"execution_count":28,"output_type":"execute_result","data":{"text/plain":"        Id  MSSubClass MSZoning  LotFrontage  LotArea Street Alley LotShape  \\\n1298  1299          60       RL        313.0    63887   Pave   NaN      IR3   \n\n     LandContour Utilities  ... PoolArea PoolQC Fence MiscFeature MiscVal  \\\n1298         Bnk    AllPub  ...      480     Gd   NaN         NaN       0   \n\n     MoSold YrSold  SaleType  SaleCondition  SalePrice  \n1298      1   2008       New        Partial     160000  \n\n[1 rows x 81 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Id</th>\n      <th>MSSubClass</th>\n      <th>MSZoning</th>\n      <th>LotFrontage</th>\n      <th>LotArea</th>\n      <th>Street</th>\n      <th>Alley</th>\n      <th>LotShape</th>\n      <th>LandContour</th>\n      <th>Utilities</th>\n      <th>...</th>\n      <th>PoolArea</th>\n      <th>PoolQC</th>\n      <th>Fence</th>\n      <th>MiscFeature</th>\n      <th>MiscVal</th>\n      <th>MoSold</th>\n      <th>YrSold</th>\n      <th>SaleType</th>\n      <th>SaleCondition</th>\n      <th>SalePrice</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1298</th>\n      <td>1299</td>\n      <td>60</td>\n      <td>RL</td>\n      <td>313.0</td>\n      <td>63887</td>\n      <td>Pave</td>\n      <td>NaN</td>\n      <td>IR3</td>\n      <td>Bnk</td>\n      <td>AllPub</td>\n      <td>...</td>\n      <td>480</td>\n      <td>Gd</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>1</td>\n      <td>2008</td>\n      <td>New</td>\n      <td>Partial</td>\n      <td>160000</td>\n    </tr>\n  </tbody>\n</table>\n<p>1 rows √ó 81 columns</p>\n</div>"},"metadata":{}}],"execution_count":28},{"cell_type":"code","source":"plt.scatter(x='BsmtFinSF2',y='SalePrice', data=train_df)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:33.630837Z","iopub.execute_input":"2025-03-19T06:17:33.631204Z","iopub.status.idle":"2025-03-19T06:17:33.922869Z","shell.execute_reply.started":"2025-03-19T06:17:33.631170Z","shell.execute_reply":"2025-03-19T06:17:33.921615Z"}},"outputs":[{"execution_count":29,"output_type":"execute_result","data":{"text/plain":"<matplotlib.collections.PathCollection at 0x7ea04d98f220>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}],"execution_count":29},{"cell_type":"code","source":"train_df.query('BsmtFinSF2 > 400 & SalePrice > 500000')\n#441","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:33.924256Z","iopub.execute_input":"2025-03-19T06:17:33.924651Z","iopub.status.idle":"2025-03-19T06:17:33.967877Z","shell.execute_reply.started":"2025-03-19T06:17:33.924605Z","shell.execute_reply":"2025-03-19T06:17:33.966689Z"}},"outputs":[{"execution_count":30,"output_type":"execute_result","data":{"text/plain":"      Id  MSSubClass MSZoning  LotFrontage  LotArea Street Alley LotShape  \\\n440  441          20       RL        105.0    15431   Pave   NaN      Reg   \n\n    LandContour Utilities  ... PoolArea PoolQC Fence MiscFeature MiscVal  \\\n440         Lvl    AllPub  ...        0    NaN   NaN         NaN       0   \n\n    MoSold YrSold  SaleType  SaleCondition  SalePrice  \n440      4   2009        WD         Normal     555000  \n\n[1 rows x 81 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Id</th>\n      <th>MSSubClass</th>\n      <th>MSZoning</th>\n      <th>LotFrontage</th>\n      <th>LotArea</th>\n      <th>Street</th>\n      <th>Alley</th>\n      <th>LotShape</th>\n      <th>LandContour</th>\n      <th>Utilities</th>\n      <th>...</th>\n      <th>PoolArea</th>\n      <th>PoolQC</th>\n      <th>Fence</th>\n      <th>MiscFeature</th>\n      <th>MiscVal</th>\n      <th>MoSold</th>\n      <th>YrSold</th>\n      <th>SaleType</th>\n      <th>SaleCondition</th>\n      <th>SalePrice</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>440</th>\n      <td>441</td>\n      <td>20</td>\n      <td>RL</td>\n      <td>105.0</td>\n      <td>15431</td>\n      <td>Pave</td>\n      <td>NaN</td>\n      <td>Reg</td>\n      <td>Lvl</td>\n      <td>AllPub</td>\n      <td>...</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>4</td>\n      <td>2009</td>\n      <td>WD</td>\n      <td>Normal</td>\n      <td>555000</td>\n    </tr>\n  </tbody>\n</table>\n<p>1 rows √ó 81 columns</p>\n</div>"},"metadata":{}}],"execution_count":30},{"cell_type":"code","source":"plt.scatter(x='BsmtUnfSF',y='SalePrice', data=train_df)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:33.969218Z","iopub.execute_input":"2025-03-19T06:17:33.969687Z","iopub.status.idle":"2025-03-19T06:17:34.272979Z","shell.execute_reply.started":"2025-03-19T06:17:33.969649Z","shell.execute_reply":"2025-03-19T06:17:34.271785Z"}},"outputs":[{"execution_count":31,"output_type":"execute_result","data":{"text/plain":"<matplotlib.collections.PathCollection at 0x7ea04d838340>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":"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"},"metadata":{}}],"execution_count":31},{"cell_type":"code","source":"plt.scatter(x='TotalBsmtSF',y='SalePrice', data=train_df)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:34.274446Z","iopub.execute_input":"2025-03-19T06:17:34.274839Z","iopub.status.idle":"2025-03-19T06:17:34.493268Z","shell.execute_reply.started":"2025-03-19T06:17:34.274800Z","shell.execute_reply":"2025-03-19T06:17:34.492054Z"}},"outputs":[{"execution_count":32,"output_type":"execute_result","data":{"text/plain":"<matplotlib.collections.PathCollection at 0x7ea04d8a2ec0>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":"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"},"metadata":{}}],"execution_count":32},{"cell_type":"code","source":"train_df.query('TotalBsmtSF> 6000')\n#1299","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:34.494732Z","iopub.execute_input":"2025-03-19T06:17:34.495080Z","iopub.status.idle":"2025-03-19T06:17:34.533132Z","shell.execute_reply.started":"2025-03-19T06:17:34.495048Z","shell.execute_reply":"2025-03-19T06:17:34.531963Z"}},"outputs":[{"execution_count":33,"output_type":"execute_result","data":{"text/plain":"        Id  MSSubClass MSZoning  LotFrontage  LotArea Street Alley LotShape  \\\n1298  1299          60       RL        313.0    63887   Pave   NaN      IR3   \n\n     LandContour Utilities  ... PoolArea PoolQC Fence MiscFeature MiscVal  \\\n1298         Bnk    AllPub  ...      480     Gd   NaN         NaN       0   \n\n     MoSold YrSold  SaleType  SaleCondition  SalePrice  \n1298      1   2008       New        Partial     160000  \n\n[1 rows x 81 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Id</th>\n      <th>MSSubClass</th>\n      <th>MSZoning</th>\n      <th>LotFrontage</th>\n      <th>LotArea</th>\n      <th>Street</th>\n      <th>Alley</th>\n      <th>LotShape</th>\n      <th>LandContour</th>\n      <th>Utilities</th>\n      <th>...</th>\n      <th>PoolArea</th>\n      <th>PoolQC</th>\n      <th>Fence</th>\n      <th>MiscFeature</th>\n      <th>MiscVal</th>\n      <th>MoSold</th>\n      <th>YrSold</th>\n      <th>SaleType</th>\n      <th>SaleCondition</th>\n      <th>SalePrice</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1298</th>\n      <td>1299</td>\n      <td>60</td>\n      <td>RL</td>\n      <td>313.0</td>\n      <td>63887</td>\n      <td>Pave</td>\n      <td>NaN</td>\n      <td>IR3</td>\n      <td>Bnk</td>\n      <td>AllPub</td>\n      <td>...</td>\n      <td>480</td>\n      <td>Gd</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>1</td>\n      <td>2008</td>\n      <td>New</td>\n      <td>Partial</td>\n      <td>160000</td>\n    </tr>\n  </tbody>\n</table>\n<p>1 rows √ó 81 columns</p>\n</div>"},"metadata":{}}],"execution_count":33},{"cell_type":"code","source":"plt.scatter(x='1stFlrSF',y='SalePrice', data=train_df)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:34.534494Z","iopub.execute_input":"2025-03-19T06:17:34.534859Z","iopub.status.idle":"2025-03-19T06:17:34.738988Z","shell.execute_reply.started":"2025-03-19T06:17:34.534826Z","shell.execute_reply":"2025-03-19T06:17:34.737671Z"}},"outputs":[{"execution_count":34,"output_type":"execute_result","data":{"text/plain":"<matplotlib.collections.PathCollection at 0x7ea04d79bc10>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}],"execution_count":34},{"cell_type":"code","source":"plt.scatter(x='2ndFlrSF',y='SalePrice', data=train_df)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:34.740629Z","iopub.execute_input":"2025-03-19T06:17:34.741130Z","iopub.status.idle":"2025-03-19T06:17:34.949985Z","shell.execute_reply.started":"2025-03-19T06:17:34.741092Z","shell.execute_reply":"2025-03-19T06:17:34.948620Z"}},"outputs":[{"execution_count":35,"output_type":"execute_result","data":{"text/plain":"<matplotlib.collections.PathCollection at 0x7ea04d79bd30>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}],"execution_count":35},{"cell_type":"code","source":"plt.scatter(x='LowQualFinSF',y='SalePrice', data=train_df)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:34.951727Z","iopub.execute_input":"2025-03-19T06:17:34.952203Z","iopub.status.idle":"2025-03-19T06:17:35.233763Z","shell.execute_reply.started":"2025-03-19T06:17:34.952148Z","shell.execute_reply":"2025-03-19T06:17:35.232482Z"}},"outputs":[{"execution_count":36,"output_type":"execute_result","data":{"text/plain":"<matplotlib.collections.PathCollection at 0x7ea04d6d9c00>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}],"execution_count":36},{"cell_type":"code","source":"train_df.query('LowQualFinSF> 570')\n#186","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:35.235004Z","iopub.execute_input":"2025-03-19T06:17:35.235343Z","iopub.status.idle":"2025-03-19T06:17:35.270210Z","shell.execute_reply.started":"2025-03-19T06:17:35.235311Z","shell.execute_reply":"2025-03-19T06:17:35.268933Z"}},"outputs":[{"execution_count":37,"output_type":"execute_result","data":{"text/plain":"      Id  MSSubClass MSZoning  LotFrontage  LotArea Street Alley LotShape  \\\n185  186          75       RM         90.0    22950   Pave   NaN      IR2   \n\n    LandContour Utilities  ... PoolArea PoolQC  Fence MiscFeature MiscVal  \\\n185         Lvl    AllPub  ...        0    NaN  GdPrv         NaN       0   \n\n    MoSold YrSold  SaleType  SaleCondition  SalePrice  \n185      6   2006        WD         Normal     475000  \n\n[1 rows x 81 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Id</th>\n      <th>MSSubClass</th>\n      <th>MSZoning</th>\n      <th>LotFrontage</th>\n      <th>LotArea</th>\n      <th>Street</th>\n      <th>Alley</th>\n      <th>LotShape</th>\n      <th>LandContour</th>\n      <th>Utilities</th>\n      <th>...</th>\n      <th>PoolArea</th>\n      <th>PoolQC</th>\n      <th>Fence</th>\n      <th>MiscFeature</th>\n      <th>MiscVal</th>\n      <th>MoSold</th>\n      <th>YrSold</th>\n      <th>SaleType</th>\n      <th>SaleCondition</th>\n      <th>SalePrice</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>185</th>\n      <td>186</td>\n      <td>75</td>\n      <td>RM</td>\n      <td>90.0</td>\n      <td>22950</td>\n      <td>Pave</td>\n      <td>NaN</td>\n      <td>IR2</td>\n      <td>Lvl</td>\n      <td>AllPub</td>\n      <td>...</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>GdPrv</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>6</td>\n      <td>2006</td>\n      <td>WD</td>\n      <td>Normal</td>\n      <td>475000</td>\n    </tr>\n  </tbody>\n</table>\n<p>1 rows √ó 81 columns</p>\n</div>"},"metadata":{}}],"execution_count":37},{"cell_type":"code","source":"plt.scatter(x='GrLivArea',y='SalePrice', data=train_df)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:35.271794Z","iopub.execute_input":"2025-03-19T06:17:35.272176Z","iopub.status.idle":"2025-03-19T06:17:35.543098Z","shell.execute_reply.started":"2025-03-19T06:17:35.272143Z","shell.execute_reply":"2025-03-19T06:17:35.541820Z"}},"outputs":[{"execution_count":38,"output_type":"execute_result","data":{"text/plain":"<matplotlib.collections.PathCollection at 0x7ea04d5547c0>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}],"execution_count":38},{"cell_type":"code","source":"train_df.query('GrLivArea > 4000')\n#524,1299","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:35.545043Z","iopub.execute_input":"2025-03-19T06:17:35.545408Z","iopub.status.idle":"2025-03-19T06:17:35.583453Z","shell.execute_reply.started":"2025-03-19T06:17:35.545364Z","shell.execute_reply":"2025-03-19T06:17:35.582141Z"}},"outputs":[{"execution_count":39,"output_type":"execute_result","data":{"text/plain":"        Id  MSSubClass MSZoning  LotFrontage  LotArea Street Alley LotShape  \\\n523    524          60       RL        130.0    40094   Pave   NaN      IR1   \n691    692          60       RL        104.0    21535   Pave   NaN      IR1   \n1182  1183          60       RL        160.0    15623   Pave   NaN      IR1   \n1298  1299          60       RL        313.0    63887   Pave   NaN      IR3   \n\n     LandContour Utilities  ... PoolArea PoolQC  Fence MiscFeature MiscVal  \\\n523          Bnk    AllPub  ...        0    NaN    NaN         NaN       0   \n691          Lvl    AllPub  ...        0    NaN    NaN         NaN       0   \n1182         Lvl    AllPub  ...      555     Ex  MnPrv         NaN       0   \n1298         Bnk    AllPub  ...      480     Gd    NaN         NaN       0   \n\n     MoSold YrSold  SaleType  SaleCondition  SalePrice  \n523      10   2007       New        Partial     184750  \n691       1   2007        WD         Normal     755000  \n1182      7   2007        WD        Abnorml     745000  \n1298      1   2008       New        Partial     160000  \n\n[4 rows x 81 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Id</th>\n      <th>MSSubClass</th>\n      <th>MSZoning</th>\n      <th>LotFrontage</th>\n      <th>LotArea</th>\n      <th>Street</th>\n      <th>Alley</th>\n      <th>LotShape</th>\n      <th>LandContour</th>\n      <th>Utilities</th>\n      <th>...</th>\n      <th>PoolArea</th>\n      <th>PoolQC</th>\n      <th>Fence</th>\n      <th>MiscFeature</th>\n      <th>MiscVal</th>\n      <th>MoSold</th>\n      <th>YrSold</th>\n      <th>SaleType</th>\n      <th>SaleCondition</th>\n      <th>SalePrice</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>523</th>\n      <td>524</td>\n      <td>60</td>\n      <td>RL</td>\n      <td>130.0</td>\n      <td>40094</td>\n      <td>Pave</td>\n      <td>NaN</td>\n      <td>IR1</td>\n      <td>Bnk</td>\n      <td>AllPub</td>\n      <td>...</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>10</td>\n      <td>2007</td>\n      <td>New</td>\n      <td>Partial</td>\n      <td>184750</td>\n    </tr>\n    <tr>\n      <th>691</th>\n      <td>692</td>\n      <td>60</td>\n      <td>RL</td>\n      <td>104.0</td>\n      <td>21535</td>\n      <td>Pave</td>\n      <td>NaN</td>\n      <td>IR1</td>\n      <td>Lvl</td>\n      <td>AllPub</td>\n      <td>...</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>1</td>\n      <td>2007</td>\n      <td>WD</td>\n      <td>Normal</td>\n      <td>755000</td>\n    </tr>\n    <tr>\n      <th>1182</th>\n      <td>1183</td>\n      <td>60</td>\n      <td>RL</td>\n      <td>160.0</td>\n      <td>15623</td>\n      <td>Pave</td>\n      <td>NaN</td>\n      <td>IR1</td>\n      <td>Lvl</td>\n      <td>AllPub</td>\n      <td>...</td>\n      <td>555</td>\n      <td>Ex</td>\n      <td>MnPrv</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>7</td>\n      <td>2007</td>\n      <td>WD</td>\n      <td>Abnorml</td>\n      <td>745000</td>\n    </tr>\n    <tr>\n      <th>1298</th>\n      <td>1299</td>\n      <td>60</td>\n      <td>RL</td>\n      <td>313.0</td>\n      <td>63887</td>\n      <td>Pave</td>\n      <td>NaN</td>\n      <td>IR3</td>\n      <td>Bnk</td>\n      <td>AllPub</td>\n      <td>...</td>\n      <td>480</td>\n      <td>Gd</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>1</td>\n      <td>2008</td>\n      <td>New</td>\n      <td>Partial</td>\n      <td>160000</td>\n    </tr>\n  </tbody>\n</table>\n<p>4 rows √ó 81 columns</p>\n</div>"},"metadata":{}}],"execution_count":39},{"cell_type":"code","source":"plt.scatter(x='BsmtFullBath',y='SalePrice', data=train_df)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:35.584855Z","iopub.execute_input":"2025-03-19T06:17:35.585194Z","iopub.status.idle":"2025-03-19T06:17:35.804913Z","shell.execute_reply.started":"2025-03-19T06:17:35.585163Z","shell.execute_reply":"2025-03-19T06:17:35.803700Z"}},"outputs":[{"execution_count":40,"output_type":"execute_result","data":{"text/plain":"<matplotlib.collections.PathCollection at 0x7ea04d546d70>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}],"execution_count":40},{"cell_type":"code","source":"train_df.query('BsmtFullBath == 3.0')\n#739","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:35.806239Z","iopub.execute_input":"2025-03-19T06:17:35.806641Z","iopub.status.idle":"2025-03-19T06:17:35.842414Z","shell.execute_reply.started":"2025-03-19T06:17:35.806547Z","shell.execute_reply":"2025-03-19T06:17:35.841116Z"}},"outputs":[{"execution_count":41,"output_type":"execute_result","data":{"text/plain":"      Id  MSSubClass MSZoning  LotFrontage  LotArea Street Alley LotShape  \\\n738  739          90       RL         60.0    10800   Pave   NaN      Reg   \n\n    LandContour Utilities  ... PoolArea PoolQC Fence MiscFeature MiscVal  \\\n738         Lvl    AllPub  ...        0    NaN   NaN         NaN       0   \n\n    MoSold YrSold  SaleType  SaleCondition  SalePrice  \n738      3   2009        WD         Alloca     179000  \n\n[1 rows x 81 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Id</th>\n      <th>MSSubClass</th>\n      <th>MSZoning</th>\n      <th>LotFrontage</th>\n      <th>LotArea</th>\n      <th>Street</th>\n      <th>Alley</th>\n      <th>LotShape</th>\n      <th>LandContour</th>\n      <th>Utilities</th>\n      <th>...</th>\n      <th>PoolArea</th>\n      <th>PoolQC</th>\n      <th>Fence</th>\n      <th>MiscFeature</th>\n      <th>MiscVal</th>\n      <th>MoSold</th>\n      <th>YrSold</th>\n      <th>SaleType</th>\n      <th>SaleCondition</th>\n      <th>SalePrice</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>738</th>\n      <td>739</td>\n      <td>90</td>\n      <td>RL</td>\n      <td>60.0</td>\n      <td>10800</td>\n      <td>Pave</td>\n      <td>NaN</td>\n      <td>Reg</td>\n      <td>Lvl</td>\n      <td>AllPub</td>\n      <td>...</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>3</td>\n      <td>2009</td>\n      <td>WD</td>\n      <td>Alloca</td>\n      <td>179000</td>\n    </tr>\n  </tbody>\n</table>\n<p>1 rows √ó 81 columns</p>\n</div>"},"metadata":{}}],"execution_count":41},{"cell_type":"code","source":"plt.scatter(x='BsmtHalfBath',y='SalePrice', data=train_df)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:35.844205Z","iopub.execute_input":"2025-03-19T06:17:35.845043Z","iopub.status.idle":"2025-03-19T06:17:36.081763Z","shell.execute_reply.started":"2025-03-19T06:17:35.845008Z","shell.execute_reply":"2025-03-19T06:17:36.080537Z"}},"outputs":[{"execution_count":42,"output_type":"execute_result","data":{"text/plain":"<matplotlib.collections.PathCollection at 0x7ea04d43da80>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}],"execution_count":42},{"cell_type":"code","source":"stats.zscore(train_df['BsmtHalfBath']).unique()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:36.083629Z","iopub.execute_input":"2025-03-19T06:17:36.084004Z","iopub.status.idle":"2025-03-19T06:17:36.094626Z","shell.execute_reply.started":"2025-03-19T06:17:36.083968Z","shell.execute_reply":"2025-03-19T06:17:36.093346Z"}},"outputs":[{"execution_count":43,"output_type":"execute_result","data":{"text/plain":"array([-0.24106104,  3.94880935,  8.13867973])"},"metadata":{}}],"execution_count":43},{"cell_type":"code","source":"train_df.query('BsmtHalfBath == 2.00')\n#598,955","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:36.096030Z","iopub.execute_input":"2025-03-19T06:17:36.096428Z","iopub.status.idle":"2025-03-19T06:17:36.138029Z","shell.execute_reply.started":"2025-03-19T06:17:36.096390Z","shell.execute_reply":"2025-03-19T06:17:36.136769Z"}},"outputs":[{"execution_count":44,"output_type":"execute_result","data":{"text/plain":"      Id  MSSubClass MSZoning  LotFrontage  LotArea Street Alley LotShape  \\\n597  598         120       RL         53.0     3922   Pave   NaN      Reg   \n954  955          90       RL         35.0     9400   Pave   NaN      IR1   \n\n    LandContour Utilities  ... PoolArea PoolQC Fence MiscFeature MiscVal  \\\n597         Lvl    AllPub  ...        0    NaN   NaN         NaN       0   \n954         Lvl    AllPub  ...        0    NaN   NaN         NaN       0   \n\n    MoSold YrSold  SaleType  SaleCondition  SalePrice  \n597      2   2007       New        Partial     194201  \n954     10   2006        WD        AdjLand     127500  \n\n[2 rows x 81 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Id</th>\n      <th>MSSubClass</th>\n      <th>MSZoning</th>\n      <th>LotFrontage</th>\n      <th>LotArea</th>\n      <th>Street</th>\n      <th>Alley</th>\n      <th>LotShape</th>\n      <th>LandContour</th>\n      <th>Utilities</th>\n      <th>...</th>\n      <th>PoolArea</th>\n      <th>PoolQC</th>\n      <th>Fence</th>\n      <th>MiscFeature</th>\n      <th>MiscVal</th>\n      <th>MoSold</th>\n      <th>YrSold</th>\n      <th>SaleType</th>\n      <th>SaleCondition</th>\n      <th>SalePrice</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>597</th>\n      <td>598</td>\n      <td>120</td>\n      <td>RL</td>\n      <td>53.0</td>\n      <td>3922</td>\n      <td>Pave</td>\n      <td>NaN</td>\n      <td>Reg</td>\n      <td>Lvl</td>\n      <td>AllPub</td>\n      <td>...</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>2</td>\n      <td>2007</td>\n      <td>New</td>\n      <td>Partial</td>\n      <td>194201</td>\n    </tr>\n    <tr>\n      <th>954</th>\n      <td>955</td>\n      <td>90</td>\n      <td>RL</td>\n      <td>35.0</td>\n      <td>9400</td>\n      <td>Pave</td>\n      <td>NaN</td>\n      <td>IR1</td>\n      <td>Lvl</td>\n      <td>AllPub</td>\n      <td>...</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>10</td>\n      <td>2006</td>\n      <td>WD</td>\n      <td>AdjLand</td>\n      <td>127500</td>\n    </tr>\n  </tbody>\n</table>\n<p>2 rows √ó 81 columns</p>\n</div>"},"metadata":{}}],"execution_count":44},{"cell_type":"code","source":"plt.scatter(x='FullBath',y='SalePrice', data=train_df)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:36.139604Z","iopub.execute_input":"2025-03-19T06:17:36.140709Z","iopub.status.idle":"2025-03-19T06:17:36.423433Z","shell.execute_reply.started":"2025-03-19T06:17:36.140651Z","shell.execute_reply":"2025-03-19T06:17:36.422243Z"}},"outputs":[{"execution_count":45,"output_type":"execute_result","data":{"text/plain":"<matplotlib.collections.PathCollection at 0x7ea04d4cf580>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}],"execution_count":45},{"cell_type":"code","source":"plt.scatter(x='HalfBath',y='SalePrice', data=train_df)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:36.424809Z","iopub.execute_input":"2025-03-19T06:17:36.425129Z","iopub.status.idle":"2025-03-19T06:17:36.725070Z","shell.execute_reply.started":"2025-03-19T06:17:36.425099Z","shell.execute_reply":"2025-03-19T06:17:36.723598Z"}},"outputs":[{"execution_count":46,"output_type":"execute_result","data":{"text/plain":"<matplotlib.collections.PathCollection at 0x7ea04d4cc8b0>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}],"execution_count":46},{"cell_type":"code","source":"plt.scatter(x='BedroomAbvGr',y='SalePrice', data=train_df)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:36.726656Z","iopub.execute_input":"2025-03-19T06:17:36.726998Z","iopub.status.idle":"2025-03-19T06:17:37.022824Z","shell.execute_reply.started":"2025-03-19T06:17:36.726967Z","shell.execute_reply":"2025-03-19T06:17:37.021659Z"}},"outputs":[{"execution_count":47,"output_type":"execute_result","data":{"text/plain":"<matplotlib.collections.PathCollection at 0x7ea04d422590>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}],"execution_count":47},{"cell_type":"code","source":"train_df.query('BedroomAbvGr == 8')\n#636","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:37.024326Z","iopub.execute_input":"2025-03-19T06:17:37.024815Z","iopub.status.idle":"2025-03-19T06:17:37.063476Z","shell.execute_reply.started":"2025-03-19T06:17:37.024766Z","shell.execute_reply":"2025-03-19T06:17:37.062143Z"}},"outputs":[{"execution_count":48,"output_type":"execute_result","data":{"text/plain":"      Id  MSSubClass MSZoning  LotFrontage  LotArea Street Alley LotShape  \\\n635  636         190       RH         60.0    10896   Pave  Pave      Reg   \n\n    LandContour Utilities  ... PoolArea PoolQC Fence MiscFeature MiscVal  \\\n635         Bnk    AllPub  ...        0    NaN   NaN         NaN       0   \n\n    MoSold YrSold  SaleType  SaleCondition  SalePrice  \n635      3   2007        WD        Abnorml     200000  \n\n[1 rows x 81 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Id</th>\n      <th>MSSubClass</th>\n      <th>MSZoning</th>\n      <th>LotFrontage</th>\n      <th>LotArea</th>\n      <th>Street</th>\n      <th>Alley</th>\n      <th>LotShape</th>\n      <th>LandContour</th>\n      <th>Utilities</th>\n      <th>...</th>\n      <th>PoolArea</th>\n      <th>PoolQC</th>\n      <th>Fence</th>\n      <th>MiscFeature</th>\n      <th>MiscVal</th>\n      <th>MoSold</th>\n      <th>YrSold</th>\n      <th>SaleType</th>\n      <th>SaleCondition</th>\n      <th>SalePrice</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>635</th>\n      <td>636</td>\n      <td>190</td>\n      <td>RH</td>\n      <td>60.0</td>\n      <td>10896</td>\n      <td>Pave</td>\n      <td>Pave</td>\n      <td>Reg</td>\n      <td>Bnk</td>\n      <td>AllPub</td>\n      <td>...</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>3</td>\n      <td>2007</td>\n      <td>WD</td>\n      <td>Abnorml</td>\n      <td>200000</td>\n    </tr>\n  </tbody>\n</table>\n<p>1 rows √ó 81 columns</p>\n</div>"},"metadata":{}}],"execution_count":48},{"cell_type":"code","source":"plt.scatter(x='KitchenAbvGr',y='SalePrice', data=train_df)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:37.065340Z","iopub.execute_input":"2025-03-19T06:17:37.065956Z","iopub.status.idle":"2025-03-19T06:17:37.350357Z","shell.execute_reply.started":"2025-03-19T06:17:37.065886Z","shell.execute_reply":"2025-03-19T06:17:37.349262Z"}},"outputs":[{"execution_count":49,"output_type":"execute_result","data":{"text/plain":"<matplotlib.collections.PathCollection at 0x7ea04d278790>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}],"execution_count":49},{"cell_type":"code","source":"train_df.query('KitchenAbvGr == 3')\n#49,810","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:37.352060Z","iopub.execute_input":"2025-03-19T06:17:37.352525Z","iopub.status.idle":"2025-03-19T06:17:37.390256Z","shell.execute_reply.started":"2025-03-19T06:17:37.352476Z","shell.execute_reply":"2025-03-19T06:17:37.389115Z"}},"outputs":[{"execution_count":50,"output_type":"execute_result","data":{"text/plain":"      Id  MSSubClass MSZoning  LotFrontage  LotArea Street Alley LotShape  \\\n48    49         190       RM         33.0     4456   Pave   NaN      Reg   \n809  810          75       RM         90.0     8100   Pave   NaN      Reg   \n\n    LandContour Utilities  ... PoolArea PoolQC  Fence MiscFeature MiscVal  \\\n48          Lvl    AllPub  ...        0    NaN    NaN         NaN       0   \n809         Lvl    AllPub  ...        0    NaN  MnPrv         NaN       0   \n\n    MoSold YrSold  SaleType  SaleCondition  SalePrice  \n48       6   2009       New        Partial     113000  \n809     11   2009        WD         Normal     106000  \n\n[2 rows x 81 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Id</th>\n      <th>MSSubClass</th>\n      <th>MSZoning</th>\n      <th>LotFrontage</th>\n      <th>LotArea</th>\n      <th>Street</th>\n      <th>Alley</th>\n      <th>LotShape</th>\n      <th>LandContour</th>\n      <th>Utilities</th>\n      <th>...</th>\n      <th>PoolArea</th>\n      <th>PoolQC</th>\n      <th>Fence</th>\n      <th>MiscFeature</th>\n      <th>MiscVal</th>\n      <th>MoSold</th>\n      <th>YrSold</th>\n      <th>SaleType</th>\n      <th>SaleCondition</th>\n      <th>SalePrice</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>48</th>\n      <td>49</td>\n      <td>190</td>\n      <td>RM</td>\n      <td>33.0</td>\n      <td>4456</td>\n      <td>Pave</td>\n      <td>NaN</td>\n      <td>Reg</td>\n      <td>Lvl</td>\n      <td>AllPub</td>\n      <td>...</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>6</td>\n      <td>2009</td>\n      <td>New</td>\n      <td>Partial</td>\n      <td>113000</td>\n    </tr>\n    <tr>\n      <th>809</th>\n      <td>810</td>\n      <td>75</td>\n      <td>RM</td>\n      <td>90.0</td>\n      <td>8100</td>\n      <td>Pave</td>\n      <td>NaN</td>\n      <td>Reg</td>\n      <td>Lvl</td>\n      <td>AllPub</td>\n      <td>...</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>MnPrv</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>11</td>\n      <td>2009</td>\n      <td>WD</td>\n      <td>Normal</td>\n      <td>106000</td>\n    </tr>\n  </tbody>\n</table>\n<p>2 rows √ó 81 columns</p>\n</div>"},"metadata":{}}],"execution_count":50},{"cell_type":"code","source":"plt.scatter(x='TotRmsAbvGrd', y= 'SalePrice', data=train_df)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:37.392075Z","iopub.execute_input":"2025-03-19T06:17:37.392563Z","iopub.status.idle":"2025-03-19T06:17:37.675317Z","shell.execute_reply.started":"2025-03-19T06:17:37.392512Z","shell.execute_reply":"2025-03-19T06:17:37.674189Z"}},"outputs":[{"execution_count":51,"output_type":"execute_result","data":{"text/plain":"<matplotlib.collections.PathCollection at 0x7ea04d2ff820>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}],"execution_count":51},{"cell_type":"code","source":"train_df.query('TotRmsAbvGrd == 14')\n#636","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:37.677018Z","iopub.execute_input":"2025-03-19T06:17:37.678034Z","iopub.status.idle":"2025-03-19T06:17:37.712631Z","shell.execute_reply.started":"2025-03-19T06:17:37.677980Z","shell.execute_reply":"2025-03-19T06:17:37.711497Z"}},"outputs":[{"execution_count":52,"output_type":"execute_result","data":{"text/plain":"      Id  MSSubClass MSZoning  LotFrontage  LotArea Street Alley LotShape  \\\n635  636         190       RH         60.0    10896   Pave  Pave      Reg   \n\n    LandContour Utilities  ... PoolArea PoolQC Fence MiscFeature MiscVal  \\\n635         Bnk    AllPub  ...        0    NaN   NaN         NaN       0   \n\n    MoSold YrSold  SaleType  SaleCondition  SalePrice  \n635      3   2007        WD        Abnorml     200000  \n\n[1 rows x 81 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Id</th>\n      <th>MSSubClass</th>\n      <th>MSZoning</th>\n      <th>LotFrontage</th>\n      <th>LotArea</th>\n      <th>Street</th>\n      <th>Alley</th>\n      <th>LotShape</th>\n      <th>LandContour</th>\n      <th>Utilities</th>\n      <th>...</th>\n      <th>PoolArea</th>\n      <th>PoolQC</th>\n      <th>Fence</th>\n      <th>MiscFeature</th>\n      <th>MiscVal</th>\n      <th>MoSold</th>\n      <th>YrSold</th>\n      <th>SaleType</th>\n      <th>SaleCondition</th>\n      <th>SalePrice</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>635</th>\n      <td>636</td>\n      <td>190</td>\n      <td>RH</td>\n      <td>60.0</td>\n      <td>10896</td>\n      <td>Pave</td>\n      <td>Pave</td>\n      <td>Reg</td>\n      <td>Bnk</td>\n      <td>AllPub</td>\n      <td>...</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>3</td>\n      <td>2007</td>\n      <td>WD</td>\n      <td>Abnorml</td>\n      <td>200000</td>\n    </tr>\n  </tbody>\n</table>\n<p>1 rows √ó 81 columns</p>\n</div>"},"metadata":{}}],"execution_count":52},{"cell_type":"code","source":"plt.scatter(x='Fireplaces',y='SalePrice', data=train_df)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:37.714133Z","iopub.execute_input":"2025-03-19T06:17:37.714622Z","iopub.status.idle":"2025-03-19T06:17:38.130812Z","shell.execute_reply.started":"2025-03-19T06:17:37.714547Z","shell.execute_reply":"2025-03-19T06:17:38.129658Z"}},"outputs":[{"execution_count":53,"output_type":"execute_result","data":{"text/plain":"<matplotlib.collections.PathCollection at 0x7ea04d161600>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}],"execution_count":53},{"cell_type":"code","source":"plt.scatter(x='GarageYrBlt',y='SalePrice', data=train_df)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:38.132869Z","iopub.execute_input":"2025-03-19T06:17:38.133226Z","iopub.status.idle":"2025-03-19T06:17:38.412573Z","shell.execute_reply.started":"2025-03-19T06:17:38.133194Z","shell.execute_reply":"2025-03-19T06:17:38.411377Z"}},"outputs":[{"execution_count":54,"output_type":"execute_result","data":{"text/plain":"<matplotlib.collections.PathCollection at 0x7ea04d5280d0>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}],"execution_count":54},{"cell_type":"code","source":"train_df.query('GarageYrBlt < 2000 & SalePrice > 700000')\n#692, 1183","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:38.413894Z","iopub.execute_input":"2025-03-19T06:17:38.414244Z","iopub.status.idle":"2025-03-19T06:17:38.457346Z","shell.execute_reply.started":"2025-03-19T06:17:38.414211Z","shell.execute_reply":"2025-03-19T06:17:38.456214Z"}},"outputs":[{"execution_count":55,"output_type":"execute_result","data":{"text/plain":"        Id  MSSubClass MSZoning  LotFrontage  LotArea Street Alley LotShape  \\\n691    692          60       RL        104.0    21535   Pave   NaN      IR1   \n1182  1183          60       RL        160.0    15623   Pave   NaN      IR1   \n\n     LandContour Utilities  ... PoolArea PoolQC  Fence MiscFeature MiscVal  \\\n691          Lvl    AllPub  ...        0    NaN    NaN         NaN       0   \n1182         Lvl    AllPub  ...      555     Ex  MnPrv         NaN       0   \n\n     MoSold YrSold  SaleType  SaleCondition  SalePrice  \n691       1   2007        WD         Normal     755000  \n1182      7   2007        WD        Abnorml     745000  \n\n[2 rows x 81 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Id</th>\n      <th>MSSubClass</th>\n      <th>MSZoning</th>\n      <th>LotFrontage</th>\n      <th>LotArea</th>\n      <th>Street</th>\n      <th>Alley</th>\n      <th>LotShape</th>\n      <th>LandContour</th>\n      <th>Utilities</th>\n      <th>...</th>\n      <th>PoolArea</th>\n      <th>PoolQC</th>\n      <th>Fence</th>\n      <th>MiscFeature</th>\n      <th>MiscVal</th>\n      <th>MoSold</th>\n      <th>YrSold</th>\n      <th>SaleType</th>\n      <th>SaleCondition</th>\n      <th>SalePrice</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>691</th>\n      <td>692</td>\n      <td>60</td>\n      <td>RL</td>\n      <td>104.0</td>\n      <td>21535</td>\n      <td>Pave</td>\n      <td>NaN</td>\n      <td>IR1</td>\n      <td>Lvl</td>\n      <td>AllPub</td>\n      <td>...</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>1</td>\n      <td>2007</td>\n      <td>WD</td>\n      <td>Normal</td>\n      <td>755000</td>\n    </tr>\n    <tr>\n      <th>1182</th>\n      <td>1183</td>\n      <td>60</td>\n      <td>RL</td>\n      <td>160.0</td>\n      <td>15623</td>\n      <td>Pave</td>\n      <td>NaN</td>\n      <td>IR1</td>\n      <td>Lvl</td>\n      <td>AllPub</td>\n      <td>...</td>\n      <td>555</td>\n      <td>Ex</td>\n      <td>MnPrv</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>7</td>\n      <td>2007</td>\n      <td>WD</td>\n      <td>Abnorml</td>\n      <td>745000</td>\n    </tr>\n  </tbody>\n</table>\n<p>2 rows √ó 81 columns</p>\n</div>"},"metadata":{}}],"execution_count":55},{"cell_type":"code","source":"plt.scatter(x='GarageCars',y='SalePrice', data=train_df)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:38.458782Z","iopub.execute_input":"2025-03-19T06:17:38.459227Z","iopub.status.idle":"2025-03-19T06:17:38.691240Z","shell.execute_reply.started":"2025-03-19T06:17:38.459181Z","shell.execute_reply":"2025-03-19T06:17:38.689977Z"}},"outputs":[{"execution_count":56,"output_type":"execute_result","data":{"text/plain":"<matplotlib.collections.PathCollection at 0x7ea04d074700>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}],"execution_count":56},{"cell_type":"code","source":"plt.scatter(x='GarageArea',y='SalePrice', data=train_df)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:38.692691Z","iopub.execute_input":"2025-03-19T06:17:38.692999Z","iopub.status.idle":"2025-03-19T06:17:38.926672Z","shell.execute_reply.started":"2025-03-19T06:17:38.692970Z","shell.execute_reply":"2025-03-19T06:17:38.925469Z"}},"outputs":[{"execution_count":57,"output_type":"execute_result","data":{"text/plain":"<matplotlib.collections.PathCollection at 0x7ea04cf072b0>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}],"execution_count":57},{"cell_type":"code","source":"train_df.query('GarageArea > 1200')\n#1062,1191","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:38.928090Z","iopub.execute_input":"2025-03-19T06:17:38.928428Z","iopub.status.idle":"2025-03-19T06:17:38.966085Z","shell.execute_reply.started":"2025-03-19T06:17:38.928395Z","shell.execute_reply":"2025-03-19T06:17:38.964839Z"}},"outputs":[{"execution_count":58,"output_type":"execute_result","data":{"text/plain":"        Id  MSSubClass MSZoning  LotFrontage  LotArea Street Alley LotShape  \\\n581    582          20       RL         98.0    12704   Pave   NaN      Reg   \n825    826          20       RL        114.0    14803   Pave   NaN      Reg   \n1061  1062          30  C (all)        120.0    18000   Grvl   NaN      Reg   \n1190  1191         190       RL          NaN    32463   Pave   NaN      Reg   \n1298  1299          60       RL        313.0    63887   Pave   NaN      IR3   \n\n     LandContour Utilities  ... PoolArea PoolQC Fence MiscFeature MiscVal  \\\n581          Lvl    AllPub  ...        0    NaN   NaN         NaN       0   \n825          Lvl    AllPub  ...        0    NaN   NaN         NaN       0   \n1061         Low    AllPub  ...        0    NaN   NaN        Shed     560   \n1190         Low    AllPub  ...        0    NaN   NaN         NaN       0   \n1298         Bnk    AllPub  ...      480     Gd   NaN         NaN       0   \n\n     MoSold YrSold  SaleType  SaleCondition  SalePrice  \n581       8   2009       New        Partial     253293  \n825       6   2008       New        Partial     385000  \n1061      8   2008     ConLD         Normal      81000  \n1190      3   2007        WD         Normal     168000  \n1298      1   2008       New        Partial     160000  \n\n[5 rows x 81 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Id</th>\n      <th>MSSubClass</th>\n      <th>MSZoning</th>\n      <th>LotFrontage</th>\n      <th>LotArea</th>\n      <th>Street</th>\n      <th>Alley</th>\n      <th>LotShape</th>\n      <th>LandContour</th>\n      <th>Utilities</th>\n      <th>...</th>\n      <th>PoolArea</th>\n      <th>PoolQC</th>\n      <th>Fence</th>\n      <th>MiscFeature</th>\n      <th>MiscVal</th>\n      <th>MoSold</th>\n      <th>YrSold</th>\n      <th>SaleType</th>\n      <th>SaleCondition</th>\n      <th>SalePrice</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>581</th>\n      <td>582</td>\n      <td>20</td>\n      <td>RL</td>\n      <td>98.0</td>\n      <td>12704</td>\n      <td>Pave</td>\n      <td>NaN</td>\n      <td>Reg</td>\n      <td>Lvl</td>\n      <td>AllPub</td>\n      <td>...</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>8</td>\n      <td>2009</td>\n      <td>New</td>\n      <td>Partial</td>\n      <td>253293</td>\n    </tr>\n    <tr>\n      <th>825</th>\n      <td>826</td>\n      <td>20</td>\n      <td>RL</td>\n      <td>114.0</td>\n      <td>14803</td>\n      <td>Pave</td>\n      <td>NaN</td>\n      <td>Reg</td>\n      <td>Lvl</td>\n      <td>AllPub</td>\n      <td>...</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>6</td>\n      <td>2008</td>\n      <td>New</td>\n      <td>Partial</td>\n      <td>385000</td>\n    </tr>\n    <tr>\n      <th>1061</th>\n      <td>1062</td>\n      <td>30</td>\n      <td>C (all)</td>\n      <td>120.0</td>\n      <td>18000</td>\n      <td>Grvl</td>\n      <td>NaN</td>\n      <td>Reg</td>\n      <td>Low</td>\n      <td>AllPub</td>\n      <td>...</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Shed</td>\n      <td>560</td>\n      <td>8</td>\n      <td>2008</td>\n      <td>ConLD</td>\n      <td>Normal</td>\n      <td>81000</td>\n    </tr>\n    <tr>\n      <th>1190</th>\n      <td>1191</td>\n      <td>190</td>\n      <td>RL</td>\n      <td>NaN</td>\n      <td>32463</td>\n      <td>Pave</td>\n      <td>NaN</td>\n      <td>Reg</td>\n      <td>Low</td>\n      <td>AllPub</td>\n      <td>...</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>3</td>\n      <td>2007</td>\n      <td>WD</td>\n      <td>Normal</td>\n      <td>168000</td>\n    </tr>\n    <tr>\n      <th>1298</th>\n      <td>1299</td>\n      <td>60</td>\n      <td>RL</td>\n      <td>313.0</td>\n      <td>63887</td>\n      <td>Pave</td>\n      <td>NaN</td>\n      <td>IR3</td>\n      <td>Bnk</td>\n      <td>AllPub</td>\n      <td>...</td>\n      <td>480</td>\n      <td>Gd</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>1</td>\n      <td>2008</td>\n      <td>New</td>\n      <td>Partial</td>\n      <td>160000</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows √ó 81 columns</p>\n</div>"},"metadata":{}}],"execution_count":58},{"cell_type":"code","source":"plt.scatter(x='WoodDeckSF',y='SalePrice', data=train_df)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:38.967899Z","iopub.execute_input":"2025-03-19T06:17:38.968834Z","iopub.status.idle":"2025-03-19T06:17:39.178173Z","shell.execute_reply.started":"2025-03-19T06:17:38.968795Z","shell.execute_reply":"2025-03-19T06:17:39.176990Z"}},"outputs":[{"execution_count":59,"output_type":"execute_result","data":{"text/plain":"<matplotlib.collections.PathCollection at 0x7ea04cf78310>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":"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"},"metadata":{}}],"execution_count":59},{"cell_type":"code","source":"plt.scatter(x='OpenPorchSF',y='SalePrice', data=train_df)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:39.179773Z","iopub.execute_input":"2025-03-19T06:17:39.180136Z","iopub.status.idle":"2025-03-19T06:17:39.459897Z","shell.execute_reply.started":"2025-03-19T06:17:39.180102Z","shell.execute_reply":"2025-03-19T06:17:39.458677Z"}},"outputs":[{"execution_count":60,"output_type":"execute_result","data":{"text/plain":"<matplotlib.collections.PathCollection at 0x7ea04ce28c40>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}],"execution_count":60},{"cell_type":"code","source":"train_df.query('OpenPorchSF > 500')\n#496","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:39.461331Z","iopub.execute_input":"2025-03-19T06:17:39.461706Z","iopub.status.idle":"2025-03-19T06:17:39.498422Z","shell.execute_reply.started":"2025-03-19T06:17:39.461672Z","shell.execute_reply":"2025-03-19T06:17:39.497291Z"}},"outputs":[{"execution_count":61,"output_type":"execute_result","data":{"text/plain":"        Id  MSSubClass MSZoning  LotFrontage  LotArea Street Alley LotShape  \\\n495    496          30  C (all)         60.0     7879   Pave   NaN      Reg   \n583    584          75       RM         75.0    13500   Pave   NaN      Reg   \n1328  1329          50       RM         60.0    10440   Pave  Grvl      Reg   \n\n     LandContour Utilities  ... PoolArea PoolQC  Fence MiscFeature MiscVal  \\\n495          Lvl    AllPub  ...        0    NaN   GdWo         NaN       0   \n583          Lvl    AllPub  ...        0    NaN    NaN         NaN       0   \n1328         Lvl    AllPub  ...        0    NaN  MnPrv        Shed    1150   \n\n     MoSold YrSold  SaleType  SaleCondition  SalePrice  \n495      11   2009        WD        Abnorml      34900  \n583       7   2008        WD         Normal     325000  \n1328      6   2008        WD         Normal     256000  \n\n[3 rows x 81 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Id</th>\n      <th>MSSubClass</th>\n      <th>MSZoning</th>\n      <th>LotFrontage</th>\n      <th>LotArea</th>\n      <th>Street</th>\n      <th>Alley</th>\n      <th>LotShape</th>\n      <th>LandContour</th>\n      <th>Utilities</th>\n      <th>...</th>\n      <th>PoolArea</th>\n      <th>PoolQC</th>\n      <th>Fence</th>\n      <th>MiscFeature</th>\n      <th>MiscVal</th>\n      <th>MoSold</th>\n      <th>YrSold</th>\n      <th>SaleType</th>\n      <th>SaleCondition</th>\n      <th>SalePrice</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>495</th>\n      <td>496</td>\n      <td>30</td>\n      <td>C (all)</td>\n      <td>60.0</td>\n      <td>7879</td>\n      <td>Pave</td>\n      <td>NaN</td>\n      <td>Reg</td>\n      <td>Lvl</td>\n      <td>AllPub</td>\n      <td>...</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>GdWo</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>11</td>\n      <td>2009</td>\n      <td>WD</td>\n      <td>Abnorml</td>\n      <td>34900</td>\n    </tr>\n    <tr>\n      <th>583</th>\n      <td>584</td>\n      <td>75</td>\n      <td>RM</td>\n      <td>75.0</td>\n      <td>13500</td>\n      <td>Pave</td>\n      <td>NaN</td>\n      <td>Reg</td>\n      <td>Lvl</td>\n      <td>AllPub</td>\n      <td>...</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>7</td>\n      <td>2008</td>\n      <td>WD</td>\n      <td>Normal</td>\n      <td>325000</td>\n    </tr>\n    <tr>\n      <th>1328</th>\n      <td>1329</td>\n      <td>50</td>\n      <td>RM</td>\n      <td>60.0</td>\n      <td>10440</td>\n      <td>Pave</td>\n      <td>Grvl</td>\n      <td>Reg</td>\n      <td>Lvl</td>\n      <td>AllPub</td>\n      <td>...</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>MnPrv</td>\n      <td>Shed</td>\n      <td>1150</td>\n      <td>6</td>\n      <td>2008</td>\n      <td>WD</td>\n      <td>Normal</td>\n      <td>256000</td>\n    </tr>\n  </tbody>\n</table>\n<p>3 rows √ó 81 columns</p>\n</div>"},"metadata":{}}],"execution_count":61},{"cell_type":"code","source":"plt.scatter(x='EnclosedPorch',y='SalePrice', data=train_df)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:39.500075Z","iopub.execute_input":"2025-03-19T06:17:39.500551Z","iopub.status.idle":"2025-03-19T06:17:39.778718Z","shell.execute_reply.started":"2025-03-19T06:17:39.500503Z","shell.execute_reply":"2025-03-19T06:17:39.777472Z"}},"outputs":[{"execution_count":62,"output_type":"execute_result","data":{"text/plain":"<matplotlib.collections.PathCollection at 0x7ea04cfe3760>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}],"execution_count":62},{"cell_type":"code","source":"train_df.query('EnclosedPorch > 500')\n#198","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:39.780326Z","iopub.execute_input":"2025-03-19T06:17:39.780686Z","iopub.status.idle":"2025-03-19T06:17:39.815151Z","shell.execute_reply.started":"2025-03-19T06:17:39.780652Z","shell.execute_reply":"2025-03-19T06:17:39.813908Z"}},"outputs":[{"execution_count":63,"output_type":"execute_result","data":{"text/plain":"      Id  MSSubClass MSZoning  LotFrontage  LotArea Street Alley LotShape  \\\n197  198          75       RL        174.0    25419   Pave   NaN      Reg   \n\n    LandContour Utilities  ... PoolArea PoolQC  Fence MiscFeature MiscVal  \\\n197         Lvl    AllPub  ...      512     Ex  GdPrv         NaN       0   \n\n    MoSold YrSold  SaleType  SaleCondition  SalePrice  \n197      3   2006        WD        Abnorml     235000  \n\n[1 rows x 81 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Id</th>\n      <th>MSSubClass</th>\n      <th>MSZoning</th>\n      <th>LotFrontage</th>\n      <th>LotArea</th>\n      <th>Street</th>\n      <th>Alley</th>\n      <th>LotShape</th>\n      <th>LandContour</th>\n      <th>Utilities</th>\n      <th>...</th>\n      <th>PoolArea</th>\n      <th>PoolQC</th>\n      <th>Fence</th>\n      <th>MiscFeature</th>\n      <th>MiscVal</th>\n      <th>MoSold</th>\n      <th>YrSold</th>\n      <th>SaleType</th>\n      <th>SaleCondition</th>\n      <th>SalePrice</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>197</th>\n      <td>198</td>\n      <td>75</td>\n      <td>RL</td>\n      <td>174.0</td>\n      <td>25419</td>\n      <td>Pave</td>\n      <td>NaN</td>\n      <td>Reg</td>\n      <td>Lvl</td>\n      <td>AllPub</td>\n      <td>...</td>\n      <td>512</td>\n      <td>Ex</td>\n      <td>GdPrv</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>3</td>\n      <td>2006</td>\n      <td>WD</td>\n      <td>Abnorml</td>\n      <td>235000</td>\n    </tr>\n  </tbody>\n</table>\n<p>1 rows √ó 81 columns</p>\n</div>"},"metadata":{}}],"execution_count":63},{"cell_type":"code","source":"plt.scatter(x='3SsnPorch',y='SalePrice', data=train_df)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:39.816768Z","iopub.execute_input":"2025-03-19T06:17:39.817218Z","iopub.status.idle":"2025-03-19T06:17:40.100143Z","shell.execute_reply.started":"2025-03-19T06:17:39.817170Z","shell.execute_reply":"2025-03-19T06:17:40.098975Z"}},"outputs":[{"execution_count":64,"output_type":"execute_result","data":{"text/plain":"<matplotlib.collections.PathCollection at 0x7ea04cd10580>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}],"execution_count":64},{"cell_type":"code","source":"plt.scatter(x='ScreenPorch',y='SalePrice', data=train_df)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:40.101559Z","iopub.execute_input":"2025-03-19T06:17:40.102037Z","iopub.status.idle":"2025-03-19T06:17:40.384106Z","shell.execute_reply.started":"2025-03-19T06:17:40.101998Z","shell.execute_reply":"2025-03-19T06:17:40.382753Z"}},"outputs":[{"execution_count":65,"output_type":"execute_result","data":{"text/plain":"<matplotlib.collections.PathCollection at 0x7ea04cdb1210>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}],"execution_count":65},{"cell_type":"code","source":"plt.scatter(x='PoolArea',y='SalePrice', data=train_df)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:40.385945Z","iopub.execute_input":"2025-03-19T06:17:40.386424Z","iopub.status.idle":"2025-03-19T06:17:40.620811Z","shell.execute_reply.started":"2025-03-19T06:17:40.386375Z","shell.execute_reply":"2025-03-19T06:17:40.619502Z"}},"outputs":[{"execution_count":66,"output_type":"execute_result","data":{"text/plain":"<matplotlib.collections.PathCollection at 0x7ea04cd4c8b0>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}],"execution_count":66},{"cell_type":"markdown","source":"## Removing outliers we found ","metadata":{}},{"cell_type":"code","source":"values = ([598,955,935,1299,250,314,336,707,379,1183,692,186,441,186,524,739,598,955,636,1062,1191,49,496,198])","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:40.622378Z","iopub.execute_input":"2025-03-19T06:17:40.622768Z","iopub.status.idle":"2025-03-19T06:17:40.628807Z","shell.execute_reply.started":"2025-03-19T06:17:40.622732Z","shell.execute_reply":"2025-03-19T06:17:40.627522Z"}},"outputs":[],"execution_count":67},{"cell_type":"code","source":"\ntrain_df = train_df[train_df.Id.isin(values) == False]","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:40.630132Z","iopub.execute_input":"2025-03-19T06:17:40.630481Z","iopub.status.idle":"2025-03-19T06:17:40.653035Z","shell.execute_reply.started":"2025-03-19T06:17:40.630417Z","shell.execute_reply":"2025-03-19T06:17:40.651971Z"}},"outputs":[],"execution_count":68},{"cell_type":"markdown","source":"## Identifies the TOP 20 columns in train.df with the most missing values. ","metadata":{}},{"cell_type":"code","source":"# identifies the top 20 columns in train_df with the most missing values\n\npd.DataFrame(train_df.isnull().sum().sort_values(ascending=False)).head(20)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:40.654462Z","iopub.execute_input":"2025-03-19T06:17:40.654842Z","iopub.status.idle":"2025-03-19T06:17:40.691578Z","shell.execute_reply.started":"2025-03-19T06:17:40.654807Z","shell.execute_reply":"2025-03-19T06:17:40.690467Z"}},"outputs":[{"execution_count":69,"output_type":"execute_result","data":{"text/plain":"                 0\nPoolQC        1435\nMiscFeature   1388\nAlley         1349\nFence         1162\nMasVnrType     861\nFireplaceQu    684\nLotFrontage    255\nGarageYrBlt     76\nGarageCond      76\nGarageType      76\nGarageFinish    76\nGarageQual      76\nBsmtFinType2    38\nBsmtExposure    38\nBsmtQual        37\nBsmtCond        37\nBsmtFinType1    37\nMasVnrArea       8\nElectrical       1\nId               0","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>0</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>PoolQC</th>\n      <td>1435</td>\n    </tr>\n    <tr>\n      <th>MiscFeature</th>\n      <td>1388</td>\n    </tr>\n    <tr>\n      <th>Alley</th>\n      <td>1349</td>\n    </tr>\n    <tr>\n      <th>Fence</th>\n      <td>1162</td>\n    </tr>\n    <tr>\n      <th>MasVnrType</th>\n      <td>861</td>\n    </tr>\n    <tr>\n      <th>FireplaceQu</th>\n      <td>684</td>\n    </tr>\n    <tr>\n      <th>LotFrontage</th>\n      <td>255</td>\n    </tr>\n    <tr>\n      <th>GarageYrBlt</th>\n      <td>76</td>\n    </tr>\n    <tr>\n      <th>GarageCond</th>\n      <td>76</td>\n    </tr>\n    <tr>\n      <th>GarageType</th>\n      <td>76</td>\n    </tr>\n    <tr>\n      <th>GarageFinish</th>\n      <td>76</td>\n    </tr>\n    <tr>\n      <th>GarageQual</th>\n      <td>76</td>\n    </tr>\n    <tr>\n      <th>BsmtFinType2</th>\n      <td>38</td>\n    </tr>\n    <tr>\n      <th>BsmtExposure</th>\n      <td>38</td>\n    </tr>\n    <tr>\n      <th>BsmtQual</th>\n      <td>37</td>\n    </tr>\n    <tr>\n      <th>BsmtCond</th>\n      <td>37</td>\n    </tr>\n    <tr>\n      <th>BsmtFinType1</th>\n      <td>37</td>\n    </tr>\n    <tr>\n      <th>MasVnrArea</th>\n      <td>8</td>\n    </tr>\n    <tr>\n      <th>Electrical</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>Id</th>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":69},{"cell_type":"code","source":"train_df['MiscFeature'].unique()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:40.693016Z","iopub.execute_input":"2025-03-19T06:17:40.693556Z","iopub.status.idle":"2025-03-19T06:17:40.705732Z","shell.execute_reply.started":"2025-03-19T06:17:40.693506Z","shell.execute_reply":"2025-03-19T06:17:40.704533Z"}},"outputs":[{"execution_count":70,"output_type":"execute_result","data":{"text/plain":"array([nan, 'Shed', 'Gar2', 'Othr', 'TenC'], dtype=object)"},"metadata":{}}],"execution_count":70},{"cell_type":"code","source":"train_df['Alley'].unique()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:40.707736Z","iopub.execute_input":"2025-03-19T06:17:40.708219Z","iopub.status.idle":"2025-03-19T06:17:40.719970Z","shell.execute_reply.started":"2025-03-19T06:17:40.708170Z","shell.execute_reply":"2025-03-19T06:17:40.718822Z"}},"outputs":[{"execution_count":71,"output_type":"execute_result","data":{"text/plain":"array([nan, 'Grvl', 'Pave'], dtype=object)"},"metadata":{}}],"execution_count":71},{"cell_type":"code","source":"train_df['Alley'].fillna('No', inplace=True)\ntest_df['Alley'].fillna('No', inplace=True)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:40.721374Z","iopub.execute_input":"2025-03-19T06:17:40.721796Z","iopub.status.idle":"2025-03-19T06:17:40.736246Z","shell.execute_reply.started":"2025-03-19T06:17:40.721763Z","shell.execute_reply":"2025-03-19T06:17:40.734961Z"}},"outputs":[{"name":"stderr","text":"/tmp/ipykernel_1311/2277165759.py:1: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\nThe behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n\nFor example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n\n\n  train_df['Alley'].fillna('No', inplace=True)\n/tmp/ipykernel_1311/2277165759.py:2: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\nThe behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n\nFor example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n\n\n  test_df['Alley'].fillna('No', inplace=True)\n","output_type":"stream"}],"execution_count":72},{"cell_type":"code","source":"sns.catplot(data=train_df, x=\"Alley\", y=\"SalePrice\", kind=\"box\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:40.738347Z","iopub.execute_input":"2025-03-19T06:17:40.738741Z","iopub.status.idle":"2025-03-19T06:17:41.087804Z","shell.execute_reply.started":"2025-03-19T06:17:40.738708Z","shell.execute_reply":"2025-03-19T06:17:41.086678Z"}},"outputs":[{"execution_count":73,"output_type":"execute_result","data":{"text/plain":"<seaborn.axisgrid.FacetGrid at 0x7ea04fe44b80>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 500x500 with 1 Axes>","image/png":""},"metadata":{}}],"execution_count":73},{"cell_type":"code","source":"train_df['MasVnrType'].unique()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:41.089261Z","iopub.execute_input":"2025-03-19T06:17:41.089705Z","iopub.status.idle":"2025-03-19T06:17:41.097242Z","shell.execute_reply.started":"2025-03-19T06:17:41.089655Z","shell.execute_reply":"2025-03-19T06:17:41.095969Z"}},"outputs":[{"execution_count":74,"output_type":"execute_result","data":{"text/plain":"array(['BrkFace', nan, 'Stone', 'BrkCmn'], dtype=object)"},"metadata":{}}],"execution_count":74},{"cell_type":"code","source":"train_df['MasVnrType'].fillna('No', inplace=True)\ntest_df['MasVnrType'].fillna('No', inplace=True)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:41.098853Z","iopub.execute_input":"2025-03-19T06:17:41.099301Z","iopub.status.idle":"2025-03-19T06:17:41.113888Z","shell.execute_reply.started":"2025-03-19T06:17:41.099255Z","shell.execute_reply":"2025-03-19T06:17:41.112577Z"}},"outputs":[{"name":"stderr","text":"/tmp/ipykernel_1311/2175816292.py:1: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\nThe behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n\nFor example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n\n\n  train_df['MasVnrType'].fillna('No', inplace=True)\n/tmp/ipykernel_1311/2175816292.py:2: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\nThe behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n\nFor example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n\n\n  test_df['MasVnrType'].fillna('No', inplace=True)\n","output_type":"stream"}],"execution_count":75},{"cell_type":"code","source":"sns.catplot(data=train_df, x=\"MasVnrType\", y=\"SalePrice\", kind=\"box\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:41.115287Z","iopub.execute_input":"2025-03-19T06:17:41.115733Z","iopub.status.idle":"2025-03-19T06:17:41.484841Z","shell.execute_reply.started":"2025-03-19T06:17:41.115670Z","shell.execute_reply":"2025-03-19T06:17:41.483779Z"}},"outputs":[{"execution_count":76,"output_type":"execute_result","data":{"text/plain":"<seaborn.axisgrid.FacetGrid at 0x7ea04cb87160>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 500x500 with 1 Axes>","image/png":""},"metadata":{}}],"execution_count":76},{"cell_type":"code","source":"train_df['MasVnrArea'].fillna(0, inplace=True)\ntest_df['MasVnrArea'].fillna(0, inplace=True)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:41.486290Z","iopub.execute_input":"2025-03-19T06:17:41.486783Z","iopub.status.idle":"2025-03-19T06:17:41.494038Z","shell.execute_reply.started":"2025-03-19T06:17:41.486731Z","shell.execute_reply":"2025-03-19T06:17:41.492895Z"}},"outputs":[{"name":"stderr","text":"/tmp/ipykernel_1311/3657060107.py:1: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\nThe behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n\nFor example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n\n\n  train_df['MasVnrArea'].fillna(0, inplace=True)\n/tmp/ipykernel_1311/3657060107.py:2: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\nThe behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n\nFor example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n\n\n  test_df['MasVnrArea'].fillna(0, inplace=True)\n","output_type":"stream"}],"execution_count":77},{"cell_type":"code","source":"train_df['FireplaceQu'].unique()\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:41.495553Z","iopub.execute_input":"2025-03-19T06:17:41.496044Z","iopub.status.idle":"2025-03-19T06:17:41.512236Z","shell.execute_reply.started":"2025-03-19T06:17:41.495987Z","shell.execute_reply":"2025-03-19T06:17:41.511137Z"}},"outputs":[{"execution_count":78,"output_type":"execute_result","data":{"text/plain":"array([nan, 'TA', 'Gd', 'Fa', 'Ex', 'Po'], dtype=object)"},"metadata":{}}],"execution_count":78},{"cell_type":"code","source":"train_df['FireplaceQu'].fillna(0, inplace=True)\ntest_df['FireplaceQu'].fillna(0, inplace=True)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:41.513620Z","iopub.execute_input":"2025-03-19T06:17:41.513972Z","iopub.status.idle":"2025-03-19T06:17:41.529360Z","shell.execute_reply.started":"2025-03-19T06:17:41.513940Z","shell.execute_reply":"2025-03-19T06:17:41.528226Z"}},"outputs":[{"name":"stderr","text":"/tmp/ipykernel_1311/2073847469.py:1: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\nThe behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n\nFor example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n\n\n  train_df['FireplaceQu'].fillna(0, inplace=True)\n/tmp/ipykernel_1311/2073847469.py:2: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\nThe behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n\nFor example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n\n\n  test_df['FireplaceQu'].fillna(0, inplace=True)\n","output_type":"stream"}],"execution_count":79},{"cell_type":"code","source":"sns.catplot(data=train_df, x=\"FireplaceQu\", y=\"SalePrice\", kind=\"box\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:41.531194Z","iopub.execute_input":"2025-03-19T06:17:41.531506Z","iopub.status.idle":"2025-03-19T06:17:41.936996Z","shell.execute_reply.started":"2025-03-19T06:17:41.531478Z","shell.execute_reply":"2025-03-19T06:17:41.935722Z"}},"outputs":[{"execution_count":80,"output_type":"execute_result","data":{"text/plain":"<seaborn.axisgrid.FacetGrid at 0x7ea04cba32e0>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 500x500 with 1 Axes>","image/png":"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"},"metadata":{}}],"execution_count":80},{"cell_type":"code","source":"sns.catplot(data=train_df, x=\"Fireplaces\", y=\"SalePrice\", kind=\"box\")\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:41.938764Z","iopub.execute_input":"2025-03-19T06:17:41.939249Z","iopub.status.idle":"2025-03-19T06:17:42.314219Z","shell.execute_reply.started":"2025-03-19T06:17:41.939199Z","shell.execute_reply":"2025-03-19T06:17:42.312958Z"}},"outputs":[{"execution_count":81,"output_type":"execute_result","data":{"text/plain":"<seaborn.axisgrid.FacetGrid at 0x7ea04ca236d0>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 500x500 with 1 Axes>","image/png":""},"metadata":{}}],"execution_count":81},{"cell_type":"code","source":"train_df['LotFrontage'].fillna(0, inplace=True)\ntest_df['LotFrontage'].fillna(0, inplace=True)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:42.327072Z","iopub.execute_input":"2025-03-19T06:17:42.327497Z","iopub.status.idle":"2025-03-19T06:17:42.335332Z","shell.execute_reply.started":"2025-03-19T06:17:42.327458Z","shell.execute_reply":"2025-03-19T06:17:42.333970Z"}},"outputs":[{"name":"stderr","text":"/tmp/ipykernel_1311/3291190399.py:1: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\nThe behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n\nFor example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n\n\n  train_df['LotFrontage'].fillna(0, inplace=True)\n/tmp/ipykernel_1311/3291190399.py:2: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\nThe behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n\nFor example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n\n\n  test_df['LotFrontage'].fillna(0, inplace=True)\n","output_type":"stream"}],"execution_count":82},{"cell_type":"code","source":"train_df['GarageYrBlt'].corr(train_df['YearBuilt'])","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:42.336550Z","iopub.execute_input":"2025-03-19T06:17:42.336909Z","iopub.status.idle":"2025-03-19T06:17:42.360301Z","shell.execute_reply.started":"2025-03-19T06:17:42.336876Z","shell.execute_reply":"2025-03-19T06:17:42.359122Z"}},"outputs":[{"execution_count":83,"output_type":"execute_result","data":{"text/plain":"0.8289827595060575"},"metadata":{}}],"execution_count":83},{"cell_type":"code","source":"train_df['GarageCond'].unique()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:42.362280Z","iopub.execute_input":"2025-03-19T06:17:42.362678Z","iopub.status.idle":"2025-03-19T06:17:42.376128Z","shell.execute_reply.started":"2025-03-19T06:17:42.362643Z","shell.execute_reply":"2025-03-19T06:17:42.374837Z"}},"outputs":[{"execution_count":84,"output_type":"execute_result","data":{"text/plain":"array(['TA', 'Fa', nan, 'Gd', 'Po', 'Ex'], dtype=object)"},"metadata":{}}],"execution_count":84},{"cell_type":"code","source":"train_df['GarageCond'].fillna('No', inplace=True)\ntest_df['GarageCond'].fillna('No', inplace=True)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:42.377551Z","iopub.execute_input":"2025-03-19T06:17:42.377904Z","iopub.status.idle":"2025-03-19T06:17:42.395190Z","shell.execute_reply.started":"2025-03-19T06:17:42.377872Z","shell.execute_reply":"2025-03-19T06:17:42.393909Z"}},"outputs":[{"name":"stderr","text":"/tmp/ipykernel_1311/1255948083.py:1: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\nThe behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n\nFor example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n\n\n  train_df['GarageCond'].fillna('No', inplace=True)\n/tmp/ipykernel_1311/1255948083.py:2: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\nThe behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n\nFor example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n\n\n  test_df['GarageCond'].fillna('No', inplace=True)\n","output_type":"stream"}],"execution_count":85},{"cell_type":"code","source":"sns.catplot(data=train_df, x=\"GarageCond\", y=\"SalePrice\", kind=\"box\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:42.396942Z","iopub.execute_input":"2025-03-19T06:17:42.397489Z","iopub.status.idle":"2025-03-19T06:17:42.799942Z","shell.execute_reply.started":"2025-03-19T06:17:42.397371Z","shell.execute_reply":"2025-03-19T06:17:42.798829Z"}},"outputs":[{"execution_count":86,"output_type":"execute_result","data":{"text/plain":"<seaborn.axisgrid.FacetGrid at 0x7ea04da51c30>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 500x500 with 1 Axes>","image/png":"iVBORw0KGgoAAAANSUhEUgAAAekAAAHpCAYAAACmzsSXAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuNSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/xnp5ZAAAACXBIWXMAAA9hAAAPYQGoP6dpAABLIElEQVR4nO3de1hU1f4/8PcwMDNcnEFBQQVR01S85gXlS1qeqPFyvmkX8zIYltnJqBRMy98p7XKKssh7+jVLvFCWlZVmGunJElERQ82Q9IQoGZgoM6hch/X7o8OOSZDhNnsz8349zzwPs9eaPZ8ZZd7sPWuvpRJCCBAREZHiuMldABEREdWMIU1ERKRQDGkiIiKFYkgTEREpFEOaiIhIoRjSRERECsWQJiIiUiiGtAMJIWCxWMBL04mIyB4MaQcqKiqCwWBAUVGR3KUQEVELwJAmIiJSKIY0ERGRQjGkiYiIFIohTUREpFAMaSIiIoViSBMRESkUQ5qIiEihGNJEREQKxZAmIiJSKIY0ERGRQjGkiYiIFIohTUREpFAMaSIiIoViSLuQlJQUTJgwASkpKXKXQkREdmBIu4iSkhIkJCQgPz8fCQkJKCkpkbskIiKqA0PaRWzatAkFBQUAgIKCAiQlJclcERER1YUh7QJyc3ORlJQEIQQAQAiBpKQk5ObmylwZERHdCEPayQkhsHjx4lq3VwU3EREpD0PayeXk5CAtLQ1Wq9Vmu9VqRVpaGnJycmSqjIiI6sKQdnIhISEYMmQI1Gq1zXa1Wo2wsDCEhITIVBkREdWFIe3kVCoVYmNja92uUqlkqIqIiOzBkHYBQUFBMJlMUiCrVCqYTCZ07NhR5sqIiOhGGNIuIioqCq1atQIA6PV6mEwmmSsiIqK6MKRdSNVI7srKSpkrISIiezCkXcSmTZtw5coVAMCVK1c4mQkRUQvAkHYBnMyEiKhlYkg7OU5mQkTUcjGknRwnMyEiarkY0k6Ok5kQEbVcDGknx8lMiIhaLoa0C+BkJkRELZPsIf3rr78iKioKfn5+8PT0RN++fXH48GGpXQiBBQsWoH379vD09ERkZCROnTpls49Lly7BZDJBr9fD19cX06dPly43qnLs2DEMHz4cOp0OwcHBWLRo0XW1bNmyBT179oROp0Pfvn2xY8cOm3Z7alGqqvcYAPz9/TmZCRFRCyBrSF++fBkRERHw8PDAV199hZ9++gkJCQlo3bq11GfRokVYtmwZVq9ejYMHD8Lb2xtGoxElJSVSH5PJhBMnTiA5ORnbt2/Hd999h0cffVRqt1gsuOuuuxASEoL09HS88cYbeOGFF7BmzRqpz/79+zF58mRMnz4dP/zwA8aPH4/x48fjxx9/rFctSqXT6TBnzhwEBAQgLi4OOp1O7pKIiKguQkbPPPOMuPXWW2ttr6ysFIGBgeKNN96QthUWFgqtVis++OADIYQQP/30kwAg0tLSpD5fffWVUKlU4tdffxVCCPH222+L1q1bi9LSUpvn7tGjh3T/gQceEGPHjrV5/qFDh4p//OMfdtdSF7PZLAAIs9lsV38iInJtsh5Jf/HFFxg8eDAmTJiAdu3a4ZZbbsE777wjtWdnZyMvLw+RkZHSNoPBgKFDhyI1NRUAkJqaCl9fXwwePFjqExkZCTc3Nxw8eFDqM2LECGg0GqmP0WhEVlYWLl++LPWp/jxVfaqex55a/qq0tBQWi8XmRkREZC9ZQ/qXX37BqlWr0L17d+zatQszZ87EU089hfXr1wMA8vLyAAABAQE2jwsICJDa8vLy0K5dO5t2d3d3tGnTxqZPTfuo/hy19aneXlctfxUfHw+DwSDdgoOD63pLiIiIJLKGdGVlJQYOHIhXX30Vt9xyCx599FHMmDEDq1evlrOsJjN//nyYzWbpdu7cOblLIiKiFkTWkG7fvj1CQ0NttvXq1Qtnz54FAAQGBgIA8vPzbfrk5+dLbYGBgbhw4YJNe0VFBS5dumTTp6Z9VH+O2vpUb6+rlr/SarXQ6/U2NyIiInvJGtIRERHIysqy2fbzzz9Ls2B16dIFgYGB2L17t9RusVhw8OBBhIeHAwDCw8NRWFiI9PR0qc+ePXtQWVmJoUOHSn2+++47lJeXS32Sk5PRo0cPaSR5eHi4zfNU9al6HntqISIialJyjlo7dOiQcHd3F6+88oo4deqUSEpKEl5eXmLTpk1Sn9dee034+vqKzz//XBw7dkyMGzdOdOnSRRQXF0t9Ro0aJW655RZx8OBBsW/fPtG9e3cxefJkqb2wsFAEBASIqVOnih9//FFs3rxZeHl5if/7v/+T+qSkpAh3d3fx5ptviszMTLFw4ULh4eEhjh8/Xq9aboSju4mIqD5kDWkhhNi2bZvo06eP0Gq1omfPnmLNmjU27ZWVleL5558XAQEBQqvVijvuuENkZWXZ9CkoKBCTJ08WPj4+Qq/Xi4ceekgUFRXZ9Dl69Ki49dZbhVarFR07dhSvvfbadbV89NFH4uabbxYajUb07t1bfPnll/Wu5UYY0kREVB8qIbhWoaNYLBYYDAaYzWZZvp9OSUnBkiVLMHv2bERERDj8+YmIqH5knxaUHKOkpAQJCQnIz89HQkJCi5gljYjI1TGkXcSmTZtQUFAAACgoKEBSUpLMFRERUV0Y0i4gNzcXSUlJqPpmQwiBpKQk5ObmylwZERHdCEPayQkhsHjx4lq3c0gCEZFyMaSdXE5ODtLS0mC1Wm22W61WpKWlIScnR6bKiIioLgxpJxcSEoIhQ4ZArVbbbFer1QgLC5MmjiEiIuVhSDs5lUqF2NjYWrerVCoZqiIiInswpF1AUFAQTCaTFMgqlQomkwkdO3aUuTIiIroRhrSLiIqKgp+fHwDA398fJpNJ5oqIiKguDGkXodPpMGfOHAQEBCAuLg46nU7ukoiIqA6cFtSB5J4WlIiIWhYeSRMRESkUQ5qIiEihGNJEREQKxZAmIiJSKIY0ERGRQjGkXUhKSgomTJiAlJQUuUshIiI7MKRdRElJCRISEpCfn4+EhASUlJTIXRIREdWBIe0iNm3ahIKCAgBAQUEBkpKSZK6IiIjqwpB2Abm5uUhKSpLWjhZCICkpCbm5uTJXRkREN8KQdnJCCCxevLjW7ZxwjohIuRjSTi4nJwdpaWmwWq02261WK9LS0pCTkyNTZUREVBeGtJMLCQnBkCFDoFarbbar1WqEhYUhJCREpsqIiKguDGknp1KpEBsbW+v2qjWmiYhIeRjSLiAoKAgmk0kKZJVKBZPJhI4dO8pcGRER3QhD2kVERUXBz88PAODv7w+TySRzRUREVBeGtIvQ6XSYM2cOAgICEBcXB51OJ3dJRERUB5XgNTgOY7FYYDAYYDabodfr5S6HiIgUjkfSRERECsWQdiFcYIOIqGVhSLsILrBBRNTyMKRdBBfYICJqeRjSLoALbBARtUwMaSfHBTaIiFouhrST4wIbREQtF0PayXGBDSKilosh7eS4wAYRUcvFkHYBXGCDiKhlYki7CC6wQUTU8jCkXQQX2CAianm4wIYDcYENIiKqDx5JExERKRRDmoiISKEY0kRERArFkCYiIlIohjQREZFCMaSJiIgUiiFNRESkUAxpIiIihWJIExERKRRDmoiISKEY0kRERArFkHYhKSkpmDBhAlJSUuQuhYiI7MCQdhElJSVISEhAfn4+EhISUFJSIndJRERUB4a0i9i0aRMKCgoAAAUFBUhKSpK5IiIiqousIf3CCy9ApVLZ3Hr27Cm1l5SUICYmBn5+fvDx8cF9992H/Px8m32cPXsWY8eOhZeXF9q1a4e5c+eioqLCps+3336LgQMHQqvVolu3bkhMTLyulpUrV6Jz587Q6XQYOnQoDh06ZNNuTy1KlZubi6SkJFStSiqEQFJSEnJzc2WujIiIbkT2I+nevXvjt99+k2779u2T2mJjY7Ft2zZs2bIFe/fuxfnz53HvvfdK7VarFWPHjkVZWRn279+P9evXIzExEQsWLJD6ZGdnY+zYsRg5ciQyMjIwe/ZsPPLII9i1a5fU58MPP0RcXBwWLlyII0eOoH///jAajbhw4YLdtSiVEAKLFy+udTuXEyciUjAho4ULF4r+/fvX2FZYWCg8PDzEli1bpG2ZmZkCgEhNTRVCCLFjxw7h5uYm8vLypD6rVq0Ser1elJaWCiGEmDdvnujdu7fNvidOnCiMRqN0PywsTMTExEj3rVar6NChg4iPj7e7FnuYzWYBQJjNZrsf01jZ2dli+PDhtd6ys7MdVgsREdWP7EfSp06dQocOHdC1a1eYTCacPXsWAJCeno7y8nJERkZKfXv27IlOnTohNTUVAJCamoq+ffsiICBA6mM0GmGxWHDixAmpT/V9VPWp2kdZWRnS09Nt+ri5uSEyMlLqY08tNSktLYXFYrG5OVpISAiGDBkCtVpts12tViMsLAwhISEOr4mIiOwja0gPHToUiYmJ2LlzJ1atWoXs7GwMHz4cRUVFyMvLg0ajga+vr81jAgICkJeXBwDIy8uzCeiq9qq2G/WxWCwoLi7GxYsXYbVaa+xTfR911VKT+Ph4GAwG6RYcHGzfG9OEVCoVYmNja92uUqkcXhMREdlH1pAePXo0JkyYgH79+sFoNGLHjh0oLCzERx99JGdZTWb+/Pkwm83S7dy5c7LUERQUBJPJJAWySqWCyWRCx44dZamHiIjsI/vp7up8fX1x88034/Tp0wgMDERZWRkKCwtt+uTn5yMwMBAAEBgYeN0I66r7dfXR6/Xw9PSEv78/1Gp1jX2q76OuWmqi1Wqh1+ttbnKJioqCn58fAMDf3x8mk0m2WoiIyD6KCukrV67gP//5D9q3b49BgwbBw8MDu3fvltqzsrJw9uxZhIeHAwDCw8Nx/Phxm1HYycnJ0Ov1CA0NlfpU30dVn6p9aDQaDBo0yKZPZWUldu/eLfWxpxal0+l0mDNnDgICAhAXFwedTid3SUREVBc5R63NmTNHfPvttyI7O1ukpKSIyMhI4e/vLy5cuCCEEOKxxx4TnTp1Env27BGHDx8W4eHhIjw8XHp8RUWF6NOnj7jrrrtERkaG2Llzp2jbtq2YP3++1OeXX34RXl5eYu7cuSIzM1OsXLlSqNVqsXPnTqnP5s2bhVarFYmJieKnn34Sjz76qPD19bUZNV5XLfaQY3R3dfv27RP333+/2LdvnyzPT0RE9SNrSE+cOFG0b99eaDQa0bFjRzFx4kRx+vRpqb24uFg8/vjjonXr1sLLy0vcc8894rfffrPZx5kzZ8To0aOFp6en8Pf3F3PmzBHl5eU2ff7973+LAQMGCI1GI7p27SrWrVt3XS3Lly8XnTp1EhqNRoSFhYkDBw7YtNtTS13kDOni4mJxzz33iOHDh4t77rlHFBcXO7wGIiKqH5UQnM3CUSwWCwwGA8xms8O/n167di02btwIIQRUKhUefPBBTJ8+3aE1EBFR/SjqO2lqHpwWlIioZWJIOznBaUGJiFoshrSTy8nJQVpaGqxWq812q9WKtLQ05OTkyFQZERHVhSHt5DgtKBFRy8WQdnKcFpSIqOViSLsATgtKRNQyMaRdBKcFJSJqeRjSLoLTghIRtTyczMSB5JzMhIiIWh4eSRMRESkUQ9qFpKSkYMKECUhJSZG7FCIisgNPdzuQnKe7S0pKcP/998NisUCv1+Pjjz/m99JERArHI2kXkZiYCIvFAuCPPxbWr18vc0VERFQXhrQLyM3NxQcffGCz7YMPPuACG0RECseQdnJCCLz22mvXLaRRWVlZ43YiIlIOhrSTO3PmDI4dO1Zj27Fjx3DmzBnHFkRERHZjSBMRESkUQ9rJde7cGX379q2xrV+/fujcubNjCyIiIrsxpJ2cSqXC/Pnzr1vtqrbtRESkHAxpFxAUFITJkyfbbJsyZQpXwSIiUjiGtIuYNGmSzVKVEydOlLkiIiKqC0PaRXz88cfS5VZCCHzyyScyV0RERHVhSLuA3NxcJCUl2WxLSkriZCZERArHkHZyQggsXry41u2czISISLkY0k4uJycHaWlpsFqtNtutVivS0tKQk5MjU2VERFQXhrSTCwkJwZAhQ2q8BCssLAwhISEyVUZERHVhSDs5lUqFyZMnX3daWwiByZMn8zppIiIFY0g7OSEEPvjggxqPpN9//31+J01EpGAMaSdX9Z10TUfS/E6aiEjZGNJOjt9JExG1XAxpJ8fvpImIWi6GtJMTQiAxMbHGtnXr1vE7aSIiBWNIO7kzZ87g2LFjNbYdO3YMZ86ccWxBRERkN4a0k6vrSJlH0kREysWQdnJ1fefM76SJiJSLIe3kOnfujH79+tXY1r9/f3Tu3NmxBRERkd0Y0k5OpVLh2WefrbHt2Wef5ZE0EZGCMaRdRE3XSfP7aCIiZWNIO7nalqTkUpVERMrHkHZyVdOC1oTTghIRKRtD2sl16tQJPj4+Nbb5+PigU6dODq6IiIjsxZB2cjk5Obhy5UqNbVeuXOGRNBGRgjGkiYiIFIohTUREpFAMaSfXuXNn9O3bt8a2fv36cTITIiIFY0g7OZVKhfnz59fYNn/+fE5mQkSkYAxpF8ZrpImIlI0h7eSqJi2pCSczISJSNoa0k+NkJkRELRdD2sl16tQJer2+xja9Xs/JTIiIFIwh7eTOnj0Li8VSY5vFYsHZs2cdXBEREdmLIe3keCRNRNRyMaSdHI+kiYhaLoa0kwsJCcGQIUNqbAsLC0NISIiDKyIiInsxpJ2cSqXC5MmTa2ybPHkyJzMhIlIwxYT0a6+9BpVKhdmzZ0vbSkpKEBMTAz8/P/j4+OC+++5Dfn6+zePOnj2LsWPHwsvLC+3atcPcuXNRUVFh0+fbb7/FwIEDodVq0a1bNyQmJl73/CtXrkTnzp2h0+kwdOhQHDp0yKbdnlqUSAiB1atX19i2atUqXidNRKRgigjptLQ0/N///R/69etnsz02Nhbbtm3Dli1bsHfvXpw/fx733nuv1G61WjF27FiUlZVh//79WL9+PRITE7FgwQKpT3Z2NsaOHYuRI0ciIyMDs2fPxiOPPIJdu3ZJfT788EPExcVh4cKFOHLkCPr37w+j0YgLFy7YXYtSZWdn4+eff66x7eeff0Z2draDKyIiIrsJmRUVFYnu3buL5ORkcdttt4lZs2YJIYQoLCwUHh4eYsuWLVLfzMxMAUCkpqYKIYTYsWOHcHNzE3l5eVKfVatWCb1eL0pLS4UQQsybN0/07t3b5jknTpwojEajdD8sLEzExMRI961Wq+jQoYOIj4+3u5aalJSUCLPZLN3OnTsnAAiz2Vzft6nB9u3bJ4YPH17rbd++fQ6rhYiI6kf2I+mYmBiMHTsWkZGRNtvT09NRXl5us71nz57o1KkTUlNTAQCpqano27cvAgICpD5GoxEWiwUnTpyQ+vx130ajUdpHWVkZ0tPTbfq4ubkhMjJS6mNPLTWJj4+HwWCQbsHBwfV6b5pCeHg4fHx8amxr1aoVwsPDHVwRERHZS9aQ3rx5M44cOYL4+Pjr2vLy8qDRaODr62uzPSAgAHl5eVKf6gFd1V7VdqM+FosFxcXFuHjxIqxWa419qu+jrlpqMn/+fJjNZul27ty5Wvs2Fzc3N7z00ks1tr388stwc5P97zQiIqqFu1xPfO7cOcyaNQvJycnQ6XRyldGstFottFqt3GXg999/r3F7Sxj4RkTkymQ7jEpPT8eFCxcwcOBAuLu7w93dHXv37sWyZcvg7u6OgIAAlJWVobCw0OZx+fn5CAwMBAAEBgZeFzRV9+vqo9fr4enpCX9/f6jV6hr7VN9HXbUoldVqxaJFi2psW7RoEaxWq4MrIiIie8kW0nfccQeOHz+OjIwM6TZ48GCYTCbpZw8PD+zevVt6TFZWFs6ePSt9jxoeHo7jx4/bjMJOTk6GXq9HaGio1Kf6Pqr6VO1Do9Fg0KBBNn0qKyuxe/duqc+gQYPqrEWpPv/881qD2Gq14vPPP3dwRUREZC/ZTne3atUKffr0sdnm7e0NPz8/afv06dMRFxeHNm3aQK/X48knn0R4eDiGDRsGALjrrrsQGhqKqVOnYtGiRcjLy8Nzzz2HmJgY6TTzY489hhUrVmDevHl4+OGHsWfPHnz00Uf48ssvpeeNi4tDdHQ0Bg8ejLCwMCxZsgRXr17FQw89BAAwGAx11qJU/fv3b1Q7ERHJR7aQtsfixYvh5uaG++67D6WlpTAajXj77beldrVaje3bt2PmzJkIDw+Ht7c3oqOjbQZKdenSBV9++SViY2OxdOlSBAUFYe3atTAajVKfiRMn4vfff8eCBQuQl5eHAQMGYOfOnTaDyeqqRanqGhjGgWNERMqlEoJTTjmKxWKBwWCA2WyudWWqpiaEwKOPPoqsrKzr2nr06IE1a9ZwalAiIoXiYZQLKCsrq9d2IiJSBoa0k8vOzq516s8btRERkfwY0k7u/PnzjWonIiL5MKSdXIcOHRrVTkRE8mFIO7mq5Tdr4unpic6dOzu2ICIishtD2snl5OSgpKSkxrbi4mLk5OQ4uCIiIrIXQ9rJ1TXtJ6cFJSJSLoa0kzt+/Hij2omISD4MaSd399131zqrmJubG+6++24HV0RERPZiSDs5Nzc3tGvXrsa2du3acVpQIiIFa/An9MaNGxEREYEOHTpIg4+WLFnCVZUUJjs7G3l5eTW25eXlcTITIiIFa1BIr1q1CnFxcRgzZgwKCwulwUe+vr5YsmRJU9ZHjfTrr782qp2IiOTToJBevnw53nnnHfzzn/+EWq2Wtg8ePJgDkRSmrsUzuLgGEZFyNSiks7Ozccstt1y3XavV4urVq40uippOeHj4DQeOhYeHO7giIiKyV4NCukuXLsjIyLhu+86dO9GrV6/G1kRN6Ny5c6isrKyxrbKyEufOnXNwRUREZC/3hjwoLi4OMTExKCkpgRAChw4dwgcffID4+HisXbu2qWukRggJCUG/fv1w7Nix69r69euHkJAQGaoiIiJ7NCikH3nkEXh6euK5557DtWvXMGXKFHTo0AFLly7FpEmTmrpGaiQhRL22ExGRMqhEIz+pr127hitXrtR6LS79yWKxwGAwwGw2Q6/XO+Q5z5w5gwcffLDW9g0bNnCRDSIihWrwwLFTp04BALy8vKSAPnXqFM6cOdNkxVHjBQcH24zAr06tViM4ONjBFRERkb0aFNLTpk3D/v37r9t+8OBBTJs2rbE1URM6cOBArYtoWK1WHDhwwMEVERGRvRoU0j/88AMiIiKu2z5s2LAaR32TfMLDw2s9tW4wGHgJFhGRgjUopFUqFYqKiq7bbjabufShwri5uSEmJqbGtieeeIJzdxMRKViDPqFHjBiB+Ph4m0C2Wq2Ij4/Hrbfe2mTFUeMJIfDNN9/U2Pb1119zhDcRkYI16BKs119/HSNGjECPHj0wfPhwAMD3338Pi8WCPXv2NGmB1Dg5OTlIS0ursS0tLQ05OTkc3U1EpFANOpIODQ3FsWPH8MADD+DChQsoKirCgw8+iJMnT6JPnz5NXSM1Akd3ExG1XA06kgaADh064NVXX23KWqgZ2DO6u6ZBgEREJD+7Q/rYsWPo06cP3Nzcapxisrp+/fo1ujBqGsOGDYNara4xqN3d3TFs2DAZqiIiInvYHdIDBgxAXl4e2rVrhwEDBkClUtU46EilUnGEdzMTQqCkpMSuvmfPnq3136OiogKnT59Gp06d6tyPTqfjspZERA5m97SgOTk56NSpE1QqFXJycm7Yl4s21KyppgUtLi6G0WhswsrqtmvXLnh6ejr0OYmIXJ3dR9JVwVteXo4XX3wRzz//PLp06dJshREREbm6Bi2wYTAYkJGRwZCup6Y6kq7P6e4q7777Lj766CPp/pQpUxAdHW3343m6m4jI8RoU0tHR0RgwYABiY2OboyanJccqWFUuX76McePGAQD8/f3x/vvvQ6fTObQGIiKqnwZdgtW9e3e89NJLSElJwaBBg+Dt7W3T/tRTTzVJcdR0qgfyk08+yYAmImoBGnQkfaPT3CqVCr/88kujinJWch5JVx9sxkFgREQtQ4OOpLOzs5u6DiIiIvqLeof0gQMHsG3bNpSVleGOO+7AqFGjmqMuIiIil1evkP74448xceJEeHp6wsPDA2+99RZef/11PP30081VHxERkcuq1wIb8fHxmDFjBsxmMy5fvox//etfnL+biIiomdQrpLOysvD0009LqyrNmTMHRUVFuHDhQrMUR0RE5MrqFdLXrl2zGZWs0Wig0+lw5cqVJi+MiIjI1dV74NjatWvh4+Mj3a+oqEBiYiL8/f2lbbxOmoiIqPHqdZ10586d65waktdJ147XSRMRUX3U60j6zJkzzVQGERER/VW9vpOuSX0XeiAiIiL7NCikrVYrXn75ZXTs2BE+Pj7S6e3nn38e7777bpMWSERE5KoaFNKvvPIKEhMTsWjRImg0Gml7nz59sHbt2iYrjoiIyJU1KKQ3bNiANWvWwGQySddMA0D//v1x8uTJJiuOiIjIlTUopH/99Vd069btuu2VlZUoLy9vdFFERETUwJAODQ3F999/f932jz/+GLfcckujiyIiIqIGLlW5YMECREdH49dff0VlZSU+/fRTZGVlYcOGDdi+fXtT10hEROSSGnQkPW7cOGzbtg3ffPMNvL29sWDBAmRmZmLbtm248847m7pGIiIil9SgI2kAGD58OJKTk5uyFiIiIqqm0ZOZEBG1JCkpKZgwYQJSUlLkLoWoTnYfSbdu3brOeburXLp0qcEFERE1l5KSEiQkJODixYtISEjAoEGDoNPp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"},"metadata":{}}],"execution_count":86},{"cell_type":"code","source":"train_df['GarageType'].fillna('No', inplace=True)\ntest_df['GarageType'].fillna('No', inplace=True)\nsns.catplot(data=train_df, x=\"GarageType\", y=\"SalePrice\", kind=\"box\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:42.801734Z","iopub.execute_input":"2025-03-19T06:17:42.802223Z","iopub.status.idle":"2025-03-19T06:17:43.122879Z","shell.execute_reply.started":"2025-03-19T06:17:42.802173Z","shell.execute_reply":"2025-03-19T06:17:43.121684Z"}},"outputs":[{"name":"stderr","text":"/tmp/ipykernel_1311/1877899387.py:1: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\nThe behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n\nFor example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n\n\n  train_df['GarageType'].fillna('No', inplace=True)\n/tmp/ipykernel_1311/1877899387.py:2: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\nThe behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n\nFor example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n\n\n  test_df['GarageType'].fillna('No', inplace=True)\n","output_type":"stream"},{"execution_count":87,"output_type":"execute_result","data":{"text/plain":"<seaborn.axisgrid.FacetGrid at 0x7ea04dbd7130>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 500x500 with 1 Axes>","image/png":""},"metadata":{}}],"execution_count":87},{"cell_type":"code","source":"train_df['GarageFinish'].fillna('No', inplace=True)\ntest_df['GarageFinish'].fillna('No', inplace=True)\nsns.catplot(data=train_df, x=\"GarageFinish\", y=\"SalePrice\", kind=\"box\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:43.125135Z","iopub.execute_input":"2025-03-19T06:17:43.125649Z","iopub.status.idle":"2025-03-19T06:17:43.584582Z","shell.execute_reply.started":"2025-03-19T06:17:43.125573Z","shell.execute_reply":"2025-03-19T06:17:43.583481Z"}},"outputs":[{"name":"stderr","text":"/tmp/ipykernel_1311/3029075875.py:1: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\nThe behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n\nFor example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n\n\n  train_df['GarageFinish'].fillna('No', inplace=True)\n/tmp/ipykernel_1311/3029075875.py:2: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\nThe behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n\nFor example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n\n\n  test_df['GarageFinish'].fillna('No', inplace=True)\n","output_type":"stream"},{"execution_count":88,"output_type":"execute_result","data":{"text/plain":"<seaborn.axisgrid.FacetGrid at 0x7ea04c9739d0>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 500x500 with 1 Axes>","image/png":""},"metadata":{}}],"execution_count":88},{"cell_type":"code","source":"train_df['GarageQual'].fillna('No', inplace=True)\ntest_df['GarageQual'].fillna('No', inplace=True)\nsns.catplot(data=train_df, x=\"GarageQual\", y=\"SalePrice\", kind=\"box\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:43.586167Z","iopub.execute_input":"2025-03-19T06:17:43.586646Z","iopub.status.idle":"2025-03-19T06:17:43.919339Z","shell.execute_reply.started":"2025-03-19T06:17:43.586574Z","shell.execute_reply":"2025-03-19T06:17:43.918179Z"}},"outputs":[{"name":"stderr","text":"/tmp/ipykernel_1311/2187484579.py:1: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\nThe behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n\nFor example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n\n\n  train_df['GarageQual'].fillna('No', inplace=True)\n/tmp/ipykernel_1311/2187484579.py:2: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\nThe behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n\nFor example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n\n\n  test_df['GarageQual'].fillna('No', inplace=True)\n","output_type":"stream"},{"execution_count":89,"output_type":"execute_result","data":{"text/plain":"<seaborn.axisgrid.FacetGrid at 0x7ea04d79a7a0>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 500x500 with 1 Axes>","image/png":""},"metadata":{}}],"execution_count":89},{"cell_type":"code","source":"train_df['BsmtFinType2'].unique()\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:43.920971Z","iopub.execute_input":"2025-03-19T06:17:43.921989Z","iopub.status.idle":"2025-03-19T06:17:43.930247Z","shell.execute_reply.started":"2025-03-19T06:17:43.921937Z","shell.execute_reply":"2025-03-19T06:17:43.928626Z"}},"outputs":[{"execution_count":90,"output_type":"execute_result","data":{"text/plain":"array(['Unf', 'BLQ', nan, 'ALQ', 'Rec', 'LwQ', 'GLQ'], dtype=object)"},"metadata":{}}],"execution_count":90},{"cell_type":"code","source":"train_df['BsmtFinType2'].fillna('Unf', inplace=True)\ntest_df['BsmtFinType2'].fillna('Unf', inplace=True)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:43.931774Z","iopub.execute_input":"2025-03-19T06:17:43.932137Z","iopub.status.idle":"2025-03-19T06:17:43.944390Z","shell.execute_reply.started":"2025-03-19T06:17:43.932105Z","shell.execute_reply":"2025-03-19T06:17:43.943345Z"}},"outputs":[{"name":"stderr","text":"/tmp/ipykernel_1311/2586836610.py:1: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\nThe behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n\nFor example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n\n\n  train_df['BsmtFinType2'].fillna('Unf', inplace=True)\n/tmp/ipykernel_1311/2586836610.py:2: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\nThe behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n\nFor example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n\n\n  test_df['BsmtFinType2'].fillna('Unf', inplace=True)\n","output_type":"stream"}],"execution_count":91},{"cell_type":"code","source":"sns.catplot(data=train_df, x=\"BsmtFinType2\", y=\"SalePrice\", kind=\"box\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:43.945810Z","iopub.execute_input":"2025-03-19T06:17:43.946263Z","iopub.status.idle":"2025-03-19T06:17:44.355197Z","shell.execute_reply.started":"2025-03-19T06:17:43.946210Z","shell.execute_reply":"2025-03-19T06:17:44.353959Z"}},"outputs":[{"execution_count":92,"output_type":"execute_result","data":{"text/plain":"<seaborn.axisgrid.FacetGrid at 0x7ea04cb3d3f0>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 500x500 with 1 Axes>","image/png":""},"metadata":{}}],"execution_count":92},{"cell_type":"code","source":"train_df['BsmtExposure'].unique()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:44.356700Z","iopub.execute_input":"2025-03-19T06:17:44.357024Z","iopub.status.idle":"2025-03-19T06:17:44.364474Z","shell.execute_reply.started":"2025-03-19T06:17:44.356994Z","shell.execute_reply":"2025-03-19T06:17:44.363301Z"}},"outputs":[{"execution_count":93,"output_type":"execute_result","data":{"text/plain":"array(['No', 'Gd', 'Mn', 'Av', nan], dtype=object)"},"metadata":{}}],"execution_count":93},{"cell_type":"code","source":"train_df['BsmtExposure'].fillna('No', inplace=True)\ntest_df['BsmtExposure'].fillna('No', inplace=True)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:44.365745Z","iopub.execute_input":"2025-03-19T06:17:44.366114Z","iopub.status.idle":"2025-03-19T06:17:44.376703Z","shell.execute_reply.started":"2025-03-19T06:17:44.366080Z","shell.execute_reply":"2025-03-19T06:17:44.375679Z"}},"outputs":[{"name":"stderr","text":"/tmp/ipykernel_1311/2040818772.py:1: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\nThe behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n\nFor example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n\n\n  train_df['BsmtExposure'].fillna('No', inplace=True)\n/tmp/ipykernel_1311/2040818772.py:2: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\nThe behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n\nFor example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n\n\n  test_df['BsmtExposure'].fillna('No', inplace=True)\n","output_type":"stream"}],"execution_count":94},{"cell_type":"code","source":"sns.catplot(data=train_df, x=\"BsmtExposure\", y=\"SalePrice\", kind=\"box\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:44.378344Z","iopub.execute_input":"2025-03-19T06:17:44.378776Z","iopub.status.idle":"2025-03-19T06:17:44.660721Z","shell.execute_reply.started":"2025-03-19T06:17:44.378728Z","shell.execute_reply":"2025-03-19T06:17:44.659550Z"}},"outputs":[{"execution_count":95,"output_type":"execute_result","data":{"text/plain":"<seaborn.axisgrid.FacetGrid at 0x7ea04c79ec80>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 500x500 with 1 Axes>","image/png":""},"metadata":{}}],"execution_count":95},{"cell_type":"code","source":"train_df['BsmtQual'].unique()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:44.662078Z","iopub.execute_input":"2025-03-19T06:17:44.662446Z","iopub.status.idle":"2025-03-19T06:17:44.669722Z","shell.execute_reply.started":"2025-03-19T06:17:44.662395Z","shell.execute_reply":"2025-03-19T06:17:44.668631Z"}},"outputs":[{"execution_count":96,"output_type":"execute_result","data":{"text/plain":"array(['Gd', 'TA', 'Ex', nan, 'Fa'], dtype=object)"},"metadata":{}}],"execution_count":96},{"cell_type":"code","source":"train_df['BsmtQual'].fillna('No', inplace=True)\ntest_df['BsmtQual'].fillna('No', inplace=True)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:44.671045Z","iopub.execute_input":"2025-03-19T06:17:44.671377Z","iopub.status.idle":"2025-03-19T06:17:44.684453Z","shell.execute_reply.started":"2025-03-19T06:17:44.671343Z","shell.execute_reply":"2025-03-19T06:17:44.683328Z"}},"outputs":[{"name":"stderr","text":"/tmp/ipykernel_1311/2878576625.py:1: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\nThe behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n\nFor example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n\n\n  train_df['BsmtQual'].fillna('No', inplace=True)\n/tmp/ipykernel_1311/2878576625.py:2: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\nThe behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n\nFor example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n\n\n  test_df['BsmtQual'].fillna('No', inplace=True)\n","output_type":"stream"}],"execution_count":97},{"cell_type":"code","source":"sns.catplot(data=train_df, x=\"BsmtQual\", y=\"SalePrice\", kind=\"box\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:44.686311Z","iopub.execute_input":"2025-03-19T06:17:44.686789Z","iopub.status.idle":"2025-03-19T06:17:45.067820Z","shell.execute_reply.started":"2025-03-19T06:17:44.686741Z","shell.execute_reply":"2025-03-19T06:17:45.066614Z"}},"outputs":[{"execution_count":98,"output_type":"execute_result","data":{"text/plain":"<seaborn.axisgrid.FacetGrid at 0x7ea04c491480>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 500x500 with 1 Axes>","image/png":""},"metadata":{}}],"execution_count":98},{"cell_type":"code","source":" train_df['BsmtCond'].unique()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:45.069267Z","iopub.execute_input":"2025-03-19T06:17:45.069619Z","iopub.status.idle":"2025-03-19T06:17:45.077369Z","shell.execute_reply.started":"2025-03-19T06:17:45.069559Z","shell.execute_reply":"2025-03-19T06:17:45.075982Z"}},"outputs":[{"execution_count":99,"output_type":"execute_result","data":{"text/plain":"array(['TA', 'Gd', nan, 'Fa', 'Po'], dtype=object)"},"metadata":{}}],"execution_count":99},{"cell_type":"code","source":"train_df['BsmtCond'].fillna('No', inplace=True)\ntest_df['BsmtCond'].fillna('No', inplace=True)\nsns.catplot(data=train_df, x=\"BsmtCond\", y=\"SalePrice\", kind=\"box\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:45.079733Z","iopub.execute_input":"2025-03-19T06:17:45.080224Z","iopub.status.idle":"2025-03-19T06:17:45.363175Z","shell.execute_reply.started":"2025-03-19T06:17:45.080164Z","shell.execute_reply":"2025-03-19T06:17:45.362127Z"}},"outputs":[{"name":"stderr","text":"/tmp/ipykernel_1311/678150356.py:1: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\nThe behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n\nFor example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n\n\n  train_df['BsmtCond'].fillna('No', inplace=True)\n/tmp/ipykernel_1311/678150356.py:2: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\nThe behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n\nFor example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n\n\n  test_df['BsmtCond'].fillna('No', inplace=True)\n","output_type":"stream"},{"execution_count":100,"output_type":"execute_result","data":{"text/plain":"<seaborn.axisgrid.FacetGrid at 0x7ea04c37b910>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 500x500 with 1 Axes>","image/png":""},"metadata":{}}],"execution_count":100},{"cell_type":"code","source":" train_df['BsmtFinType1'].unique()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:45.364761Z","iopub.execute_input":"2025-03-19T06:17:45.365208Z","iopub.status.idle":"2025-03-19T06:17:45.372731Z","shell.execute_reply.started":"2025-03-19T06:17:45.365160Z","shell.execute_reply":"2025-03-19T06:17:45.371613Z"}},"outputs":[{"execution_count":101,"output_type":"execute_result","data":{"text/plain":"array(['GLQ', 'ALQ', 'Unf', 'Rec', 'BLQ', nan, 'LwQ'], dtype=object)"},"metadata":{}}],"execution_count":101},{"cell_type":"code","source":"train_df['BsmtFinType1'].fillna('Unf', inplace=True)\ntest_df['BsmtFinType1'].fillna('Unf', inplace=True)\nsns.catplot(data=train_df, x=\"BsmtFinType1\", y=\"SalePrice\", kind=\"box\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:45.374453Z","iopub.execute_input":"2025-03-19T06:17:45.374939Z","iopub.status.idle":"2025-03-19T06:17:45.680658Z","shell.execute_reply.started":"2025-03-19T06:17:45.374892Z","shell.execute_reply":"2025-03-19T06:17:45.679431Z"}},"outputs":[{"name":"stderr","text":"/tmp/ipykernel_1311/1973573967.py:1: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\nThe behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n\nFor example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n\n\n  train_df['BsmtFinType1'].fillna('Unf', inplace=True)\n/tmp/ipykernel_1311/1973573967.py:2: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\nThe behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n\nFor example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n\n\n  test_df['BsmtFinType1'].fillna('Unf', inplace=True)\n","output_type":"stream"},{"execution_count":102,"output_type":"execute_result","data":{"text/plain":"<seaborn.axisgrid.FacetGrid at 0x7ea04c3ef010>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 500x500 with 1 Axes>","image/png":""},"metadata":{}}],"execution_count":102},{"cell_type":"code","source":"train_df['MasVnrArea'].fillna(0, inplace=True)\ntest_df['MasVnrArea'].fillna(0, inplace=True)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:45.682410Z","iopub.execute_input":"2025-03-19T06:17:45.682788Z","iopub.status.idle":"2025-03-19T06:17:45.689482Z","shell.execute_reply.started":"2025-03-19T06:17:45.682754Z","shell.execute_reply":"2025-03-19T06:17:45.688376Z"}},"outputs":[{"name":"stderr","text":"/tmp/ipykernel_1311/117983875.py:1: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\nThe behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n\nFor example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n\n\n  train_df['MasVnrArea'].fillna(0, inplace=True)\n/tmp/ipykernel_1311/117983875.py:2: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\nThe behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n\nFor example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n\n\n  test_df['MasVnrArea'].fillna(0, inplace=True)\n","output_type":"stream"}],"execution_count":103},{"cell_type":"code","source":"train_df['Electrical'].fillna('SBrkr', inplace=True)\ntest_df['Electrical'].fillna('SBrkr', inplace=True)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:45.690942Z","iopub.execute_input":"2025-03-19T06:17:45.691299Z","iopub.status.idle":"2025-03-19T06:17:45.710293Z","shell.execute_reply.started":"2025-03-19T06:17:45.691266Z","shell.execute_reply":"2025-03-19T06:17:45.709115Z"}},"outputs":[{"name":"stderr","text":"/tmp/ipykernel_1311/4245203846.py:1: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\nThe behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n\nFor example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n\n\n  train_df['Electrical'].fillna('SBrkr', inplace=True)\n/tmp/ipykernel_1311/4245203846.py:2: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\nThe behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n\nFor example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n\n\n  test_df['Electrical'].fillna('SBrkr', inplace=True)\n","output_type":"stream"}],"execution_count":104},{"cell_type":"markdown","source":"## Drop unrelevant features\n","metadata":{}},{"cell_type":"code","source":"train_df = train_df.drop(columns=['PoolQC', 'MiscFeature', 'Alley', 'Fence', 'GarageYrBlt', 'GarageCond', 'BsmtFinType2'])\ntest_df = test_df.drop(columns=['PoolQC', 'MiscFeature', 'Alley', 'Fence', 'GarageYrBlt', 'GarageCond', 'BsmtFinType2'])","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:45.711677Z","iopub.execute_input":"2025-03-19T06:17:45.712072Z","iopub.status.idle":"2025-03-19T06:17:45.730278Z","shell.execute_reply.started":"2025-03-19T06:17:45.712038Z","shell.execute_reply":"2025-03-19T06:17:45.729191Z"}},"outputs":[],"execution_count":105},{"cell_type":"code","source":"# Calculate house age by subtracting the year it was built from the year it was sold\ntrain_df['houseage'] = train_df['YrSold'] - train_df['YearBuilt']\ntest_df['houseage'] = test_df['YrSold'] - test_df['YearBuilt']","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:45.731831Z","iopub.execute_input":"2025-03-19T06:17:45.732302Z","iopub.status.idle":"2025-03-19T06:17:45.744033Z","shell.execute_reply.started":"2025-03-19T06:17:45.732264Z","shell.execute_reply":"2025-03-19T06:17:45.742576Z"}},"outputs":[],"execution_count":106},{"cell_type":"code","source":"# Calculate house remodel age by subtracting the last remodel year from the year it was sold\ntrain_df['houseremodelage'] = train_df['YrSold'] - train_df['YearRemodAdd']\ntest_df['houseremodelage'] = test_df['YrSold'] - test_df['YearRemodAdd']","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:45.745711Z","iopub.execute_input":"2025-03-19T06:17:45.746067Z","iopub.status.idle":"2025-03-19T06:17:45.762145Z","shell.execute_reply.started":"2025-03-19T06:17:45.746032Z","shell.execute_reply":"2025-03-19T06:17:45.760783Z"}},"outputs":[],"execution_count":107},{"cell_type":"code","source":"# Create a total square footage feature by summing up different floor areas (1st floor, 2nd floor, and basement areas)\ntrain_df['totalsf'] = train_df['1stFlrSF'] + train_df['2ndFlrSF'] + train_df['BsmtFinSF1'] + train_df['BsmtFinSF2']\ntest_df['totalsf'] = test_df['1stFlrSF'] + test_df['2ndFlrSF'] + test_df['BsmtFinSF1'] + test_df['BsmtFinSF2']","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:45.763899Z","iopub.execute_input":"2025-03-19T06:17:45.764386Z","iopub.status.idle":"2025-03-19T06:17:45.776828Z","shell.execute_reply.started":"2025-03-19T06:17:45.764332Z","shell.execute_reply":"2025-03-19T06:17:45.775447Z"}},"outputs":[],"execution_count":108},{"cell_type":"code","source":"# Create a total area feature by adding above-ground living area and basement area\ntrain_df['totalarea'] = train_df['GrLivArea'] + train_df['TotalBsmtSF']\ntest_df['totalarea'] = test_df['GrLivArea'] + test_df['TotalBsmtSF']","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:45.778407Z","iopub.execute_input":"2025-03-19T06:17:45.778778Z","iopub.status.idle":"2025-03-19T06:17:45.791420Z","shell.execute_reply.started":"2025-03-19T06:17:45.778744Z","shell.execute_reply":"2025-03-19T06:17:45.790219Z"}},"outputs":[],"execution_count":109},{"cell_type":"code","source":"# Create a total number of bathrooms feature by summing up full and half bathrooms from basement and above ground\n# Half bathrooms are counted as 0.5 to reflect their smaller impact compared to full bathrooms\ntrain_df['totalbaths'] = train_df['BsmtFullBath'] + train_df['FullBath'] + 0.5 * (train_df['BsmtHalfBath'] + train_df['HalfBath']) \ntest_df['totalbaths'] = test_df['BsmtFullBath'] + test_df['FullBath'] + 0.5 * (test_df['BsmtHalfBath'] + test_df['HalfBath']) \n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:45.792884Z","iopub.execute_input":"2025-03-19T06:17:45.793355Z","iopub.status.idle":"2025-03-19T06:17:45.806571Z","shell.execute_reply.started":"2025-03-19T06:17:45.793298Z","shell.execute_reply":"2025-03-19T06:17:45.805373Z"}},"outputs":[],"execution_count":110},{"cell_type":"code","source":"# Create a total porch square footage feature by summing all porch-related areas\ntrain_df['totalporchsf'] = train_df['OpenPorchSF'] + train_df['3SsnPorch'] + train_df['EnclosedPorch'] + train_df['ScreenPorch'] + train_df['WoodDeckSF']\ntest_df['totalporchsf'] = test_df['OpenPorchSF'] + test_df['3SsnPorch'] + test_df['EnclosedPorch'] + test_df['ScreenPorch'] + test_df['WoodDeckSF']","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:45.808351Z","iopub.execute_input":"2025-03-19T06:17:45.809277Z","iopub.status.idle":"2025-03-19T06:17:45.822167Z","shell.execute_reply.started":"2025-03-19T06:17:45.809236Z","shell.execute_reply":"2025-03-19T06:17:45.820876Z"}},"outputs":[],"execution_count":111},{"cell_type":"markdown","source":"## Drop irrelevant or redundant features after feature engineering\n- Features like 'YrSold', 'YearBuilt', 'YearRemodAdd' are removed since we have created 'houseage' and 'houseremodelage'\n- Square footage features are replaced with combined total area features\n- Porch-related features are replaced with 'totalporchsf'","metadata":{}},{"cell_type":"code","source":"train_df = train_df.drop(columns=['Id','YrSold', 'YearBuilt', 'YearRemodAdd', '1stFlrSF', '2ndFlrSF', 'BsmtFinSF1', 'BsmtFinSF2', 'GrLivArea', 'TotalBsmtSF','BsmtFullBath', 'FullBath', 'BsmtHalfBath', 'HalfBath', 'OpenPorchSF', '3SsnPorch', 'EnclosedPorch', 'ScreenPorch','WoodDeckSF'])\ntest_df = test_df.drop(columns=['YrSold', 'YearBuilt', 'YearRemodAdd', '1stFlrSF', '2ndFlrSF', 'BsmtFinSF1', 'BsmtFinSF2', 'GrLivArea', 'TotalBsmtSF','BsmtFullBath', 'FullBath', 'BsmtHalfBath', 'HalfBath', 'OpenPorchSF', '3SsnPorch', 'EnclosedPorch', 'ScreenPorch','WoodDeckSF'])","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:45.823616Z","iopub.execute_input":"2025-03-19T06:17:45.824078Z","iopub.status.idle":"2025-03-19T06:17:45.844478Z","shell.execute_reply.started":"2025-03-19T06:17:45.824031Z","shell.execute_reply":"2025-03-19T06:17:45.843289Z"}},"outputs":[],"execution_count":112},{"cell_type":"code","source":"# Perform heatmap to visualize correlation between features\ncorrelation_matrix = train_df.corr(numeric_only=True)\nplt.figure(figsize=(20,12))\nsns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', fmt=\".2f\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:45.846068Z","iopub.execute_input":"2025-03-19T06:17:45.846774Z","iopub.status.idle":"2025-03-19T06:17:47.938398Z","shell.execute_reply.started":"2025-03-19T06:17:45.846735Z","shell.execute_reply":"2025-03-19T06:17:47.937207Z"}},"outputs":[{"execution_count":113,"output_type":"execute_result","data":{"text/plain":"<Axes: >"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 2000x1200 with 2 Axes>","image/png":"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VgMHDlROTo46duxoW7/99ts1adIkA5M1zsyZM2W1WhUaGqoePXpo/fr16tq1q9GxGszLy0vZ2dny8/OrtZ6dna1OnToZlAoAAMcwceJEubq66tFHH9WJEyc0ZswYeXt76/nnn9fo0aONjgcAMBGKDAAAoNnbuHGjNm/eLBcXl1rrPXr0UHFxsUGpGi4qKqrW65YtW8rT01OxsbG11letWtWUsRosKSlJDz30kCZNmqR7771X//nPf3T99ddLkr766is99dRTmjFjhsEpAQCwf2PHjtXYsWN14sQJlZeXU6QHAPwhKDIAAIAG+e0X2b9VVlbWNEEuoerq6vPOkDhw4IDc3NwMSNQ47du3r/X6zjvvNCjJxUlMTNTkyZP12GOPyc3NTc8995xmz54tSfL29lZCQoKmT59ucEoAAOzbyZMnVVNTozZt2qhNmzb673//q4ULF8rf319hYWFGxwMAmAiDnwEAQINER0fX631Lly79g5NcOnfccYfat2+vV155RW5ubtq5c6e8vLw0cuRIde/e3aHuxQwsFotKS0tr7bY8fvy4JDlU0QcAACOFhYUpKipKkydPVllZmXr37i0XFxcdPnxY8+fP15QpU4yOCAAwCYoMAACg2Ttw4IDCw8NVU1Ojffv2aeDAgdq3b586duyojRs30lqgiVksFv3000/y8vIyOgoAAA7L09NTmZmZ6tevn1JTU7Vo0SJlZWXp3//+t+Lj45Wbm2t0RACASdAuCQAANHtdu3ZVTk6O0tPTtXPnTpWXl2vChAkaO3asXF1djY7XLF155ZVycnL63fdYrdYmSgMAgOM5ceKE7QTg2rVrFRUVJYvFosGDB6uwsNDgdAAAM6HIAAAAmr0jR46oY8eOGjdunIqKivTqq69qz5492r59u4KCgoyO1ywlJibWmTEBAADqr1evXnr//fd1++23a82aNYqLi5MkHTp0SO7u7ganAwCYCe2SAABAs/Xdd98pMjJSRUVF8vPzU3p6uiIiIlRRUSGLxaKKigq9++67GjVqlNFRm5XzzWQAAAAN8+6772rMmDE6c+aMQkNDtXbtWknS3LlztWHDBn322WcGJwQAmAVFBgAA0GwNHz5czs7OmjVrltLS0vTxxx8rPDxcr776qiRp2rRp2rFjh77++muDkzYvLVq0UElJCUUGAAAuUmlpqUpKStS/f39ZLBZJ0tatW+Xu7q4+ffoYnA4AYBYUGQAAQLPl6empjIwMBQQEqLy8XO7u7tq2bZuuvfZaSVJeXp4GDx6ssrIyY4M2M5xkAAAAAADHwUwGAADQbFmtVl1++eWSpHbt2qlt27by8PCwXffw8NDx48eNitdsVVdXGx0BAACHFxISIicnpwtez8jIaMI0AAAzo8gAAACatd/+8f17f4wDAAA4isDAwFqvT58+rezsbO3atUt33323MaEAAKZEkQEAADRr99xzj1q1aiVJOnXqlCZPnqy2bdtKkiorK42MBgAA0GgLFiw473pCQoLKy8ubOA0AwMyYyQAAAJqt6Ojoer1v6dKlf3ASAACAprF//34NGjRIVqvV6CgAAJPgJAMAAGi2KB4AAIDmZsuWLWrdurXRMQAAJkKRAQAAAAAAwGSioqJqva6pqVFJSYm2b9+uxx57zKBUAAAzosgAAAAAAABgMu3bt6/12mKxqHfv3kpKSlJYWJhBqQAAZsRMBgAAAAAAAAAA0CicZAAAAAAAADCpHTt2KDc3V5LUr18/DRgwwOBEAACzocgAAAAAAABgMocOHdLo0aO1fv16dejQQZJUVlamkJAQpaeny8vLy9iAAADTsBgdAAAAAAAAAJfWtGnTdPz4ce3evVtWq1VWq1W7du3SsWPHNH36dKPjAQBMhJkMAAAAAAAAJtO+fXt98cUX+vOf/1xrfevWrQoLC1NZWZkxwQAApsNJBgAAAAAAAJOprq5Wy5Yt66y3bNlS1dXVBiQCAJgVRQYAAAAAAACTGTZsmGJjY3Xw4EHbWnFxseLi4hQaGmpgMgCA2dAuCQAAAAAAwGSKiop02223affu3erWrZsk6ccff9TVV1+tDz/8UF27djU4IQDALCgyAAAAAAAAmFBNTY3WrVun3NxcSVLfvn118803G5wKAGA2FBkAAAAAAABMaN26dVq3bp0OHTpUZw7Da6+9ZlAqAIDZOBsdAAAAAAAAAJdWYmKikpKSNHDgQHXu3FlOTk5GRwIAmBQnGQAAAAAAAEymc+fOevrpp/WPf/zD6CgAAJOzGB0AAAAAAAAAl9Yvv/yi66+/3ugYAIBmgCIDAAAAAACAyUycOFFvvfWW0TEAAM0A7ZIAAAAAAABMYMaMGbZ/V1dXa/ny5QoICFBAQIBatmxZ673z589v6ngAAJOiyAAAAAAAAGACISEh9Xqfk5OTMjIy/uA0AIDmgiIDAAAAAAAAAABoFGYyAAAAAAAAAACARqHIAAAAAAAAAAAAGoUiAwAAAAAAAAAAaBSKDAAAAAAAAAAAoFEoMgAAAAAAAAAAgEahyAAAAAAAAAAAABqFIgMAAAAAAAAAAGgUigwAAAAAAAAAAKBR/h9+glrp5P08awAAAABJRU5ErkJggg=="},"metadata":{}}],"execution_count":113},{"cell_type":"code","source":"#drop GarageArea or GarageCars to prevent multicollinearity \ntrain_df = train_df.drop(columns=['GarageArea'])\ntest_df = test_df.drop(columns=['GarageArea'])","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:47.940372Z","iopub.execute_input":"2025-03-19T06:17:47.941081Z","iopub.status.idle":"2025-03-19T06:17:47.950448Z","shell.execute_reply.started":"2025-03-19T06:17:47.941025Z","shell.execute_reply":"2025-03-19T06:17:47.949384Z"}},"outputs":[],"execution_count":114},{"cell_type":"code","source":"sns.histplot(\n    train_df,\n    x=train_df['SalePrice']\n)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:47.951987Z","iopub.execute_input":"2025-03-19T06:17:47.952336Z","iopub.status.idle":"2025-03-19T06:17:48.263134Z","shell.execute_reply.started":"2025-03-19T06:17:47.952302Z","shell.execute_reply":"2025-03-19T06:17:48.261959Z"}},"outputs":[{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n  with pd.option_context('mode.use_inf_as_na', True):\n","output_type":"stream"},{"execution_count":115,"output_type":"execute_result","data":{"text/plain":"<Axes: xlabel='SalePrice', ylabel='Count'>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}],"execution_count":115},{"cell_type":"code","source":"#perform log transformation as normalisation\ntrain_df['SalePrice'] = np.log1p(train_df['SalePrice'])","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:48.264497Z","iopub.execute_input":"2025-03-19T06:17:48.264889Z","iopub.status.idle":"2025-03-19T06:17:48.271088Z","shell.execute_reply.started":"2025-03-19T06:17:48.264846Z","shell.execute_reply":"2025-03-19T06:17:48.269892Z"}},"outputs":[],"execution_count":116},{"cell_type":"code","source":"sns.histplot(\n    train_df,\n    x=train_df['SalePrice']\n)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:48.272345Z","iopub.execute_input":"2025-03-19T06:17:48.272708Z","iopub.status.idle":"2025-03-19T06:17:48.756513Z","shell.execute_reply.started":"2025-03-19T06:17:48.272672Z","shell.execute_reply":"2025-03-19T06:17:48.755346Z"}},"outputs":[{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n  with pd.option_context('mode.use_inf_as_na', True):\n","output_type":"stream"},{"execution_count":117,"output_type":"execute_result","data":{"text/plain":"<Axes: xlabel='SalePrice', ylabel='Count'>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}],"execution_count":117},{"cell_type":"code","source":"train_df.dtypes[train_df.dtypes=='object']","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:48.758146Z","iopub.execute_input":"2025-03-19T06:17:48.758523Z","iopub.status.idle":"2025-03-19T06:17:48.768291Z","shell.execute_reply.started":"2025-03-19T06:17:48.758489Z","shell.execute_reply":"2025-03-19T06:17:48.767002Z"}},"outputs":[{"execution_count":118,"output_type":"execute_result","data":{"text/plain":"MSZoning         object\nStreet           object\nLotShape         object\nLandContour      object\nUtilities        object\nLotConfig        object\nLandSlope        object\nNeighborhood     object\nCondition1       object\nCondition2       object\nBldgType         object\nHouseStyle       object\nRoofStyle        object\nRoofMatl         object\nExterior1st      object\nExterior2nd      object\nMasVnrType       object\nExterQual        object\nExterCond        object\nFoundation       object\nBsmtQual         object\nBsmtCond         object\nBsmtExposure     object\nBsmtFinType1     object\nHeating          object\nHeatingQC        object\nCentralAir       object\nElectrical       object\nKitchenQual      object\nFunctional       object\nFireplaceQu      object\nGarageType       object\nGarageFinish     object\nGarageQual       object\nPavedDrive       object\nSaleType         object\nSaleCondition    object\ndtype: object"},"metadata":{}}],"execution_count":118},{"cell_type":"code","source":"train_df.dtypes[train_df.dtypes !='object']","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:48.769520Z","iopub.execute_input":"2025-03-19T06:17:48.769911Z","iopub.status.idle":"2025-03-19T06:17:48.783341Z","shell.execute_reply.started":"2025-03-19T06:17:48.769878Z","shell.execute_reply":"2025-03-19T06:17:48.782186Z"}},"outputs":[{"execution_count":119,"output_type":"execute_result","data":{"text/plain":"MSSubClass           int64\nLotFrontage        float64\nLotArea              int64\nOverallQual          int64\nOverallCond          int64\nMasVnrArea         float64\nBsmtUnfSF            int64\nLowQualFinSF         int64\nBedroomAbvGr         int64\nKitchenAbvGr         int64\nTotRmsAbvGrd         int64\nFireplaces           int64\nGarageCars           int64\nPoolArea             int64\nMiscVal              int64\nMoSold               int64\nSalePrice          float64\nhouseage             int64\nhouseremodelage      int64\ntotalsf              int64\ntotalarea            int64\ntotalbaths         float64\ntotalporchsf         int64\ndtype: object"},"metadata":{}}],"execution_count":119},{"cell_type":"markdown","source":"## Separate pipelines are used because different feature types require different preprocessing methods to ensure optimal model performance:\n\n- Ordinal categorical (ode_cols): Encoded with Label Encoding or Ordinal Encoding to maintain the order of categories.\n- Nominal categorical (ohe_cols): Transformed using One-Hot Encoding (OHE) to avoid introducing false ordinal relationships.\n- Numerical (num_cols): Scaled or transformed to handle skewness and improve distribution.\n  \n    - Ensures appropriate handling of each feature type without introducing bias.\n    - Prevents data leakage by applying transformations consistently across training and test sets.\n    - Enhances model accuracy and interpretability by structuring preprocessing effectively.","metadata":{}},{"cell_type":"code","source":"ode_cols = ['LotShape', 'LandContour','Utilities','LandSlope',  'BsmtQual',  'BsmtFinType1',  'CentralAir',  'Functional', \\\n           'FireplaceQu', 'GarageFinish', 'GarageQual', 'PavedDrive', 'ExterCond', 'KitchenQual', 'BsmtExposure', 'HeatingQC','ExterQual', 'BsmtCond']","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:48.785349Z","iopub.execute_input":"2025-03-19T06:17:48.785859Z","iopub.status.idle":"2025-03-19T06:17:48.797802Z","shell.execute_reply.started":"2025-03-19T06:17:48.785808Z","shell.execute_reply":"2025-03-19T06:17:48.796639Z"}},"outputs":[],"execution_count":120},{"cell_type":"code","source":"ohe_cols = ['Street', 'LotConfig','Neighborhood', 'Condition1', 'Condition2', 'BldgType', 'HouseStyle', 'RoofStyle', 'Exterior1st', 'Exterior2nd', \\\n           'MasVnrType','Foundation',  'Electrical',  'SaleType', 'MSZoning', 'SaleCondition', 'Heating', 'GarageType', 'RoofMatl']","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:48.799369Z","iopub.execute_input":"2025-03-19T06:17:48.800007Z","iopub.status.idle":"2025-03-19T06:17:48.812114Z","shell.execute_reply.started":"2025-03-19T06:17:48.799954Z","shell.execute_reply":"2025-03-19T06:17:48.810787Z"}},"outputs":[],"execution_count":121},{"cell_type":"code","source":"num_cols = train_df.select_dtypes(include=['int64', 'float64']).columns\nnum_cols = num_cols.drop('SalePrice')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:48.813691Z","iopub.execute_input":"2025-03-19T06:17:48.814066Z","iopub.status.idle":"2025-03-19T06:17:48.831484Z","shell.execute_reply.started":"2025-03-19T06:17:48.814033Z","shell.execute_reply":"2025-03-19T06:17:48.830161Z"}},"outputs":[],"execution_count":122},{"cell_type":"code","source":"#This pipeline is used for processing numerical columns, handling missing data, and scaling the data.\nnum_pipeline = Pipeline(steps=[\n    ('impute', SimpleImputer(strategy='mean')), #handled missing values by replacing the mean\n    ('scaler', StandardScaler()) #scaling to mean =0 , standard deviation =1\n])\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:48.833100Z","iopub.execute_input":"2025-03-19T06:17:48.833948Z","iopub.status.idle":"2025-03-19T06:17:48.842897Z","shell.execute_reply.started":"2025-03-19T06:17:48.833884Z","shell.execute_reply":"2025-03-19T06:17:48.841944Z"}},"outputs":[],"execution_count":123},{"cell_type":"code","source":"#This pipeline is used to handle ordinal categorical variables, impute missing values with the most frequent category, and encode the categories into numeric values.\node_pipeline = Pipeline(steps=[\n    ('impute', SimpleImputer(strategy='most_frequent')),  # Fill missing values with the most common category\n    ('ode', OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1))  # Convert categories into numerical order, assign -1 for unknown values\n])\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:48.844483Z","iopub.execute_input":"2025-03-19T06:17:48.845622Z","iopub.status.idle":"2025-03-19T06:17:48.856311Z","shell.execute_reply.started":"2025-03-19T06:17:48.845538Z","shell.execute_reply":"2025-03-19T06:17:48.855013Z"}},"outputs":[],"execution_count":124},{"cell_type":"code","source":"#This pipeline handles nominal categorical features, imputes missing values with the most frequent category, and applies one-hot encoding to convert categories into binary features.\n\n\nohe_pipeline = Pipeline(steps=[\n    ('impute', SimpleImputer(strategy='most_frequent')),  # Fill missing values with the most common category\n    ('ohe', OneHotEncoder(handle_unknown='ignore', sparse_output=False))  # Convert categories into separate binary (0/1) columns, ignore unknown categories\n\n])","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:48.857741Z","iopub.execute_input":"2025-03-19T06:17:48.858100Z","iopub.status.idle":"2025-03-19T06:17:48.869280Z","shell.execute_reply.started":"2025-03-19T06:17:48.858068Z","shell.execute_reply":"2025-03-19T06:17:48.868113Z"}},"outputs":[],"execution_count":125},{"cell_type":"code","source":"# Create a ColumnTransformer to apply different pipelines to different feature types\ncol_trans = ColumnTransformer(transformers=[\n    ('num_p', num_pipeline, num_cols),  # Apply numerical pipeline to numerical columns\n    ('ode_p', ode_pipeline, ode_cols),  # Apply ordinal encoding pipeline to ordinal categorical columns\n    ('ohe_p', ohe_pipeline, ohe_cols),  # Apply one-hot encoding pipeline to nominal categorical columns\n    ],\n    remainder='passthrough',  # Leave other columns unchanged\n    n_jobs=-1  # Utilize all CPU cores for parallel processing\n)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:48.871411Z","iopub.execute_input":"2025-03-19T06:17:48.871817Z","iopub.status.idle":"2025-03-19T06:17:48.882642Z","shell.execute_reply.started":"2025-03-19T06:17:48.871782Z","shell.execute_reply":"2025-03-19T06:17:48.881559Z"}},"outputs":[],"execution_count":126},{"cell_type":"code","source":"# Create a full preprocessing pipeline\npipeline = Pipeline(steps=[\n    ('preprocessing', col_trans)  # Apply all transformations before feeding data into the model\n])\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:48.884221Z","iopub.execute_input":"2025-03-19T06:17:48.884581Z","iopub.status.idle":"2025-03-19T06:17:48.900216Z","shell.execute_reply.started":"2025-03-19T06:17:48.884548Z","shell.execute_reply":"2025-03-19T06:17:48.899055Z"}},"outputs":[],"execution_count":127},{"cell_type":"markdown","source":"## Fit dataset into mutiple model. explore it out","metadata":{}},{"cell_type":"code","source":"X = train_df.drop('SalePrice', axis=1)\ny = train_df['SalePrice']","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:48.901533Z","iopub.execute_input":"2025-03-19T06:17:48.901942Z","iopub.status.idle":"2025-03-19T06:17:48.934883Z","shell.execute_reply.started":"2025-03-19T06:17:48.901905Z","shell.execute_reply":"2025-03-19T06:17:48.933661Z"}},"outputs":[],"execution_count":128},{"cell_type":"code","source":"print(X.dtypes)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:48.936408Z","iopub.execute_input":"2025-03-19T06:17:48.936812Z","iopub.status.idle":"2025-03-19T06:17:48.947176Z","shell.execute_reply.started":"2025-03-19T06:17:48.936774Z","shell.execute_reply":"2025-03-19T06:17:48.946109Z"}},"outputs":[{"name":"stdout","text":"MSSubClass           int64\nMSZoning            object\nLotFrontage        float64\nLotArea              int64\nStreet              object\nLotShape            object\nLandContour         object\nUtilities           object\nLotConfig           object\nLandSlope           object\nNeighborhood        object\nCondition1          object\nCondition2          object\nBldgType            object\nHouseStyle          object\nOverallQual          int64\nOverallCond          int64\nRoofStyle           object\nRoofMatl            object\nExterior1st         object\nExterior2nd         object\nMasVnrType          object\nMasVnrArea         float64\nExterQual           object\nExterCond           object\nFoundation          object\nBsmtQual            object\nBsmtCond            object\nBsmtExposure        object\nBsmtFinType1        object\nBsmtUnfSF            int64\nHeating             object\nHeatingQC           object\nCentralAir          object\nElectrical          object\nLowQualFinSF         int64\nBedroomAbvGr         int64\nKitchenAbvGr         int64\nKitchenQual         object\nTotRmsAbvGrd         int64\nFunctional          object\nFireplaces           int64\nFireplaceQu         object\nGarageType          object\nGarageFinish        object\nGarageCars           int64\nGarageQual          object\nPavedDrive          object\nPoolArea             int64\nMiscVal              int64\nMoSold               int64\nSaleType            object\nSaleCondition       object\nhouseage             int64\nhouseremodelage      int64\ntotalsf              int64\ntotalarea            int64\ntotalbaths         float64\ntotalporchsf         int64\ndtype: object\n","output_type":"stream"}],"execution_count":129},{"cell_type":"code","source":"# Convert mixed-type columns to string type for the specified columns\nfor col in ode_cols + ohe_cols:\n    X[col] = X[col].astype(str)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:48.948654Z","iopub.execute_input":"2025-03-19T06:17:48.949039Z","iopub.status.idle":"2025-03-19T06:17:48.971029Z","shell.execute_reply.started":"2025-03-19T06:17:48.949006Z","shell.execute_reply":"2025-03-19T06:17:48.969701Z"}},"outputs":[],"execution_count":130},{"cell_type":"code","source":"X_preprocessed = pipeline.fit_transform(X)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:48.972482Z","iopub.execute_input":"2025-03-19T06:17:48.972896Z","iopub.status.idle":"2025-03-19T06:17:51.198208Z","shell.execute_reply.started":"2025-03-19T06:17:48.972863Z","shell.execute_reply":"2025-03-19T06:17:51.196497Z"}},"outputs":[],"execution_count":131},{"cell_type":"code","source":"# Split the dataset into training (80%) and testing (20%) sets\nX_train, X_test, y_train, y_test = train_test_split(X_preprocessed, y, test_size=0.2, random_state=25)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:51.200402Z","iopub.execute_input":"2025-03-19T06:17:51.200963Z","iopub.status.idle":"2025-03-19T06:17:51.216016Z","shell.execute_reply.started":"2025-03-19T06:17:51.200907Z","shell.execute_reply":"2025-03-19T06:17:51.214668Z"}},"outputs":[],"execution_count":132},{"cell_type":"markdown","source":"## Linear Regression Model","metadata":{}},{"cell_type":"code","source":"\n# Build a Linear Regression model\nlr = LinearRegression()\nlr.fit(X_train, y_train)\n\n# MAPE function\ndef mean_absolute_percentage_error(y_true, y_pred):\n    y_true, y_pred = np.array(y_true), np.array(y_pred)\n    mask = y_true != 0  \n    return np.mean(np.abs((y_true[mask] - y_pred[mask]) / y_true[mask])) * 100\n\n# Make predictions\ny_pred_lr = lr.predict(X_test)\n\n# Calculate metrics\nr2 = r2_score(y_test, y_pred_lr)\nmse = mean_squared_error(y_test, y_pred_lr)\nrmse = np.sqrt(mse)\nmape = mean_absolute_percentage_error(y_test, y_pred_lr)\n\n# Print results\nprint(\"Linear Regression Model Evaluation\")\nprint(f\"R¬≤ Score: {r2:.4f}\")\nprint(f\"RMSE: {rmse:.2f}\")\nprint(f\"MAPE: {mape:.2f}%\")\nprint(\"-\" * 40)\n\n# Calculate residuals\nresiduals = y_test - y_pred_lr\n\n# Plot residuals\nplt.figure(figsize=(8, 5))\nsns.histplot(residuals, bins=30, kde=True, color=\"blue\")\nplt.axvline(x=0, color=\"red\", linestyle=\"dashed\")\nplt.title(\"Residual Distribution\")\nplt.xlabel(\"Residuals\")\nplt.ylabel(\"Frequency\")\nplt.show()\n\n# Residual plot\nplt.figure(figsize=(8, 5))\nsns.scatterplot(x=y_pred_lr, y=residuals, color=\"blue\", alpha=0.6)\nplt.axhline(y=0, color=\"red\", linestyle=\"dashed\")\nplt.title(\"Residuals vs. Predicted Values\")\nplt.xlabel(\"Predicted Values\")\nplt.ylabel(\"Residuals\")\nplt.show()\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:17:51.218172Z","iopub.execute_input":"2025-03-19T06:17:51.218730Z","iopub.status.idle":"2025-03-19T06:17:52.029817Z","shell.execute_reply.started":"2025-03-19T06:17:51.218656Z","shell.execute_reply":"2025-03-19T06:17:52.028607Z"}},"outputs":[{"name":"stdout","text":"Linear Regression Model Evaluation\nR¬≤ Score: -3741447406358658560.0000\nRMSE: 738505019.96\nMAPE: 500087142.19%\n----------------------------------------\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n  with pd.option_context('mode.use_inf_as_na', True):\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 800x500 with 1 Axes>","image/png":""},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 800x500 with 1 Axes>","image/png":""},"metadata":{}}],"execution_count":133},{"cell_type":"markdown","source":"## Random Forest Model ","metadata":{}},{"cell_type":"code","source":"from sklearn.model_selection import GridSearchCV\n\n\n# Initialize Random Forest Regressor\nRFR = RandomForestRegressor(random_state=13)\n\n# Define hyperparameter grid\nparam_grid_RFR = {\n    'max_depth': [5, 10, 15],\n    'n_estimators': [100, 250, 500],\n    'min_samples_split': [3, 5, 10]\n}\n\n# Perform Grid Search with 5-fold Cross Validation\nrfr_cv = GridSearchCV(RFR, param_grid_RFR, cv=5, scoring='neg_mean_squared_error', n_jobs=-1)\nrfr_cv.fit(X_train, y_train)\n\n# Get best parameters and best RMSE from cross-validation\nbest_params = rfr_cv.best_params_\nbest_rmse = np.sqrt(-1 * rfr_cv.best_score_)\n\n# Train model using the best parameters\nbest_rfr = rfr_cv.best_estimator_\n\n# Make predictions on test data\ny_pred_rfr = best_rfr.predict(X_test)\n\n# Compute evaluation metrics\nr2_rfr = r2_score(y_test, y_pred_rfr)\nmse_rfr = mean_squared_error(y_test, y_pred_rfr)\nrmse_rfr = np.sqrt(mse_rfr)\nmape_rfr = mean_absolute_percentage_error(y_test, y_pred_rfr) * 100  # Convert to percentage\n\n# Print results\nprint(\"Random Forest Model Evaluation\")\nprint(f\"Best Parameters: {best_params}\")\nprint(f\"Best RMSE (Cross-Validation): {best_rmse:.2f}\")\nprint(f\"Test R¬≤ Score: {r2_rfr:.4f}\")\nprint(f\"Test RMSE: {rmse_rfr:.2f}\")\nprint(f\"Test MAPE: {mape_rfr:.2f}%\")\nprint(\"-\" * 40)\n\n# Compute residuals\nresiduals_rfr = y_test - y_pred_rfr\n\n# Plot residual distribution\nplt.figure(figsize=(12, 5))\n\nplt.subplot(1, 2, 1)\nsns.histplot(residuals_rfr, bins=50, kde=True, color='blue')\nplt.axvline(0, color='red', linestyle='dashed')\nplt.xlabel(\"Residuals\")\nplt.ylabel(\"Frequency\")\nplt.title(\"Residual Distribution\")\n\n# Plot residuals vs predicted values\nplt.subplot(1, 2, 2)\nplt.scatter(y_pred_rfr, residuals_rfr, alpha=0.5, color='blue')\nplt.axhline(0, color='red', linestyle='dashed')\nplt.xlabel(\"Predicted Values\")\nplt.ylabel(\"Residuals\")\nplt.title(\"Residuals vs. Predicted Values\")\n\nplt.tight_layout()\nplt.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:22:47.958420Z","iopub.execute_input":"2025-03-19T06:22:47.960014Z","iopub.status.idle":"2025-03-19T06:25:36.621198Z","shell.execute_reply.started":"2025-03-19T06:22:47.959962Z","shell.execute_reply":"2025-03-19T06:25:36.619614Z"}},"outputs":[{"name":"stdout","text":"Random Forest Model Evaluation\nBest Parameters: {'max_depth': 15, 'min_samples_split': 3, 'n_estimators': 500}\nBest RMSE (Cross-Validation): 0.13\nTest R¬≤ Score: 0.8675\nTest RMSE: 0.14\nTest MAPE: 80.14%\n----------------------------------------\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n  with pd.option_context('mode.use_inf_as_na', True):\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 1200x500 with 2 Axes>","image/png":""},"metadata":{}}],"execution_count":135},{"cell_type":"markdown","source":"## XGBoost Regression Model","metadata":{}},{"cell_type":"code","source":"# Initialize XGBoost Regressor\nXGB = XGBRegressor(random_state=13)\n\n# Define hyperparameter grid\nparam_grid_XGB = {\n    'learning_rate': [0.05, 0.1, 0.2],\n    'n_estimators': [300],\n    'max_depth': [3],\n    'min_child_weight': [1, 2, 3],\n    'gamma': [0, 0.1, 0.2],\n    'subsample': [0.8, 0.9, 1.0],\n    'colsample_bytree': [0.8, 0.9, 1.0],\n}\n\n# Perform Grid Search with 3-fold Cross Validation\nxgb_cv = GridSearchCV(XGB, param_grid_XGB, cv=3, scoring='neg_mean_squared_error', n_jobs=-1)\nxgb_cv.fit(X_train, y_train)\n\n# Get best parameters and best RMSE from cross-validation\nbest_params_xgb = xgb_cv.best_params_\nbest_rmse_xgb = np.sqrt(-1 * xgb_cv.best_score_)\n\n# Train model using the best parameters\nbest_xgb = xgb_cv.best_estimator_\n\n# Make predictions on test data\ny_pred_xgb = best_xgb.predict(X_test)\n\n# Compute evaluation metrics\nr2_xgb = r2_score(y_test, y_pred_xgb)\nmse_xgb = mean_squared_error(y_test, y_pred_xgb)\nrmse_xgb = np.sqrt(mse_xgb)\nmape_xgb = mean_absolute_percentage_error(y_test, y_pred_xgb) * 100  # Convert to percentage\n\n# Print results\nprint(\"XGBoost Model Evaluation\")\nprint(f\"Best Parameters: {best_params_xgb}\")\nprint(f\"Best RMSE (Cross-Validation): {best_rmse_xgb:.2f}\")\nprint(f\"Test R¬≤ Score: {r2_xgb:.4f}\")\nprint(f\"Test RMSE: {rmse_xgb:.2f}\")\nprint(f\"Test MAPE: {mape_xgb:.2f}%\")\nprint(\"-\" * 40)\n\n# Compute residuals\nresiduals_xgb = y_test - y_pred_xgb\n\n# Plot residual distribution\nplt.figure(figsize=(12, 5))\n\nplt.subplot(1, 2, 1)\nsns.histplot(residuals_xgb, bins=50, kde=True, color='blue')\nplt.axvline(0, color='red', linestyle='dashed')\nplt.xlabel(\"Residuals\")\nplt.ylabel(\"Frequency\")\nplt.title(\"Residual Distribution\")\n\n# Plot residuals vs predicted values\nplt.subplot(1, 2, 2)\nplt.scatter(y_pred_xgb, residuals_xgb, alpha=0.5, color='blue')\nplt.axhline(0, color='red', linestyle='dashed')\nplt.xlabel(\"Predicted Values\")\nplt.ylabel(\"Residuals\")\nplt.title(\"Residuals vs. Predicted Values\")\n\nplt.tight_layout()\nplt.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:38:44.141882Z","iopub.execute_input":"2025-03-19T06:38:44.143164Z","iopub.status.idle":"2025-03-19T06:39:38.154075Z","shell.execute_reply.started":"2025-03-19T06:38:44.143113Z","shell.execute_reply":"2025-03-19T06:39:38.152925Z"}},"outputs":[{"name":"stdout","text":"XGBoost Model Evaluation\nBest Parameters: {'colsample_bytree': 0.8, 'gamma': 0, 'learning_rate': 0.05, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 300, 'subsample': 0.8}\nBest RMSE (Cross-Validation): 0.12\nTest R¬≤ Score: 0.8952\nTest RMSE: 0.12\nTest MAPE: 71.16%\n----------------------------------------\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n  with pd.option_context('mode.use_inf_as_na', True):\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 1200x500 with 2 Axes>","image/png":""},"metadata":{}}],"execution_count":137},{"cell_type":"markdown","source":"## Ridge Model ","metadata":{}},{"cell_type":"code","source":"# Standardize features to avoid scaling issues\nscaler = StandardScaler()\nX_train_scaled = scaler.fit_transform(X_train)\nX_test_scaled = scaler.transform(X_test)\n\n# Initialize Ridge Regression model\nridge = Ridge()\n\n# Define hyperparameter grid\nparam_grid_ridge = {\n    'alpha': [0.05, 0.1, 1, 3, 5, 10],\n    'solver': ['auto', 'svd', 'cholesky', 'lsqr', 'sparse_cg', 'sag']\n}\n\n# Perform Grid Search with 5-fold Cross Validation\nridge_cv = GridSearchCV(ridge, param_grid_ridge, cv=5, scoring='neg_mean_squared_error', n_jobs=-1)\nridge_cv.fit(X_train_scaled, y_train)  # Ensure X_train is scaled if necessary\n\n# Get best model from GridSearch\nbest_ridge = ridge_cv.best_estimator_\n\n# Make predictions on test data\ny_pred_ridge= best_ridge.predict(X_test_scaled)\n\n# Compute evaluation metrics\nrmse = np.sqrt(mean_squared_error(y_test, y_pred_ridge))\nmape = mean_absolute_percentage_error(y_test,y_pred_ridge) * 100  # Convert to %\nr2 = r2_score(y_test, y_pred_ridge)\n\n# Print results\nprint(f\"Best Ridge Parameters: {ridge_cv.best_params_}\")\nprint(f\"Best RMSE (CV): {np.sqrt(-1 * ridge_cv.best_score_):.2f}\")\nprint(f\"Test RMSE: {rmse:.2f}\")\nprint(f\"R-squared (R¬≤): {r2:.4f}\")\nprint(f\"Mean Absolute Percentage Error (MAPE): {mape:.2f}%\")\n\n\n# Compute residuals\nresiduals_ridge = y_test - y_pred_ridge\n\n# Plot residual distribution\nplt.figure(figsize=(12, 5))\n\nplt.subplot(1, 2, 1)\nsns.histplot(residuals_ridge, bins=50, kde=True, color='blue')\nplt.axvline(0, color='red', linestyle='dashed')\nplt.xlabel(\"Residuals\")\nplt.ylabel(\"Frequency\")\nplt.title(\"Residual Distribution\")\n\n# Plot residuals vs predicted values\nplt.subplot(1, 2, 2)\nplt.scatter(y_pred_ridge, residuals_ridge, alpha=0.5, color='blue')\nplt.axhline(0, color='red', linestyle='dashed')\nplt.xlabel(\"Predicted Values\")\nplt.ylabel(\"Residuals\")\nplt.title(\"Residuals vs. Predicted Values\")\n\nplt.tight_layout()\nplt.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:40:14.981959Z","iopub.execute_input":"2025-03-19T06:40:14.982417Z","iopub.status.idle":"2025-03-19T06:40:30.944295Z","shell.execute_reply.started":"2025-03-19T06:40:14.982376Z","shell.execute_reply":"2025-03-19T06:40:30.943066Z"}},"outputs":[{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/sklearn/model_selection/_validation.py:378: FitFailedWarning: \n30 fits failed out of a total of 180.\nThe score on these train-test partitions for these parameters will be set to nan.\nIf these failures are not expected, you can try to debug them by setting error_score='raise'.\n\nBelow are more details about the failures:\n--------------------------------------------------------------------------------\n30 fits failed with the following error:\nTraceback (most recent call last):\n  File \"/opt/conda/lib/python3.10/site-packages/sklearn/linear_model/_ridge.py\", line 129, in _solve_sparse_cg\n    coefs[i], info = sp_linalg.cg(\nTypeError: cg() got an unexpected keyword argument 'tol'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/opt/conda/lib/python3.10/site-packages/sklearn/model_selection/_validation.py\", line 686, in _fit_and_score\n    estimator.fit(X_train, y_train, **fit_params)\n  File \"/opt/conda/lib/python3.10/site-packages/sklearn/linear_model/_ridge.py\", line 1134, in fit\n    return super().fit(X, y, sample_weight=sample_weight)\n  File \"/opt/conda/lib/python3.10/site-packages/sklearn/linear_model/_ridge.py\", line 900, in fit\n    self.coef_, self.n_iter_ = _ridge_regression(\n  File \"/opt/conda/lib/python3.10/site-packages/sklearn/linear_model/_ridge.py\", line 671, in _ridge_regression\n    coef = _solve_sparse_cg(\n  File \"/opt/conda/lib/python3.10/site-packages/sklearn/linear_model/_ridge.py\", line 134, in _solve_sparse_cg\n    coefs[i], info = sp_linalg.cg(C, y_column, maxiter=max_iter, tol=tol)\nTypeError: cg() got an unexpected keyword argument 'tol'\n\n  warnings.warn(some_fits_failed_message, FitFailedWarning)\n/opt/conda/lib/python3.10/site-packages/sklearn/model_selection/_search.py:952: UserWarning: One or more of the test scores are non-finite: [-0.01521132 -0.01521132 -0.01521132 -0.01521515         nan -0.01520564\n -0.01520906 -0.01520906 -0.01520906 -0.01521286         nan -0.01520356\n -0.01516991 -0.01516991 -0.01516991 -0.0151723          nan -0.01516493\n -0.01509093 -0.01509093 -0.01509093 -0.01509266         nan -0.01508669\n -0.01502038 -0.01502038 -0.01502038 -0.01502107         nan -0.01501609\n -0.01486991 -0.01486991 -0.01486991 -0.01487061         nan -0.01486646]\n  warnings.warn(\n","output_type":"stream"},{"name":"stdout","text":"Best Ridge Parameters: {'alpha': 10, 'solver': 'sag'}\nBest RMSE (CV): 0.12\nTest RMSE: 0.12\nR-squared (R¬≤): 0.9020\nMean Absolute Percentage Error (MAPE): 69.36%\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n  with pd.option_context('mode.use_inf_as_na', True):\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 1200x500 with 2 Axes>","image/png":""},"metadata":{}}],"execution_count":138},{"cell_type":"markdown","source":"## Gradient Boosting Regressor","metadata":{}},{"cell_type":"code","source":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.ensemble import GradientBoostingRegressor\nfrom sklearn.model_selection import RandomizedSearchCV\nfrom sklearn.metrics import mean_squared_error, r2_score\n\n# Initialize Gradient Boosting Regressor with early stopping\nGBR = GradientBoostingRegressor(n_estimators=1000,  # Large but will stop early\n                                validation_fraction=0.1,  # Use 10% of data for early stopping\n                                n_iter_no_change=10,  # Stop if no improvement for 10 rounds\n                                tol=0.001)  # Tolerance for stopping\n\n# Define hyperparameter search space\nparam_grid_GBR = {\n    'max_depth': [10, 15, 20],\n    'n_estimators': [100, 300, 500],  # Reduced range\n    'min_samples_leaf': [10, 25, 50],\n    'learning_rate': [0.01, 0.05, 0.1],  # Removed very low 0.001\n    'max_features': [0.3, 0.7]  # Focus on fewer options\n}\n\n# Use RandomizedSearchCV instead of GridSearchCV (much faster)\nGBR_cv = RandomizedSearchCV(GBR, param_distributions=param_grid_GBR, \n                            n_iter=30,  # Test only 30 random combinations\n                            cv=3,  # Fewer folds (was 5)\n                            scoring='neg_mean_squared_error', \n                            n_jobs=-1,  # Parallel processing\n                            random_state=42, \n                            verbose=1)\n\n# Fit model\nGBR_cv.fit(X_train, y_train)\n\n# Best model\nbest_GBR = GBR_cv.best_estimator_\n\n# Predictions\ny_pred_GBR = best_GBR.predict(X_test)\n\n# Compute evaluation metrics\nrmse = np.sqrt(mean_squared_error(y_test, y_pred_GBR))\nr2 = r2_score(y_test, y_pred_GBR)\n\n# Avoid division by zero in MAPE\nmape = np.mean(np.abs((y_test - y_pred_GBR) / np.where(y_test == 0, 1e-9, y_test))) * 100\n\n# Print results\nprint(f\"Best GBR Parameters: {GBR_cv.best_params_}\")\nprint(f\"Best RMSE (CV): {np.sqrt(-GBR_cv.best_score_):.4f}\")\nprint(f\"Test RMSE: {rmse:.4f}\")\nprint(f\"R-squared (R¬≤): {r2:.4f}\")\nprint(f\"Mean Absolute Percentage Error (MAPE): {mape:.2f}%\")\n\n# Compute residuals\nresiduals_GBR = y_test - y_pred_GBR\n\n# Plot residuals\nplt.figure(figsize=(12, 5))\n\nplt.subplot(1, 2, 1)\nsns.histplot(residuals_GBR, bins=50, kde=True, color='blue')\nplt.axvline(0, color='red', linestyle='dashed')\nplt.xlabel(\"Residuals\")\nplt.ylabel(\"Frequency\")\nplt.title(\"Residual Distribution\")\n\nplt.subplot(1, 2, 2)\nplt.scatter(y_pred_GBR, residuals_GBR, alpha=0.5, color='blue')\nplt.axhline(0, color='red', linestyle='dashed')\nplt.xlabel(\"Predicted Values\")\nplt.ylabel(\"Residuals\")\nplt.title(\"Residuals vs. Predicted Values\")\n\nplt.tight_layout()\nplt.show()\n","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"## Lightgbm model ","metadata":{}},{"cell_type":"code","source":"from lightgbm import LGBMRegressor\n\n# Initialize the regressor\nlgbm_regressor = LGBMRegressor()\n\n# Define the parameter grid\nparam_grid_lgbm = {\n    'boosting_type': ['gbdt', 'dart'],\n    'num_leaves': [20, 30, 40],\n    'learning_rate': [0.01, 0.05, 0.1],\n    'n_estimators': [100, 200, 300]\n}\n\n# Set up GridSearchCV with cross-validation\nlgbm_cv = GridSearchCV(lgbm_regressor, param_grid_lgbm, cv=3, scoring='neg_mean_squared_error', n_jobs=-1)\nlgbm_cv.fit(X_train, y_train)\n\n# Get the best model\nbest_lgbm = lgbm_cv.best_estimator_\n\n# Predictions on test data\ny_pred_lgbm = best_lgbm.predict(X_test)\n\n# Compute evaluation metrics\nrmse = np.sqrt(mean_squared_error(y_test, y_pred_lgbm))\nr2 = r2_score(y_test, y_pred_lgbm)\nmape = mean_absolute_percentage_error(y_test, y_pred_lgbm) * 100\n\n# Print results\nprint(f\"Best LGBM Parameters: {lgbm_cv.best_params_}\")\nprint(f\"Best RMSE (CV): {np.sqrt(-lgbm_cv.best_score_):.4f}\")\nprint(f\"Test RMSE: {rmse:.4f}\")\nprint(f\"R-squared (R¬≤): {r2:.4f}\")\nprint(f\"Mean Absolute Percentage Error (MAPE): {mape:.2f}%\")\n\n# Compute residuals\nresiduals_lgbm = y_test - y_pred_lgbm\n\n# Plot residual distribution\nplt.figure(figsize=(12, 5))\n\nplt.subplot(1, 2, 1)\nsns.histplot(y_pred_lgbm, bins=50, kde=True, color='blue')\nplt.axvline(0, color='red', linestyle='dashed')\nplt.xlabel(\"Residuals\")\nplt.ylabel(\"Frequency\")\nplt.title(\"Residual Distribution\")\n\n# Plot residuals vs predicted values\nplt.subplot(1, 2, 2)\nplt.scatter(y_pred_lgbm, residuals_lgbm, alpha=0.5, color='blue')\nplt.axhline(0, color='red', linestyle='dashed')\nplt.xlabel(\"Predicted Values\")\nplt.ylabel(\"Residuals\")\nplt.title(\"Residuals vs. Predicted Values\")\n\nplt.tight_layout()\nplt.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T07:02:22.984853Z","iopub.execute_input":"2025-03-19T07:02:22.985322Z","iopub.status.idle":"2025-03-19T07:03:20.966831Z","shell.execute_reply.started":"2025-03-19T07:02:22.985282Z","shell.execute_reply":"2025-03-19T07:03:20.965464Z"}},"outputs":[{"name":"stdout","text":"[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.006281 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.005614 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.006672 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.006189 seconds.\nYou can set `force_col_wise=true` to remove the overhead.\n[LightGBM] [Info] Total Bins 1805\n[LightGBM] [Info] Total Bins 1817\n[LightGBM] [Info] Total Bins 1824\n[LightGBM] [Info] Total Bins 1805\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 102\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 104\n[LightGBM] [Info] Number of data points in the train set: 768, number of used features: 104\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 104\n[LightGBM] [Info] Start training from score 12.012552\n[LightGBM] [Info] Start training from score 12.012552\n[LightGBM] [Info] Start training from score 12.046194\n[LightGBM] [Info] Start training from score 12.010981\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000543 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1817\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 102\n[LightGBM] [Info] Start training from score 12.010981\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.009629 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1824\n[LightGBM] [Info] Number of data points in the train set: 768, number of used features: 104\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Start training from score 12.046194\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000440 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1805\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 104\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Start training from score 12.012552\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.012609 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1817\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 102\n[LightGBM] [Info] Start training from score 12.010981\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.009677 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1824\n[LightGBM] [Info] Number of data points in the train set: 768, number of used features: 104\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Start training from score 12.046194\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000430 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1805\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 104\n[LightGBM] [Info] Start training from score 12.012552\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000560 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1817\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 102\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Start training from score 12.010981\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.009944 seconds.\nYou can set `force_col_wise=true` to remove the overhead.\n[LightGBM] [Info] Total Bins 1824\n[LightGBM] [Info] Number of data points in the train set: 768, number of used features: 104\n[LightGBM] [Info] Start training from score 12.046194\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000442 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1805\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 104\n[LightGBM] [Info] Start training from score 12.012552\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000581 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Total Bins 1817\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 102\n[LightGBM] [Info] Start training from score 12.010981\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000578 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Total Bins 1824\n[LightGBM] [Info] Number of data points in the train set: 768, number of used features: 104\n[LightGBM] [Info] Start training from score 12.046194\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000409 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1805\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 104\n[LightGBM] [Info] Start training from score 12.012552\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000549 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1817\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 102[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Info] Start training from score 12.010981\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.003607 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1824\n[LightGBM] [Info] Number of data points in the train set: 768, number of used features: 104\n[LightGBM] [Info] Start training from score 12.046194\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000472 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Total Bins 1805\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 104\n[LightGBM] [Info] Start training from score 12.012552\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000541 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Total Bins 1817\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 102\n[LightGBM] [Info] Start training from score 12.010981\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000603 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Total Bins 1824\n[LightGBM] [Info] Number of data points in the train set: 768, number of used features: 104\n[LightGBM] [Info] Start training from score 12.046194\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.009803 seconds.\nYou can set `force_col_wise=true` to remove the overhead.\n[LightGBM] [Info] Total Bins 1805\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 104\n[LightGBM] [Info] Start training from score 12.012552\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000553 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1817\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 102\n[LightGBM] [Info] Start training from score 12.010981\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.009626 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1824\n[LightGBM] [Info] Number of data points in the train set: 768, number of used features: 104\n[LightGBM] [Info] Start training from score 12.046194\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000451 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Total Bins 1805\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 104\n[LightGBM] [Info] Start training from score 12.012552\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000560 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Total Bins 1817\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 102\n[LightGBM] [Info] Start training from score 12.010981\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.009758 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1824\n[LightGBM] [Info] Number of data points in the train set: 768, number of used features: 104\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Start training from score 12.046194\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000452 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Total Bins 1805\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 104\n[LightGBM] [Info] Start training from score 12.012552\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000548 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Total Bins 1817\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 102\n[LightGBM] [Info] Start training from score 12.010981\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000604 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Total Bins 1824\n[LightGBM] [Info] Number of data points in the train set: 768, number of used features: 104\n[LightGBM] [Info] Start training from score 12.046194\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000441 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1805\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 104\n[LightGBM] [Info] Start training from score 12.012552\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000586 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Total Bins 1817\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 102\n[LightGBM] [Info] Start training from score 12.010981\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000601 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1824\n[LightGBM] [Info] Number of data points in the train set: 768, number of used features: 104\n[LightGBM] [Info] Start training from score 12.046194\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000711 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Total Bins 1805\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 104\n[LightGBM] [Info] Start training from score 12.012552\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.009601 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1817\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 102\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000872 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Start training from score 12.010981\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Total Bins 1824\n[LightGBM] [Info] Number of data points in the train set: 768, number of used features: 104\n[LightGBM] [Info] Start training from score 12.046194\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000471 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Total Bins 1805\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 104\n[LightGBM] [Info] Start training from score 12.012552\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000550 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1817\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 102\n[LightGBM] [Info] Start training from score 12.010981\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.009619 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1824\n[LightGBM] [Info] Number of data points in the train set: 768, number of used features: 104\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.009514 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1805\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 104\n[LightGBM] [Info] Start training from score 12.012552\n[LightGBM] [Info] Start training from score 12.046194\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000600 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1817\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 102\n[LightGBM] [Info] Start training from score 12.010981\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.009627 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1824\n[LightGBM] [Info] Number of data points in the train set: 768, number of used features: 104\n[LightGBM] [Info] Start training from score 12.046194\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.010529 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1805\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 104\n[LightGBM] [Info] Start training from score 12.012552\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000540 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Total Bins 1817\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 102\n[LightGBM] [Info] Start training from score 12.010981\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.009691 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1824\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Number of data points in the train set: 768, number of used features: 104\n[LightGBM] [Info] Start training from score 12.046194\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000455 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1805\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 104[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Info] Start training from score 12.012552\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.010106 seconds.\nYou can set `force_col_wise=true` to remove the overhead.\n[LightGBM] [Info] Total Bins 1817\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 102\n[LightGBM] [Info] Start training from score 12.010981\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000601 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Total Bins 1824\n[LightGBM] [Info] Number of data points in the train set: 768, number of used features: 104\n[LightGBM] [Info] Start training from score 12.046194\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000458 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1805\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 104\n[LightGBM] [Info] Start training from score 12.012552\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000546 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1817\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 102\n[LightGBM] [Info] Start training from score 12.010981\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000631 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Total Bins 1824\n[LightGBM] [Info] Number of data points in the train set: 768, number of used features: 104\n[LightGBM] [Info] Start training from score 12.046194\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000493 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1805\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 104\n[LightGBM] [Info] Start training from score 12.012552\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000535 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Total Bins 1817\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 102\n[LightGBM] [Info] Start training from score 12.010981\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000582 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1824\n[LightGBM] [Info] Number of data points in the train set: 768, number of used features: 104\n[LightGBM] [Info] Start training from score 12.046194\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000483 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1805\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 104\n[LightGBM] [Info] Start training from score 12.012552\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000539 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1817\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 102\n[LightGBM] [Info] Start training from score 12.010981\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000579 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1824\n[LightGBM] [Info] Number of data points in the train set: 768, number of used features: 104\n[LightGBM] [Info] Start training from score 12.046194\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000440 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1805\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 104\n[LightGBM] [Info] Start training from score 12.012552\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000568 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Info] Total Bins 1817\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 102\n[LightGBM] [Info] Start training from score 12.010981\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000586 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Total Bins 1824\n[LightGBM] [Info] Number of data points in the train set: 768, number of used features: 104\n[LightGBM] [Info] Start training from score 12.046194\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000423 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1805\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 104\n[LightGBM] [Info] Start training from score 12.012552\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000553 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1817\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 102\n[LightGBM] [Info] Start training from score 12.010981\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000625 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Total Bins 1824\n[LightGBM] [Info] Number of data points in the train set: 768, number of used features: 104\n[LightGBM] [Info] Start training from score 12.046194\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.009834 seconds.\nYou can set `force_col_wise=true` to remove the overhead.\n[LightGBM] [Info] Total Bins 1805\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 104\n[LightGBM] [Info] Start training from score 12.012552\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000544 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1817\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 102\n[LightGBM] [Info] Start training from score 12.010981\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000576 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1824\n[LightGBM] [Info] Number of data points in the train set: 768, number of used features: 104\n[LightGBM] [Info] Start training from score 12.046194\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000417 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1805\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 104\n[LightGBM] [Info] Start training from score 12.012552\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000554 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1817\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 102\n[LightGBM] [Info] Start training from score 12.010981\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000575 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1824\n[LightGBM] [Info] Number of data points in the train set: 768, number of used features: 104\n[LightGBM] [Info] Start training from score 12.046194\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000438 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Total Bins 1805\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 104\n[LightGBM] [Info] Start training from score 12.012552\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000537 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1817\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 102\n[LightGBM] [Info] Start training from score 12.010981\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000616 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Total Bins 1824\n[LightGBM] [Info] Number of data points in the train set: 768, number of used features: 104\n[LightGBM] [Info] Start training from score 12.046194\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000429 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1805\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 104\n[LightGBM] [Info] Start training from score 12.012552\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000578 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Total Bins 1817\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 102\n[LightGBM] [Info] Start training from score 12.010981\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000583 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1824\n[LightGBM] [Info] Number of data points in the train set: 768, number of used features: 104\n[LightGBM] [Info] Start training from score 12.046194\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000421 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1805\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 104\n[LightGBM] [Info] Start training from score 12.012552\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000547 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1817\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 102\n[LightGBM] [Info] Start training from score 12.010981\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000565 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Total Bins 1824\n[LightGBM] [Info] Number of data points in the train set: 768, number of used features: 104\n[LightGBM] [Info] Start training from score 12.046194\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000416 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Total Bins 1805\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 104\n[LightGBM] [Info] Start training from score 12.012552\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000531 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Total Bins 1817\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 102\n[LightGBM] [Info] Start training from score 12.010981\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000561 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1824\n[LightGBM] [Info] Number of data points in the train set: 768, number of used features: 104\n[LightGBM] [Info] Start training from score 12.046194\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000443 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1805\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 104\n[LightGBM] [Info] Start training from score 12.012552\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000562 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1817\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 102\n[LightGBM] [Info] Start training from score 12.010981\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000554 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Total Bins 1824\n[LightGBM] [Info] Number of data points in the train set: 768, number of used features: 104\n[LightGBM] [Info] Start training from score 12.046194\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000458 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Total Bins 1805\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 104\n[LightGBM] [Info] Start training from score 12.012552\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000528 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Total Bins 1817\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 102\n[LightGBM] [Info] Start training from score 12.010981\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.009668 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1824\n[LightGBM] [Info] Number of data points in the train set: 768, number of used features: 104[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Info] Start training from score 12.046194\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000417 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Total Bins 1805\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 104\n[LightGBM] [Info] Start training from score 12.012552\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000567 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1817\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 102\n[LightGBM] [Info] Start training from score 12.010981\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000582 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1824\n[LightGBM] [Info] Number of data points in the train set: 768, number of used features: 104\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Start training from score 12.046194\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000443 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Total Bins 1805\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 104\n[LightGBM] [Info] Start training from score 12.012552\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000559 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Info] Total Bins 1817\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 102\n[LightGBM] [Info] Start training from score 12.010981\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.009674 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1824\n[LightGBM] [Info] Number of data points in the train set: 768, number of used features: 104\n[LightGBM] [Info] Start training from score 12.046194\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000448 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1805\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 104\n[LightGBM] [Info] Start training from score 12.012552\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.009636 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1817\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 102\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Start training from score 12.010981\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000583 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Total Bins 1824\n[LightGBM] [Info] Number of data points in the train set: 768, number of used features: 104\n[LightGBM] [Info] Start training from score 12.046194\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000438 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1805\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 104\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Start training from score 12.012552\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000541 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1817\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 102\n[LightGBM] [Info] Start training from score 12.010981\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000593 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Total Bins 1824\n[LightGBM] [Info] Number of data points in the train set: 768, number of used features: 104\n[LightGBM] [Info] Start training from score 12.046194\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000417 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Total Bins 1805\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 104\n[LightGBM] [Info] Start training from score 12.012552\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000536 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Total Bins 1817\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 102\n[LightGBM] [Info] Start training from score 12.010981\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000562 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1824\n[LightGBM] [Info] Number of data points in the train set: 768, number of used features: 104\n[LightGBM] [Info] Start training from score 12.046194\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000485 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1805\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 104\n[LightGBM] [Info] Start training from score 12.012552\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000553 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Total Bins 1817\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 102\n[LightGBM] [Info] Start training from score 12.010981\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000642 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Total Bins 1824\n[LightGBM] [Info] Number of data points in the train set: 768, number of used features: 104\n[LightGBM] [Info] Start training from score 12.046194\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000558 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1805\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 104\n[LightGBM] [Info] Start training from score 12.012552\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000555 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1817\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 102\n[LightGBM] [Info] Start training from score 12.010981\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000548 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1824\n[LightGBM] [Info] Number of data points in the train set: 768, number of used features: 104\n[LightGBM] [Info] Start training from score 12.046194\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000428 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Total Bins 1805\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 104\n[LightGBM] [Info] Start training from score 12.012552\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000572 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Info] Total Bins 1817\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 102\n[LightGBM] [Info] Start training from score 12.010981\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000574 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Total Bins 1824\n[LightGBM] [Info] Number of data points in the train set: 768, number of used features: 104\n[LightGBM] [Info] Start training from score 12.046194\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000476 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Total Bins 1805\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 104\n[LightGBM] [Info] Start training from score 12.012552\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000535 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Total Bins 1817\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 102\n[LightGBM] [Info] Start training from score 12.010981\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000586 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1824\n[LightGBM] [Info] Number of data points in the train set: 768, number of used features: 104\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000441 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Start training from score 12.046194\n[LightGBM] [Info] Total Bins 1805\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 104\n[LightGBM] [Info] Start training from score 12.012552\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000528 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Total Bins 1817\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 102\n[LightGBM] [Info] Start training from score 12.010981\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.009645 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1824\n[LightGBM] [Info] Number of data points in the train set: 768, number of used features: 104\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.009544 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1805\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 104\n[LightGBM] [Info] Start training from score 12.012552[LightGBM] [Info] Start training from score 12.046194\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000556 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1817\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 102\n[LightGBM] [Info] Start training from score 12.010981\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.009643 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1824\n[LightGBM] [Info] Number of data points in the train set: 768, number of used features: 104\n[LightGBM] [Info] Start training from score 12.046194\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000456 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1805\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 104\n[LightGBM] [Info] Start training from score 12.012552\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000543 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1817\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 102\n[LightGBM] [Info] Start training from score 12.010981\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000551 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Total Bins 1824\n[LightGBM] [Info] Number of data points in the train set: 768, number of used features: 104\n[LightGBM] [Info] Start training from score 12.046194\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000471 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1805[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 104\n[LightGBM] [Info] Start training from score 12.012552\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000545 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Total Bins 1817\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 102\n[LightGBM] [Info] Start training from score 12.010981\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.009622 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1824\n[LightGBM] [Info] Number of data points in the train set: 768, number of used features: 104\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Start training from score 12.046194\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000432 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Total Bins 1805\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 104\n[LightGBM] [Info] Start training from score 12.012552\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000575 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1817\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 102\n[LightGBM] [Info] Start training from score 12.010981\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.009635 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1824\n[LightGBM] [Info] Number of data points in the train set: 768, number of used features: 104\n[LightGBM] [Info] Start training from score 12.046194\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.009514 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1805\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 104\n[LightGBM] [Info] Start training from score 12.012552\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.009623 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1817\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 102\n[LightGBM] [Info] Start training from score 12.010981\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.009625 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1824\n[LightGBM] [Info] Number of data points in the train set: 768, number of used features: 104\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Start training from score 12.046194\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000473 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1805\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 104\n[LightGBM] [Info] Start training from score 12.012552\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.009664 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1817\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 102\n[LightGBM] [Info] Start training from score 12.010981\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000629 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Total Bins 1824\n[LightGBM] [Info] Number of data points in the train set: 768, number of used features: 104\n[LightGBM] [Info] Start training from score 12.046194\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000450 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1805\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 104\n[LightGBM] [Info] Start training from score 12.012552\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000564 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Total Bins 1817\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 102\n[LightGBM] [Info] Start training from score 12.010981\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.009657 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1824\n[LightGBM] [Info] Number of data points in the train set: 768, number of used features: 104\n[LightGBM] [Info] Start training from score 12.046194\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000424 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Total Bins 1805\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 104\n[LightGBM] [Info] Start training from score 12.012552\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.009598 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1817\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 102\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Start training from score 12.010981\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000581 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1824\n[LightGBM] [Info] Number of data points in the train set: 768, number of used features: 104\n[LightGBM] [Info] Start training from score 12.046194\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000445 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Total Bins 1805\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 104\n[LightGBM] [Info] Start training from score 12.012552\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.009625 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1817\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 102\n[LightGBM] [Info] Start training from score 12.010981\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000584 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1824\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Number of data points in the train set: 768, number of used features: 104\n[LightGBM] [Info] Start training from score 12.046194\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000427 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Total Bins 1805\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 104\n[LightGBM] [Info] Start training from score 12.012552\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000556 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Total Bins 1817\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 102\n[LightGBM] [Info] Start training from score 12.010981\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.009684 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1824\n[LightGBM] [Info] Number of data points in the train set: 768, number of used features: 104\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Start training from score 12.046194\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000422 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1805\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 104\n[LightGBM] [Info] Start training from score 12.012552\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000539 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1817\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 102\n[LightGBM] [Info] Start training from score 12.010981\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.009641 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1824\n[LightGBM] [Info] Number of data points in the train set: 768, number of used features: 104\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Start training from score 12.046194\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000431 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Total Bins 1805\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 104\n[LightGBM] [Info] Start training from score 12.012552\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000562 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1817\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 102\n[LightGBM] [Info] Start training from score 12.010981\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.009693 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1824\n[LightGBM] [Info] Number of data points in the train set: 768, number of used features: 104\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Start training from score 12.046194\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000424 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Total Bins 1805\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 104\n[LightGBM] [Info] Start training from score 12.012552\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000615 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Total Bins 1817\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 102\n[LightGBM] [Info] Start training from score 12.010981\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000586 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Total Bins 1824\n[LightGBM] [Info] Number of data points in the train set: 768, number of used features: 104\n[LightGBM] [Info] Start training from score 12.046194\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000459 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1805\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 104\n[LightGBM] [Info] Start training from score 12.012552\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000531 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1817\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 102\n[LightGBM] [Info] Start training from score 12.010981\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000566 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1824\n[LightGBM] [Info] Number of data points in the train set: 768, number of used features: 104\n[LightGBM] [Info] Start training from score 12.046194\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000437 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1805\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 104\n[LightGBM] [Info] Start training from score 12.012552\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000522 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Total Bins 1817\n[LightGBM] [Info] Number of data points in the train set: 767, number of used features: 102\n[LightGBM] [Info] Start training from score 12.010981\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000576 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1824\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Number of data points in the train set: 768, number of used features: 104\n[LightGBM] [Info] Start training from score 12.046194\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.002218 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 2000\n[LightGBM] [Info] Number of data points in the train set: 1151, number of used features: 111\n[LightGBM] [Info] Start training from score 12.023252\nBest LGBM Parameters: {'boosting_type': 'gbdt', 'learning_rate': 0.05, 'n_estimators': 200, 'num_leaves': 20}\nBest RMSE (CV): 0.1239\nTest RMSE: 0.1313\nR-squared (R¬≤): 0.8817\nMean Absolute Percentage Error (MAPE): 75.06%\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n  with pd.option_context('mode.use_inf_as_na', True):\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 1200x500 with 2 Axes>","image/png":""},"metadata":{}}],"execution_count":141},{"cell_type":"markdown","source":"## Catboost Model","metadata":{}},{"cell_type":"code","source":"# Import the necessary module\nfrom catboost import CatBoostRegressor\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T07:23:58.824444Z","iopub.execute_input":"2025-03-19T07:23:58.824986Z","iopub.status.idle":"2025-03-19T07:23:58.833381Z","shell.execute_reply.started":"2025-03-19T07:23:58.824944Z","shell.execute_reply":"2025-03-19T07:23:58.832241Z"}},"outputs":[],"execution_count":143},{"cell_type":"code","source":"\n# Initialize the CatBoost Regressor\ncatboost = CatBoostRegressor(loss_function='RMSE', verbose=False)\n\n# Define the parameter grid\nparam_grid_cat = {\n    'iterations': [100, 500, 1000],\n    'depth': [4, 6, 8, 10],\n    'learning_rate': [0.01, 0.05, 0.1, 0.5]\n}\n\n# Set up GridSearchCV with cross-validation\ncat_cv = GridSearchCV(catboost, param_grid_cat, cv=3, scoring='neg_mean_squared_error', n_jobs=-1)\ncat_cv.fit(X_train, y_train)\n\n# Get the best model\nbest_catboost = cat_cv.best_estimator_\n\n# Predictions on test data\ny_pred_catboost = best_catboost.predict(X_test)\n\n# Compute evaluation metrics\nrmse = np.sqrt(mean_squared_error(y_test, y_pred_catboost))\nr2 = r2_score(y_test, y_pred_catboost)\nmape = mean_absolute_percentage_error(y_test, y_pred_catboost) * 100\n\n# Print results\nprint(f\"Best CatBoost Parameters: {cat_cv.best_params_}\")\nprint(f\"Best RMSE (CV): {np.sqrt(-cat_cv.best_score_):.4f}\")\nprint(f\"Test RMSE: {rmse:.4f}\")\nprint(f\"R-squared (R¬≤): {r2:.4f}\")\nprint(f\"Mean Absolute Percentage Error (MAPE): {mape:.2f}%\")\n\n# Compute residuals\nresiduals_ridge = y_test - y_pred_catboost\n\n# Plot residual distribution\nplt.figure(figsize=(12, 5))\n\nplt.subplot(1, 2, 1)\nsns.histplot(y_pred_catboost, bins=50, kde=True, color='blue')\nplt.axvline(0, color='red', linestyle='dashed')\nplt.xlabel(\"Residuals\")\nplt.ylabel(\"Frequency\")\nplt.title(\"Residual Distribution\")\n\n# Plot residuals vs predicted values\nplt.subplot(1, 2, 2)\nplt.scatter(y_pred_catboost, residuals_ridge, alpha=0.5, color='blue')\nplt.axhline(0, color='red', linestyle='dashed')\nplt.xlabel(\"Predicted Values\")\nplt.ylabel(\"Residuals\")\nplt.title(\"Residuals vs. Predicted Values\")\n\nplt.tight_layout()\nplt.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T07:23:59.788169Z","iopub.execute_input":"2025-03-19T07:23:59.788641Z","iopub.status.idle":"2025-03-19T07:32:20.161935Z","shell.execute_reply.started":"2025-03-19T07:23:59.788563Z","shell.execute_reply":"2025-03-19T07:32:20.160664Z"}},"outputs":[{"name":"stdout","text":"Best CatBoost Parameters: {'depth': 4, 'iterations': 500, 'learning_rate': 0.05}\nBest RMSE (CV): 0.1153\nTest RMSE: 0.1196\nR-squared (R¬≤): 0.9018\nMean Absolute Percentage Error (MAPE): 69.50%\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n  with pd.option_context('mode.use_inf_as_na', True):\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 1200x500 with 2 Axes>","image/png":""},"metadata":{}}],"execution_count":144},{"cell_type":"markdown","source":"## Compare the performance of each model across different metrics.\n- RMSE (Root Mean Squared Error) ‚Üí Lower is better\n-  R¬≤ (Coefficient of Determination) ‚Üí Higher is better\n- MAPE (Mean Absolute Percentage Error) ‚Üí Lower is better","metadata":{}},{"cell_type":"code","source":"\n# Store model results\nresults = {\n    \"Model\": [\"Linear Regression\", \"Random Forest\", \"XGBoost\", \"Ridge Regression\",\"Gradient Boost Regressor\", \"LightGBM\", \"CatBoost\"],\n    \"RMSE\": [738505019.96, 0.14, 0.12, 0.12,0.1216 , 0.1313, 0.1196],  \n    \"R¬≤\": [-3741447406358658560.00, 0.8675, 0.8952, 0.9020,0.8985 ,0.8817, 0.9018],\n    \"MAPE(%)\": [500087142.19, 80.14, 71.16, 69.36,67.61, 75.06, 69.50]\n}\n\n# Convert to DataFrame\ndf_results = pd.DataFrame(results)\n\n# Display the DataFrame\ndf_results\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T07:40:06.661062Z","iopub.execute_input":"2025-03-19T07:40:06.661727Z","iopub.status.idle":"2025-03-19T07:40:06.682948Z","shell.execute_reply.started":"2025-03-19T07:40:06.661672Z","shell.execute_reply":"2025-03-19T07:40:06.681494Z"}},"outputs":[{"execution_count":145,"output_type":"execute_result","data":{"text/plain":"                      Model          RMSE            R¬≤       MAPE(%)\n0         Linear Regression  7.385050e+08 -3.741447e+18  5.000871e+08\n1             Random Forest  1.400000e-01  8.675000e-01  8.014000e+01\n2                   XGBoost  1.200000e-01  8.952000e-01  7.116000e+01\n3          Ridge Regression  1.200000e-01  9.020000e-01  6.936000e+01\n4  Gradient Boost Regressor  1.216000e-01  8.985000e-01  6.761000e+01\n5                  LightGBM  1.313000e-01  8.817000e-01  7.506000e+01\n6                  CatBoost  1.196000e-01  9.018000e-01  6.950000e+01","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Model</th>\n      <th>RMSE</th>\n      <th>R¬≤</th>\n      <th>MAPE(%)</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Linear Regression</td>\n      <td>7.385050e+08</td>\n      <td>-3.741447e+18</td>\n      <td>5.000871e+08</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Random Forest</td>\n      <td>1.400000e-01</td>\n      <td>8.675000e-01</td>\n      <td>8.014000e+01</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>XGBoost</td>\n      <td>1.200000e-01</td>\n      <td>8.952000e-01</td>\n      <td>7.116000e+01</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Ridge Regression</td>\n      <td>1.200000e-01</td>\n      <td>9.020000e-01</td>\n      <td>6.936000e+01</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Gradient Boost Regressor</td>\n      <td>1.216000e-01</td>\n      <td>8.985000e-01</td>\n      <td>6.761000e+01</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>LightGBM</td>\n      <td>1.313000e-01</td>\n      <td>8.817000e-01</td>\n      <td>7.506000e+01</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>CatBoost</td>\n      <td>1.196000e-01</td>\n      <td>9.018000e-01</td>\n      <td>6.950000e+01</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":145},{"cell_type":"markdown","source":"### Best Model Based on the Comparison\nThe best-performing model is **CatBoost**, as it has:  \n- **Lowest RMSE** (1.196e-01) ‚Üí Indicates minimal prediction error.  \n- **Highest R¬≤ Score** (0.9018) ‚Üí Shows strong predictive power.  \n- **Lowest MAPE** (69.5%) ‚Üí Suggests better relative accuracy compared to others.  \n\n### **Why is CatBoost the Best?**\n- 1Ô∏è. **Handles Categorical Features Well** ‚Äì Unlike Linear Regression, which struggles with non-linearity.  \n- 2Ô∏è. **Robust to Outliers** ‚Äì Gradient boosting methods are less sensitive to extreme values.  \n- 3Ô∏è. **Better Generalization** ‚Äì Prevents overfitting while capturing complex patterns.\n- 4Ô∏è. **Regularization & Feature Selection** ‚Äì Reduces noise and improves prediction stability.  \n\nOverall, **CatBoost** outperforms all models in accuracy and stability.\n","metadata":{}},{"cell_type":"markdown","source":"### Reasons why your Linear Regression metrics are extremely large:\n\n- 1Ô∏è. Data Scaling Issues ‚Äì Feature values vary greatly, leading to unstable coefficients.\n- 2Ô∏è. Extreme Outliers ‚Äì Large deviations in y_train or y_test distort predictions.\n- 3Ô∏è. Poor Feature Selection ‚Äì Irrelevant or highly correlated features negatively impact the model.\n- 4Ô∏è. Non-Linear Relationships ‚Äì Linear Regression assumes linearity; real-world data often isn't.\n- 5Ô∏è. High Multicollinearity ‚Äì Strong correlations between independent variables cause instability.","metadata":{}},{"cell_type":"markdown","source":"## Feature Importance Analysis\n\n### üéØ What is Feature Importance?\nFeature importance helps determine which input variables (features) have the most impact on the target variable in a predictive model. This analysis enhances model interpretability and can guide feature selection.\n\n---\n\n### üìå Why Perform Feature Importance Analysis?\n‚úÖ Identify key predictors affecting the outcome.  \n‚úÖ Reduce dimensionality by eliminating less important features.  \n‚úÖ Improve model interpretability and trustworthiness.  \n‚úÖ Enhance model efficiency by reducing overfitting.  \n\n---\n\n### üî• When to Use Each Method?\n| Method | Best For | Pros | Cons |\n|--------|---------|------|------|\n| **Tree-based** | Tree models | Fast, built-in | Biased toward high-cardinality features |\n| **SHAP** | Any model | Detailed insights | Computationally expensive |\n| **Permutation** | Any model | Model-agnostic | Slower for large datasets |\n\n---\n\n### üöÄ Next Steps\n- Analyze the results: Do the most important features make sense?\n- Consider dropping low-importance features to improve efficiency.\n- If interpretability is crucial, SHAP may be the best choice.\n\n","metadata":{}},{"cell_type":"code","source":"\n# Ensure X_train is a DataFrame before extracting column names\nif isinstance(X_train, pd.DataFrame):\n    feature_names = X_train.columns\nelse:\n    feature_names = [f\"Feature_{i}\" for i in range(X_train.shape[1])]  print(type(X_train))  # Check if it's a DataFrame or NumPy array\nprint(X_train.shape)  # Check dimensions\nif isinstance(X_train, pd.DataFrame):\n    print(X_train.columns)  # Print column names if it's a DataFrame\n\n\n# Create a DataFrame for feature importance\nfeature_importance_df = pd.DataFrame({\n    'Feature': feature_names,\n    'Importance': best_xgb.feature_importances_\n})\n\n# Sort by importance (descending order)\nfeature_importance_df = feature_importance_df.sort_values(by=\"Importance\", ascending=False)\n\n# Plot feature importance\nplt.figure(figsize=(12, 6))\nsns.barplot(x=\"Importance\", y=\"Feature\", data=feature_importance_df, palette=\"viridis\")\nplt.xlabel(\"Feature Importance Score\")\nplt.ylabel(\"Features\")\nplt.title(\"Feature Importance - XGBoost Model\")\nplt.show()\n\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T07:59:46.013380Z","iopub.execute_input":"2025-03-19T07:59:46.014496Z","iopub.status.idle":"2025-03-19T07:59:47.305019Z","shell.execute_reply.started":"2025-03-19T07:59:46.014439Z","shell.execute_reply":"2025-03-19T07:59:47.303716Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 1200x600 with 1 Axes>","image/png":""},"metadata":{}},{"name":"stdout","text":"Top 10 Most Important Features:\n     Feature  Importance\n3          3    0.191540\n19        19    0.114758\n38        38    0.052801\n20        20    0.049987\n18        18    0.037115\n28        28    0.036471\n11        11    0.029577\n12        12    0.028541\n166      166    0.028084\n32        32    0.024493\n","output_type":"stream"}],"execution_count":149},{"cell_type":"code","source":"print(type(X_train))  # Check if it's a DataFrame or NumPy array\nprint(X_train.shape)  # Check dimensions\nif isinstance(X_train, pd.DataFrame):\n    print(X_train.columns)  # Print column names if it's a DataFrame\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T08:01:17.965068Z","iopub.execute_input":"2025-03-19T08:01:17.965553Z","iopub.status.idle":"2025-03-19T08:01:17.972650Z","shell.execute_reply.started":"2025-03-19T08:01:17.965513Z","shell.execute_reply":"2025-03-19T08:01:17.971385Z"}},"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\n(1151, 194)\nRangeIndex(start=0, stop=194, step=1)\n","output_type":"stream"}],"execution_count":150},{"cell_type":"markdown","source":"### **What is VotingRegressor?**  \n- `VotingRegressor` is an ensemble technique that **combines multiple regression models** to make a final prediction by averaging their outputs.  \n- This approach helps improve **model performance, reduce variance, and create a more stable prediction** compared to using a single model.  \n","metadata":{}},{"cell_type":"code","source":"# Import the necessary module\nfrom sklearn.ensemble import VotingRegressor\nvr = VotingRegressor([('gbr', GBR_cv.best_estimator_),\n                      ('xgb', xgb_cv.best_estimator_),\n                      ('ridge', ridge_cv.best_estimator_)],\n                    weights=[2,3,1])\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T08:03:08.317756Z","iopub.execute_input":"2025-03-19T08:03:08.318241Z","iopub.status.idle":"2025-03-19T08:03:08.356910Z","shell.execute_reply.started":"2025-03-19T08:03:08.318207Z","shell.execute_reply":"2025-03-19T08:03:08.355259Z"}},"outputs":[{"traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)","Cell \u001b[0;32mIn[151], line 3\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[38;5;66;03m# Import the necessary module\u001b[39;00m\n\u001b[1;32m      2\u001b[0m \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01msklearn\u001b[39;00m\u001b[38;5;21;01m.\u001b[39;00m\u001b[38;5;21;01mensemble\u001b[39;00m \u001b[38;5;28;01mimport\u001b[39;00m VotingRegressor\n\u001b[0;32m----> 3\u001b[0m vr \u001b[38;5;241m=\u001b[39m VotingRegressor([(\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mgbr\u001b[39m\u001b[38;5;124m'\u001b[39m, \u001b[43mGBR_cv\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mbest_estimator_\u001b[49m),\n\u001b[1;32m      4\u001b[0m                       (\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mxgb\u001b[39m\u001b[38;5;124m'\u001b[39m, xgb_cv\u001b[38;5;241m.\u001b[39mbest_estimator_),\n\u001b[1;32m      5\u001b[0m                       (\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mridge\u001b[39m\u001b[38;5;124m'\u001b[39m, ridge_cv\u001b[38;5;241m.\u001b[39mbest_estimator_)],\n\u001b[1;32m      6\u001b[0m                     weights\u001b[38;5;241m=\u001b[39m[\u001b[38;5;241m2\u001b[39m,\u001b[38;5;241m3\u001b[39m,\u001b[38;5;241m1\u001b[39m])\n","\u001b[0;31mAttributeError\u001b[0m: 'GridSearchCV' object has no attribute 'best_estimator_'"],"ename":"AttributeError","evalue":"'GridSearchCV' object has no attribute 'best_estimator_'","output_type":"error"}],"execution_count":151},{"cell_type":"code","source":"vr.fit(X_train, y_train)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:19:16.410901Z","iopub.status.idle":"2025-03-19T06:19:16.411448Z","shell.execute_reply.started":"2025-03-19T06:19:16.411164Z","shell.execute_reply":"2025-03-19T06:19:16.411193Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"y_pred_vr = vr.predict(X_test)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:19:16.412852Z","iopub.status.idle":"2025-03-19T06:19:16.413408Z","shell.execute_reply.started":"2025-03-19T06:19:16.413109Z","shell.execute_reply":"2025-03-19T06:19:16.413137Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"mean_squared_error(y_test, y_pred_vr, squared=False)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:19:16.415243Z","iopub.status.idle":"2025-03-19T06:19:16.415806Z","shell.execute_reply.started":"2025-03-19T06:19:16.415502Z","shell.execute_reply":"2025-03-19T06:19:16.415530Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"\n### **What is Stacking Regressor?**  \n- `Stacking Regressor` is an **ensemble learning technique** that **combines multiple base models (estimators)** and feeds their predictions into a **meta-model** (final estimator) to make a final prediction.  \n- Unlike `VotingRegressor`, which **averages predictions**, Stacking trains a **meta-model** on the predictions of base models to learn an optimal combination.  \n\n### **Difference Between Voting and Stacking Regressor (In Simple Terms)**\n\nVoting Regressor: Think of it like a group decision where multiple models make predictions, and we take the average (or weighted average) of their outputs. It doesn't learn from the predictions‚Äîit just combines them.\n\nStacking Regressor: Imagine a team project where each team member (model) gives their opinion, and then a team leader (meta-model) looks at their answers and decides the final output. The meta-model learns which models are more reliable in different situations, improving accuracy.\n\n\n## **When to Use Stacking?**  \n- When different models **capture different patterns** in the data.  \n- If individual models perform well but **combining them could improve accuracy**.  \n- When a dataset has **complex relationships that a single model might miss**.  \n","metadata":{}},{"cell_type":"code","source":"estimators = [\n    ('gbr', GBR_cv.best_estimator_),\n    ('xgb', xgb_cv.best_estimator_),\n    ('cat', cat_cv.best_estimator_),\n    ('lgb', lgbm_cv.best_estimator_),\n    ('rfr', rfr_cv.best_estimator_),\n]\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:19:16.417062Z","iopub.status.idle":"2025-03-19T06:19:16.417608Z","shell.execute_reply.started":"2025-03-19T06:19:16.417307Z","shell.execute_reply":"2025-03-19T06:19:16.417334Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"#Import the necessary module\nfrom sklearn.ensemble import StackingRegressor\nstackreg = StackingRegressor(\n            estimators = estimators,\n            final_estimator = vr\n)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:19:16.419511Z","iopub.status.idle":"2025-03-19T06:19:16.420901Z","shell.execute_reply.started":"2025-03-19T06:19:16.420570Z","shell.execute_reply":"2025-03-19T06:19:16.420631Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"\nstackreg.fit(X_train, y_train)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:19:16.422069Z","iopub.status.idle":"2025-03-19T06:19:16.422628Z","shell.execute_reply.started":"2025-03-19T06:19:16.422323Z","shell.execute_reply":"2025-03-19T06:19:16.422351Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"y_pred_stack = stackreg.predict(X_test)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:19:16.424560Z","iopub.status.idle":"2025-03-19T06:19:16.425169Z","shell.execute_reply.started":"2025-03-19T06:19:16.424867Z","shell.execute_reply":"2025-03-19T06:19:16.424896Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"mean_squared_error(y_test, y_pred_stack, squared=False)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:19:16.427003Z","iopub.status.idle":"2025-03-19T06:19:16.427382Z","shell.execute_reply.started":"2025-03-19T06:19:16.427202Z","shell.execute_reply":"2025-03-19T06:19:16.427221Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"df_test_preprocess = pipeline.transform(test_df)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:19:16.429696Z","iopub.status.idle":"2025-03-19T06:19:16.430097Z","shell.execute_reply.started":"2025-03-19T06:19:16.429906Z","shell.execute_reply":"2025-03-19T06:19:16.429926Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"In housing price prediction, the best model is the one with the lowest RMSE (Root Mean Squared Error) because a lower RMSE means better accuracy in predicting house prices.\n\nBased on model results:\n\n- Ridge Regression: 0.112977 **(Lowest RMSE)**\n- Gradient Boosting Regressor (GBR): 0.113523\n- CatBoost: 0.115289\n- XGBoost (XGB): 0.117083\n- Voting Regressor: 0.117737\n- Stacking Regressor: 0.118517\n- LightGBM (LGBM): 0.123941\n- Random Forest Regressor (RFR): 0.131522\n- Linear Regression: 5.43896 **(Worst)**\n  \n### Best Model: Ridge Regression (0.112977) ","metadata":{}},{"cell_type":"code","source":"y_stacking = np.exp(ridge_cv.predict(df_test_preprocess))\n\n# Creating a new DataFrame with the 'Id' column\ndf_y_stacking_out = test_df[['Id']].copy()  # Use .copy() to avoid modifying the original DataFrame\n\n# Safely assign the 'SalePrice' column using .loc[]\ndf_y_stacking_out.loc[:, 'SalePrice'] = y_stacking\n\n# Save the results to a CSV file\ndf_y_stacking_out.to_csv('submission.csv', index=False)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:19:16.431517Z","iopub.status.idle":"2025-03-19T06:19:16.431959Z","shell.execute_reply.started":"2025-03-19T06:19:16.431773Z","shell.execute_reply":"2025-03-19T06:19:16.431794Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"print(\"First 20 predicted house prices:\")\ndf_y_stacking_out[:20]","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-19T06:19:16.433812Z","iopub.status.idle":"2025-03-19T06:19:16.434365Z","shell.execute_reply.started":"2025-03-19T06:19:16.434079Z","shell.execute_reply":"2025-03-19T06:19:16.434111Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null}]}